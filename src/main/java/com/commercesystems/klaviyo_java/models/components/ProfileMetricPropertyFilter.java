/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.commercesystems.klaviyo_java.models.components;


import com.commercesystems.klaviyo_java.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import org.openapitools.jackson.nullable.JsonNullable;


public class ProfileMetricPropertyFilter {

    @JsonProperty("property")
    private String property;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("filter")
    private JsonNullable<? extends Filter> filter;

    @JsonCreator
    public ProfileMetricPropertyFilter(
            @JsonProperty("property") String property,
            @JsonProperty("filter") JsonNullable<? extends Filter> filter) {
        Utils.checkNotNull(property, "property");
        Utils.checkNotNull(filter, "filter");
        this.property = property;
        this.filter = filter;
    }
    
    public ProfileMetricPropertyFilter(
            String property) {
        this(property, JsonNullable.undefined());
    }

    @JsonIgnore
    public String property() {
        return property;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<Filter> filter() {
        return (JsonNullable<Filter>) filter;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public ProfileMetricPropertyFilter withProperty(String property) {
        Utils.checkNotNull(property, "property");
        this.property = property;
        return this;
    }

    public ProfileMetricPropertyFilter withFilter(Filter filter) {
        Utils.checkNotNull(filter, "filter");
        this.filter = JsonNullable.of(filter);
        return this;
    }

    public ProfileMetricPropertyFilter withFilter(JsonNullable<? extends Filter> filter) {
        Utils.checkNotNull(filter, "filter");
        this.filter = filter;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ProfileMetricPropertyFilter other = (ProfileMetricPropertyFilter) o;
        return 
            Objects.deepEquals(this.property, other.property) &&
            Objects.deepEquals(this.filter, other.filter);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            property,
            filter);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ProfileMetricPropertyFilter.class,
                "property", property,
                "filter", filter);
    }
    
    public final static class Builder {
 
        private String property;
 
        private JsonNullable<? extends Filter> filter = JsonNullable.undefined();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder property(String property) {
            Utils.checkNotNull(property, "property");
            this.property = property;
            return this;
        }

        public Builder filter(Filter filter) {
            Utils.checkNotNull(filter, "filter");
            this.filter = JsonNullable.of(filter);
            return this;
        }

        public Builder filter(JsonNullable<? extends Filter> filter) {
            Utils.checkNotNull(filter, "filter");
            this.filter = filter;
            return this;
        }
        
        public ProfileMetricPropertyFilter build() {
            return new ProfileMetricPropertyFilter(
                property,
                filter);
        }
    }
}

