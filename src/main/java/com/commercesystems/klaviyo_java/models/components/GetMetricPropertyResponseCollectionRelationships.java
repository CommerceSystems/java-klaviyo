/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.commercesystems.klaviyo_java.models.components;


import com.commercesystems.klaviyo_java.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import java.util.Optional;


public class GetMetricPropertyResponseCollectionRelationships {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metric")
    private Optional<? extends GetMetricPropertyResponseCollectionMetric> metric;

    @JsonCreator
    public GetMetricPropertyResponseCollectionRelationships(
            @JsonProperty("metric") Optional<? extends GetMetricPropertyResponseCollectionMetric> metric) {
        Utils.checkNotNull(metric, "metric");
        this.metric = metric;
    }
    
    public GetMetricPropertyResponseCollectionRelationships() {
        this(Optional.empty());
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<GetMetricPropertyResponseCollectionMetric> metric() {
        return (Optional<GetMetricPropertyResponseCollectionMetric>) metric;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public GetMetricPropertyResponseCollectionRelationships withMetric(GetMetricPropertyResponseCollectionMetric metric) {
        Utils.checkNotNull(metric, "metric");
        this.metric = Optional.ofNullable(metric);
        return this;
    }

    public GetMetricPropertyResponseCollectionRelationships withMetric(Optional<? extends GetMetricPropertyResponseCollectionMetric> metric) {
        Utils.checkNotNull(metric, "metric");
        this.metric = metric;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetMetricPropertyResponseCollectionRelationships other = (GetMetricPropertyResponseCollectionRelationships) o;
        return 
            Objects.deepEquals(this.metric, other.metric);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            metric);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetMetricPropertyResponseCollectionRelationships.class,
                "metric", metric);
    }
    
    public final static class Builder {
 
        private Optional<? extends GetMetricPropertyResponseCollectionMetric> metric = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder metric(GetMetricPropertyResponseCollectionMetric metric) {
            Utils.checkNotNull(metric, "metric");
            this.metric = Optional.ofNullable(metric);
            return this;
        }

        public Builder metric(Optional<? extends GetMetricPropertyResponseCollectionMetric> metric) {
            Utils.checkNotNull(metric, "metric");
            this.metric = metric;
            return this;
        }
        
        public GetMetricPropertyResponseCollectionRelationships build() {
            return new GetMetricPropertyResponseCollectionRelationships(
                metric);
        }
    }
}

