/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.commercesystems.klaviyo_java.models.components;


import com.commercesystems.klaviyo_java.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.time.LocalDate;
import java.util.Objects;


public class STOScheduleOptions {

    /**
     * The day to send on
     */
    @JsonProperty("date")
    private LocalDate date;

    @JsonCreator
    public STOScheduleOptions(
            @JsonProperty("date") LocalDate date) {
        Utils.checkNotNull(date, "date");
        this.date = date;
    }

    /**
     * The day to send on
     */
    @JsonIgnore
    public LocalDate date() {
        return date;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * The day to send on
     */
    public STOScheduleOptions withDate(LocalDate date) {
        Utils.checkNotNull(date, "date");
        this.date = date;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        STOScheduleOptions other = (STOScheduleOptions) o;
        return 
            Objects.deepEquals(this.date, other.date);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            date);
    }
    
    @Override
    public String toString() {
        return Utils.toString(STOScheduleOptions.class,
                "date", date);
    }
    
    public final static class Builder {
 
        private LocalDate date;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The day to send on
         */
        public Builder date(LocalDate date) {
            Utils.checkNotNull(date, "date");
            this.date = date;
            return this;
        }
        
        public STOScheduleOptions build() {
            return new STOScheduleOptions(
                date);
        }
    }
}

