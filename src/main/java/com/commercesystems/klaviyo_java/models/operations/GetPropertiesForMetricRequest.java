/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.commercesystems.klaviyo_java.models.operations;


import com.commercesystems.klaviyo_java.utils.LazySingletonValue;
import com.commercesystems.klaviyo_java.utils.SpeakeasyMetadata;
import com.commercesystems.klaviyo_java.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.core.type.TypeReference;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.List;
import java.util.Objects;
import java.util.Optional;


public class GetPropertiesForMetricRequest {

    /**
     * The ID of the metric
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=id")
    private String id;

    /**
     * Request additional fields not included by default in the response. Supported values: 'sample_values'
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=false,name=additional-fields[metric-property]")
    private Optional<? extends List<QueryParamAdditionalFieldsMetricProperty>> additionalFieldsMetricProperty;

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=false,name=fields[metric-property]")
    private Optional<? extends List<QueryParamFieldsMetricProperty>> fieldsMetricProperty;

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=revision")
    private String revision;

    @JsonCreator
    public GetPropertiesForMetricRequest(
            String id,
            Optional<? extends List<QueryParamAdditionalFieldsMetricProperty>> additionalFieldsMetricProperty,
            Optional<? extends List<QueryParamFieldsMetricProperty>> fieldsMetricProperty,
            String revision) {
        Utils.checkNotNull(id, "id");
        Utils.checkNotNull(additionalFieldsMetricProperty, "additionalFieldsMetricProperty");
        Utils.checkNotNull(fieldsMetricProperty, "fieldsMetricProperty");
        Utils.checkNotNull(revision, "revision");
        this.id = id;
        this.additionalFieldsMetricProperty = additionalFieldsMetricProperty;
        this.fieldsMetricProperty = fieldsMetricProperty;
        this.revision = revision;
    }
    
    public GetPropertiesForMetricRequest(
            String id,
            String revision) {
        this(id, Optional.empty(), Optional.empty(), revision);
    }

    /**
     * The ID of the metric
     */
    @JsonIgnore
    public String id() {
        return id;
    }

    /**
     * Request additional fields not included by default in the response. Supported values: 'sample_values'
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<List<QueryParamAdditionalFieldsMetricProperty>> additionalFieldsMetricProperty() {
        return (Optional<List<QueryParamAdditionalFieldsMetricProperty>>) additionalFieldsMetricProperty;
    }

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<List<QueryParamFieldsMetricProperty>> fieldsMetricProperty() {
        return (Optional<List<QueryParamFieldsMetricProperty>>) fieldsMetricProperty;
    }

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     */
    @JsonIgnore
    public String revision() {
        return revision;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * The ID of the metric
     */
    public GetPropertiesForMetricRequest withId(String id) {
        Utils.checkNotNull(id, "id");
        this.id = id;
        return this;
    }

    /**
     * Request additional fields not included by default in the response. Supported values: 'sample_values'
     */
    public GetPropertiesForMetricRequest withAdditionalFieldsMetricProperty(List<QueryParamAdditionalFieldsMetricProperty> additionalFieldsMetricProperty) {
        Utils.checkNotNull(additionalFieldsMetricProperty, "additionalFieldsMetricProperty");
        this.additionalFieldsMetricProperty = Optional.ofNullable(additionalFieldsMetricProperty);
        return this;
    }

    /**
     * Request additional fields not included by default in the response. Supported values: 'sample_values'
     */
    public GetPropertiesForMetricRequest withAdditionalFieldsMetricProperty(Optional<? extends List<QueryParamAdditionalFieldsMetricProperty>> additionalFieldsMetricProperty) {
        Utils.checkNotNull(additionalFieldsMetricProperty, "additionalFieldsMetricProperty");
        this.additionalFieldsMetricProperty = additionalFieldsMetricProperty;
        return this;
    }

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets
     */
    public GetPropertiesForMetricRequest withFieldsMetricProperty(List<QueryParamFieldsMetricProperty> fieldsMetricProperty) {
        Utils.checkNotNull(fieldsMetricProperty, "fieldsMetricProperty");
        this.fieldsMetricProperty = Optional.ofNullable(fieldsMetricProperty);
        return this;
    }

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets
     */
    public GetPropertiesForMetricRequest withFieldsMetricProperty(Optional<? extends List<QueryParamFieldsMetricProperty>> fieldsMetricProperty) {
        Utils.checkNotNull(fieldsMetricProperty, "fieldsMetricProperty");
        this.fieldsMetricProperty = fieldsMetricProperty;
        return this;
    }

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     */
    public GetPropertiesForMetricRequest withRevision(String revision) {
        Utils.checkNotNull(revision, "revision");
        this.revision = revision;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetPropertiesForMetricRequest other = (GetPropertiesForMetricRequest) o;
        return 
            Objects.deepEquals(this.id, other.id) &&
            Objects.deepEquals(this.additionalFieldsMetricProperty, other.additionalFieldsMetricProperty) &&
            Objects.deepEquals(this.fieldsMetricProperty, other.fieldsMetricProperty) &&
            Objects.deepEquals(this.revision, other.revision);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            id,
            additionalFieldsMetricProperty,
            fieldsMetricProperty,
            revision);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetPropertiesForMetricRequest.class,
                "id", id,
                "additionalFieldsMetricProperty", additionalFieldsMetricProperty,
                "fieldsMetricProperty", fieldsMetricProperty,
                "revision", revision);
    }
    
    public final static class Builder {
 
        private String id;
 
        private Optional<? extends List<QueryParamAdditionalFieldsMetricProperty>> additionalFieldsMetricProperty = Optional.empty();
 
        private Optional<? extends List<QueryParamFieldsMetricProperty>> fieldsMetricProperty = Optional.empty();
 
        private String revision;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The ID of the metric
         */
        public Builder id(String id) {
            Utils.checkNotNull(id, "id");
            this.id = id;
            return this;
        }

        /**
         * Request additional fields not included by default in the response. Supported values: 'sample_values'
         */
        public Builder additionalFieldsMetricProperty(List<QueryParamAdditionalFieldsMetricProperty> additionalFieldsMetricProperty) {
            Utils.checkNotNull(additionalFieldsMetricProperty, "additionalFieldsMetricProperty");
            this.additionalFieldsMetricProperty = Optional.ofNullable(additionalFieldsMetricProperty);
            return this;
        }

        /**
         * Request additional fields not included by default in the response. Supported values: 'sample_values'
         */
        public Builder additionalFieldsMetricProperty(Optional<? extends List<QueryParamAdditionalFieldsMetricProperty>> additionalFieldsMetricProperty) {
            Utils.checkNotNull(additionalFieldsMetricProperty, "additionalFieldsMetricProperty");
            this.additionalFieldsMetricProperty = additionalFieldsMetricProperty;
            return this;
        }

        /**
         * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets
         */
        public Builder fieldsMetricProperty(List<QueryParamFieldsMetricProperty> fieldsMetricProperty) {
            Utils.checkNotNull(fieldsMetricProperty, "fieldsMetricProperty");
            this.fieldsMetricProperty = Optional.ofNullable(fieldsMetricProperty);
            return this;
        }

        /**
         * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets
         */
        public Builder fieldsMetricProperty(Optional<? extends List<QueryParamFieldsMetricProperty>> fieldsMetricProperty) {
            Utils.checkNotNull(fieldsMetricProperty, "fieldsMetricProperty");
            this.fieldsMetricProperty = fieldsMetricProperty;
            return this;
        }

        /**
         * API endpoint revision (format: YYYY-MM-DD[.suffix])
         */
        public Builder revision(String revision) {
            Utils.checkNotNull(revision, "revision");
            this.revision = revision;
            return this;
        }
        
        public GetPropertiesForMetricRequest build() {
            if (revision == null) {
                revision = _SINGLETON_VALUE_Revision.value();
            }            return new GetPropertiesForMetricRequest(
                id,
                additionalFieldsMetricProperty,
                fieldsMetricProperty,
                revision);
        }

        private static final LazySingletonValue<String> _SINGLETON_VALUE_Revision =
                new LazySingletonValue<>(
                        "revision",
                        "\"2024-10-15\"",
                        new TypeReference<String>() {});
    }
}

