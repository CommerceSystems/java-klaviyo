/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.commercesystems.klaviyo_java.models.operations;

import com.commercesystems.klaviyo_java.models.components.CampaignCloneQuery;
import com.commercesystems.klaviyo_java.models.components.CampaignCreateQuery;
import com.commercesystems.klaviyo_java.models.components.CampaignMessageAssignTemplateQuery;
import com.commercesystems.klaviyo_java.models.components.CampaignMessagePartialUpdateQuery;
import com.commercesystems.klaviyo_java.models.components.CampaignPartialUpdateQuery;
import com.commercesystems.klaviyo_java.models.components.CampaignRecipientEstimationJobCreateQuery;
import com.commercesystems.klaviyo_java.models.components.CampaignSendJobCreateQuery;
import com.commercesystems.klaviyo_java.models.components.CampaignSendJobPartialUpdateQuery;
import com.commercesystems.klaviyo_java.models.components.CampaignValuesRequestDTO;
import com.commercesystems.klaviyo_java.models.components.CatalogCategoryCreateJobCreateQuery;
import com.commercesystems.klaviyo_java.models.components.CatalogCategoryCreateQuery;
import com.commercesystems.klaviyo_java.models.components.CatalogCategoryDeleteJobCreateQuery;
import com.commercesystems.klaviyo_java.models.components.CatalogCategoryItemOp;
import com.commercesystems.klaviyo_java.models.components.CatalogCategoryUpdateJobCreateQuery;
import com.commercesystems.klaviyo_java.models.components.CatalogCategoryUpdateQuery;
import com.commercesystems.klaviyo_java.models.components.CatalogItemCategoryOp;
import com.commercesystems.klaviyo_java.models.components.CatalogItemCreateJobCreateQuery;
import com.commercesystems.klaviyo_java.models.components.CatalogItemCreateQuery;
import com.commercesystems.klaviyo_java.models.components.CatalogItemDeleteJobCreateQuery;
import com.commercesystems.klaviyo_java.models.components.CatalogItemUpdateJobCreateQuery;
import com.commercesystems.klaviyo_java.models.components.CatalogItemUpdateQuery;
import com.commercesystems.klaviyo_java.models.components.CatalogVariantCreateJobCreateQuery;
import com.commercesystems.klaviyo_java.models.components.CatalogVariantCreateQuery;
import com.commercesystems.klaviyo_java.models.components.CatalogVariantDeleteJobCreateQuery;
import com.commercesystems.klaviyo_java.models.components.CatalogVariantUpdateJobCreateQuery;
import com.commercesystems.klaviyo_java.models.components.CatalogVariantUpdateQuery;
import com.commercesystems.klaviyo_java.models.components.ClientBISSubscriptionCreateQuery;
import com.commercesystems.klaviyo_java.models.components.CouponCodeCreateJobCreateQuery;
import com.commercesystems.klaviyo_java.models.components.CouponCodeCreateQuery;
import com.commercesystems.klaviyo_java.models.components.CouponCodeUpdateQuery;
import com.commercesystems.klaviyo_java.models.components.CouponCreateQuery;
import com.commercesystems.klaviyo_java.models.components.CouponUpdateQuery;
import com.commercesystems.klaviyo_java.models.components.DataPrivacyCreateDeletionJobQuery;
import com.commercesystems.klaviyo_java.models.components.EventCreateQueryV2;
import com.commercesystems.klaviyo_java.models.components.EventsBulkCreateJob;
import com.commercesystems.klaviyo_java.models.components.EventsBulkCreateQuery;
import com.commercesystems.klaviyo_java.models.components.FlowSeriesRequestDTO;
import com.commercesystems.klaviyo_java.models.components.FlowUpdateQuery;
import com.commercesystems.klaviyo_java.models.components.FlowValuesRequestDTO;
import com.commercesystems.klaviyo_java.models.components.FormSeriesRequestDTO;
import com.commercesystems.klaviyo_java.models.components.FormValuesRequestDTO;
import com.commercesystems.klaviyo_java.models.components.ImageCreateQuery;
import com.commercesystems.klaviyo_java.models.components.ImagePartialUpdateQuery;
import com.commercesystems.klaviyo_java.models.components.ImageUploadQuery;
import com.commercesystems.klaviyo_java.models.components.ListCreateQuery;
import com.commercesystems.klaviyo_java.models.components.ListMembersAddQuery;
import com.commercesystems.klaviyo_java.models.components.ListMembersDeleteQuery;
import com.commercesystems.klaviyo_java.models.components.ListPartialUpdateQuery;
import com.commercesystems.klaviyo_java.models.components.MetricAggregateQuery;
import com.commercesystems.klaviyo_java.models.components.OnsiteProfileCreateQuery;
import com.commercesystems.klaviyo_java.models.components.OnsiteSubscriptionCreateQueryDeprecatedOct24;
import com.commercesystems.klaviyo_java.models.components.ProfileCreateQuery;
import com.commercesystems.klaviyo_java.models.components.ProfileImportJobCreateQuery;
import com.commercesystems.klaviyo_java.models.components.ProfileMergeQuery;
import com.commercesystems.klaviyo_java.models.components.ProfilePartialUpdateQuery;
import com.commercesystems.klaviyo_java.models.components.ProfileUpsertQuery;
import com.commercesystems.klaviyo_java.models.components.PushTokenCreateQuery;
import com.commercesystems.klaviyo_java.models.components.PushTokenUnregisterQuery;
import com.commercesystems.klaviyo_java.models.components.SegmentCreateQuery;
import com.commercesystems.klaviyo_java.models.components.SegmentPartialUpdateQuery;
import com.commercesystems.klaviyo_java.models.components.SegmentSeriesRequestDTO;
import com.commercesystems.klaviyo_java.models.components.SegmentValuesRequestDTO;
import com.commercesystems.klaviyo_java.models.components.ServerBISSubscriptionCreateQuery;
import com.commercesystems.klaviyo_java.models.components.SubscriptionCreateJobCreateQuery;
import com.commercesystems.klaviyo_java.models.components.SubscriptionDeleteJobCreateQuery;
import com.commercesystems.klaviyo_java.models.components.SuppressionCreateJobCreateQuery;
import com.commercesystems.klaviyo_java.models.components.SuppressionDeleteJobCreateQuery;
import com.commercesystems.klaviyo_java.models.components.TagCampaignOp;
import com.commercesystems.klaviyo_java.models.components.TagCreateQuery;
import com.commercesystems.klaviyo_java.models.components.TagFlowOp;
import com.commercesystems.klaviyo_java.models.components.TagGroupCreateQuery;
import com.commercesystems.klaviyo_java.models.components.TagGroupUpdateQuery;
import com.commercesystems.klaviyo_java.models.components.TagListOp;
import com.commercesystems.klaviyo_java.models.components.TagSegmentOp;
import com.commercesystems.klaviyo_java.models.components.TagUpdateQuery;
import com.commercesystems.klaviyo_java.models.components.TemplateCloneQuery;
import com.commercesystems.klaviyo_java.models.components.TemplateCreateQuery;
import com.commercesystems.klaviyo_java.models.components.TemplateRenderQuery;
import com.commercesystems.klaviyo_java.models.components.TemplateUpdateQuery;
import com.commercesystems.klaviyo_java.models.components.TrackingSettingPartialUpdateQuery;
import com.commercesystems.klaviyo_java.models.components.UniversalContentCreateQuery;
import com.commercesystems.klaviyo_java.models.components.UniversalContentPartialUpdateQuery;
import com.commercesystems.klaviyo_java.models.components.WebhookCreateQuery;
import com.commercesystems.klaviyo_java.models.components.WebhookPartialUpdateQuery;
import java.lang.Exception;
import java.lang.Long;
import java.lang.String;
import java.util.List;
import java.util.Optional;

public class SDKMethodInterfaces {


    public interface MethodCallGetAccounts {
        GetAccountsResponse getAccounts(
            Optional<? extends List<FieldsAccount>> fieldsAccount,
            String revision) throws Exception;
    }


    public interface MethodCallGetAccount {
        GetAccountResponse getAccount(
            String id,
            Optional<? extends List<QueryParamFieldsAccount>> fieldsAccount,
            String revision) throws Exception;
    }


    public interface MethodCallGetCampaigns {
        GetCampaignsResponse getCampaigns(
            GetCampaignsRequest request) throws Exception;
    }


    public interface MethodCallCreateCampaign {
        CreateCampaignResponse createCampaign(
            String revision,
            CampaignCreateQuery campaignCreateQuery) throws Exception;
    }


    public interface MethodCallGetCampaign {
        GetCampaignResponse getCampaign(
            GetCampaignRequest request) throws Exception;
    }


    public interface MethodCallUpdateCampaign {
        UpdateCampaignResponse updateCampaign(
            String id,
            String revision,
            CampaignPartialUpdateQuery campaignPartialUpdateQuery) throws Exception;
    }


    public interface MethodCallDeleteCampaign {
        DeleteCampaignResponse deleteCampaign(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallGetCampaignMessage {
        GetCampaignMessageResponse getCampaignMessage(
            GetCampaignMessageRequest request) throws Exception;
    }


    public interface MethodCallUpdateCampaignMessage {
        UpdateCampaignMessageResponse updateCampaignMessage(
            String id,
            String revision,
            CampaignMessagePartialUpdateQuery campaignMessagePartialUpdateQuery) throws Exception;
    }


    public interface MethodCallGetCampaignSendJob {
        GetCampaignSendJobResponse getCampaignSendJob(
            String id,
            Optional<? extends List<FieldsCampaignSendJob>> fieldsCampaignSendJob,
            String revision) throws Exception;
    }


    public interface MethodCallCancelCampaignSend {
        CancelCampaignSendResponse cancelCampaignSend(
            String id,
            String revision,
            CampaignSendJobPartialUpdateQuery campaignSendJobPartialUpdateQuery) throws Exception;
    }


    public interface MethodCallGetCampaignRecipientEstimationJob {
        GetCampaignRecipientEstimationJobResponse getCampaignRecipientEstimationJob(
            String id,
            Optional<? extends List<FieldsCampaignRecipientEstimationJob>> fieldsCampaignRecipientEstimationJob,
            String revision) throws Exception;
    }


    public interface MethodCallGetCampaignRecipientEstimation {
        GetCampaignRecipientEstimationResponse getCampaignRecipientEstimation(
            String id,
            Optional<? extends List<FieldsCampaignRecipientEstimation>> fieldsCampaignRecipientEstimation,
            String revision) throws Exception;
    }


    public interface MethodCallCreateCampaignClone {
        CreateCampaignCloneResponse createCampaignClone(
            String revision,
            CampaignCloneQuery campaignCloneQuery) throws Exception;
    }


    public interface MethodCallAssignTemplateToCampaignMessage {
        AssignTemplateToCampaignMessageResponse assignTemplateToCampaignMessage(
            String revision,
            CampaignMessageAssignTemplateQuery campaignMessageAssignTemplateQuery) throws Exception;
    }


    public interface MethodCallSendCampaign {
        SendCampaignResponse sendCampaign(
            String revision,
            CampaignSendJobCreateQuery campaignSendJobCreateQuery) throws Exception;
    }


    public interface MethodCallRefreshCampaignRecipientEstimation {
        RefreshCampaignRecipientEstimationResponse refreshCampaignRecipientEstimation(
            String revision,
            CampaignRecipientEstimationJobCreateQuery campaignRecipientEstimationJobCreateQuery) throws Exception;
    }


    public interface MethodCallGetCampaignIdForCampaignMessage {
        GetCampaignIdForCampaignMessageResponse getCampaignIdForCampaignMessage(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallGetCampaignForCampaignMessage {
        GetCampaignForCampaignMessageResponse getCampaignForCampaignMessage(
            String id,
            Optional<? extends List<GetCampaignForCampaignMessageQueryParamFieldsCampaign>> fieldsCampaign,
            String revision) throws Exception;
    }


    public interface MethodCallGetTemplateIdForCampaignMessage {
        GetTemplateIdForCampaignMessageResponse getTemplateIdForCampaignMessage(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallGetTemplateForCampaignMessage {
        GetTemplateForCampaignMessageResponse getTemplateForCampaignMessage(
            String id,
            Optional<? extends List<QueryParamFieldsTemplate>> fieldsTemplate,
            String revision) throws Exception;
    }


    public interface MethodCallGetTagIdsForCampaign {
        GetTagIdsForCampaignResponse getTagIdsForCampaign(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallGetCampaignTags {
        GetCampaignTagsResponse getCampaignTags(
            String id,
            Optional<? extends List<GetCampaignTagsQueryParamFieldsTag>> fieldsTag,
            String revision) throws Exception;
    }


    public interface MethodCallGetMessageIdsForCampaign {
        GetMessageIdsForCampaignResponse getMessageIdsForCampaign(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallGetMessagesForCampaign {
        GetMessagesForCampaignResponse getMessagesForCampaign(
            GetMessagesForCampaignRequest request) throws Exception;
    }


    public interface MethodCallGetCatalogItems {
        GetCatalogItemsResponse getCatalogItems(
            GetCatalogItemsRequest request) throws Exception;
    }


    public interface MethodCallCreateCatalogItem {
        CreateCatalogItemResponse createCatalogItem(
            String revision,
            CatalogItemCreateQuery catalogItemCreateQuery) throws Exception;
    }


    public interface MethodCallGetCatalogItem {
        GetCatalogItemResponse getCatalogItem(
            GetCatalogItemRequest request) throws Exception;
    }


    public interface MethodCallUpdateCatalogItem {
        UpdateCatalogItemResponse updateCatalogItem(
            String id,
            String revision,
            CatalogItemUpdateQuery catalogItemUpdateQuery) throws Exception;
    }


    public interface MethodCallDeleteCatalogItem {
        DeleteCatalogItemResponse deleteCatalogItem(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallGetCatalogVariants {
        GetCatalogVariantsResponse getCatalogVariants(
            GetCatalogVariantsRequest request) throws Exception;
    }


    public interface MethodCallCreateCatalogVariant {
        CreateCatalogVariantResponse createCatalogVariant(
            String revision,
            CatalogVariantCreateQuery catalogVariantCreateQuery) throws Exception;
    }


    public interface MethodCallGetCatalogVariant {
        GetCatalogVariantResponse getCatalogVariant(
            String id,
            Optional<? extends List<GetCatalogVariantQueryParamFieldsCatalogVariant>> fieldsCatalogVariant,
            String revision) throws Exception;
    }


    public interface MethodCallUpdateCatalogVariant {
        UpdateCatalogVariantResponse updateCatalogVariant(
            String id,
            String revision,
            CatalogVariantUpdateQuery catalogVariantUpdateQuery) throws Exception;
    }


    public interface MethodCallDeleteCatalogVariant {
        DeleteCatalogVariantResponse deleteCatalogVariant(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallGetCatalogCategories {
        GetCatalogCategoriesResponse getCatalogCategories(
            GetCatalogCategoriesRequest request) throws Exception;
    }


    public interface MethodCallCreateCatalogCategory {
        CreateCatalogCategoryResponse createCatalogCategory(
            String revision,
            CatalogCategoryCreateQuery catalogCategoryCreateQuery) throws Exception;
    }


    public interface MethodCallGetCatalogCategory {
        GetCatalogCategoryResponse getCatalogCategory(
            String id,
            Optional<? extends List<QueryParamFieldsCatalogCategory>> fieldsCatalogCategory,
            String revision) throws Exception;
    }


    public interface MethodCallUpdateCatalogCategory {
        UpdateCatalogCategoryResponse updateCatalogCategory(
            String id,
            String revision,
            CatalogCategoryUpdateQuery catalogCategoryUpdateQuery) throws Exception;
    }


    public interface MethodCallDeleteCatalogCategory {
        DeleteCatalogCategoryResponse deleteCatalogCategory(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallGetBulkCreateCatalogItemsJobs {
        GetBulkCreateCatalogItemsJobsResponse getBulkCreateCatalogItemsJobs(
            Optional<? extends List<FieldsCatalogItemBulkCreateJob>> fieldsCatalogItemBulkCreateJob,
            Optional<String> filter,
            Optional<String> pageCursor,
            String revision) throws Exception;
    }


    public interface MethodCallBulkCreateCatalogItems {
        BulkCreateCatalogItemsResponse bulkCreateCatalogItems(
            String revision,
            CatalogItemCreateJobCreateQuery catalogItemCreateJobCreateQuery) throws Exception;
    }


    public interface MethodCallGetBulkCreateCatalogItemsJob {
        GetBulkCreateCatalogItemsJobResponse getBulkCreateCatalogItemsJob(
            GetBulkCreateCatalogItemsJobRequest request) throws Exception;
    }


    public interface MethodCallGetBulkUpdateCatalogItemsJobs {
        GetBulkUpdateCatalogItemsJobsResponse getBulkUpdateCatalogItemsJobs(
            Optional<? extends List<FieldsCatalogItemBulkUpdateJob>> fieldsCatalogItemBulkUpdateJob,
            Optional<String> filter,
            Optional<String> pageCursor,
            String revision) throws Exception;
    }


    public interface MethodCallBulkUpdateCatalogItems {
        BulkUpdateCatalogItemsResponse bulkUpdateCatalogItems(
            String revision,
            CatalogItemUpdateJobCreateQuery catalogItemUpdateJobCreateQuery) throws Exception;
    }


    public interface MethodCallGetBulkUpdateCatalogItemsJob {
        GetBulkUpdateCatalogItemsJobResponse getBulkUpdateCatalogItemsJob(
            GetBulkUpdateCatalogItemsJobRequest request) throws Exception;
    }


    public interface MethodCallGetBulkDeleteCatalogItemsJobs {
        GetBulkDeleteCatalogItemsJobsResponse getBulkDeleteCatalogItemsJobs(
            Optional<? extends List<FieldsCatalogItemBulkDeleteJob>> fieldsCatalogItemBulkDeleteJob,
            Optional<String> filter,
            Optional<String> pageCursor,
            String revision) throws Exception;
    }


    public interface MethodCallBulkDeleteCatalogItems {
        BulkDeleteCatalogItemsResponse bulkDeleteCatalogItems(
            String revision,
            CatalogItemDeleteJobCreateQuery catalogItemDeleteJobCreateQuery) throws Exception;
    }


    public interface MethodCallGetBulkDeleteCatalogItemsJob {
        GetBulkDeleteCatalogItemsJobResponse getBulkDeleteCatalogItemsJob(
            String jobId,
            Optional<? extends List<QueryParamFieldsCatalogItemBulkDeleteJob>> fieldsCatalogItemBulkDeleteJob,
            String revision) throws Exception;
    }


    public interface MethodCallGetCreateVariantsJobs {
        GetCreateVariantsJobsResponse getCreateVariantsJobs(
            Optional<? extends List<FieldsCatalogVariantBulkCreateJob>> fieldsCatalogVariantBulkCreateJob,
            Optional<String> filter,
            Optional<String> pageCursor,
            String revision) throws Exception;
    }


    public interface MethodCallBulkCreateCatalogVariants {
        BulkCreateCatalogVariantsResponse bulkCreateCatalogVariants(
            String revision,
            CatalogVariantCreateJobCreateQuery catalogVariantCreateJobCreateQuery) throws Exception;
    }


    public interface MethodCallGetCreateVariantsJob {
        GetCreateVariantsJobResponse getCreateVariantsJob(
            GetCreateVariantsJobRequest request) throws Exception;
    }


    public interface MethodCallGetUpdateVariantsJobs {
        GetUpdateVariantsJobsResponse getUpdateVariantsJobs(
            Optional<? extends List<FieldsCatalogVariantBulkUpdateJob>> fieldsCatalogVariantBulkUpdateJob,
            Optional<String> filter,
            Optional<String> pageCursor,
            String revision) throws Exception;
    }


    public interface MethodCallBulkUpdateCatalogVariants {
        BulkUpdateCatalogVariantsResponse bulkUpdateCatalogVariants(
            String revision,
            CatalogVariantUpdateJobCreateQuery catalogVariantUpdateJobCreateQuery) throws Exception;
    }


    public interface MethodCallGetUpdateVariantsJob {
        GetUpdateVariantsJobResponse getUpdateVariantsJob(
            GetUpdateVariantsJobRequest request) throws Exception;
    }


    public interface MethodCallGetDeleteVariantsJobs {
        GetDeleteVariantsJobsResponse getDeleteVariantsJobs(
            Optional<? extends List<FieldsCatalogVariantBulkDeleteJob>> fieldsCatalogVariantBulkDeleteJob,
            Optional<String> filter,
            Optional<String> pageCursor,
            String revision) throws Exception;
    }


    public interface MethodCallBulkDeleteCatalogVariants {
        BulkDeleteCatalogVariantsResponse bulkDeleteCatalogVariants(
            String revision,
            CatalogVariantDeleteJobCreateQuery catalogVariantDeleteJobCreateQuery) throws Exception;
    }


    public interface MethodCallGetDeleteVariantsJob {
        GetDeleteVariantsJobResponse getDeleteVariantsJob(
            String jobId,
            Optional<? extends List<QueryParamFieldsCatalogVariantBulkDeleteJob>> fieldsCatalogVariantBulkDeleteJob,
            String revision) throws Exception;
    }


    public interface MethodCallGetCreateCategoriesJobs {
        GetCreateCategoriesJobsResponse getCreateCategoriesJobs(
            Optional<? extends List<FieldsCatalogCategoryBulkCreateJob>> fieldsCatalogCategoryBulkCreateJob,
            Optional<String> filter,
            Optional<String> pageCursor,
            String revision) throws Exception;
    }


    public interface MethodCallBulkCreateCatalogCategories {
        BulkCreateCatalogCategoriesResponse bulkCreateCatalogCategories(
            String revision,
            CatalogCategoryCreateJobCreateQuery catalogCategoryCreateJobCreateQuery) throws Exception;
    }


    public interface MethodCallGetCreateCategoriesJob {
        GetCreateCategoriesJobResponse getCreateCategoriesJob(
            GetCreateCategoriesJobRequest request) throws Exception;
    }


    public interface MethodCallGetUpdateCategoriesJobs {
        GetUpdateCategoriesJobsResponse getUpdateCategoriesJobs(
            Optional<? extends List<FieldsCatalogCategoryBulkUpdateJob>> fieldsCatalogCategoryBulkUpdateJob,
            Optional<String> filter,
            Optional<String> pageCursor,
            String revision) throws Exception;
    }


    public interface MethodCallBulkUpdateCatalogCategories {
        BulkUpdateCatalogCategoriesResponse bulkUpdateCatalogCategories(
            String revision,
            CatalogCategoryUpdateJobCreateQuery catalogCategoryUpdateJobCreateQuery) throws Exception;
    }


    public interface MethodCallGetUpdateCategoriesJob {
        GetUpdateCategoriesJobResponse getUpdateCategoriesJob(
            GetUpdateCategoriesJobRequest request) throws Exception;
    }


    public interface MethodCallGetDeleteCategoriesJobs {
        GetDeleteCategoriesJobsResponse getDeleteCategoriesJobs(
            Optional<? extends List<FieldsCatalogCategoryBulkDeleteJob>> fieldsCatalogCategoryBulkDeleteJob,
            Optional<String> filter,
            Optional<String> pageCursor,
            String revision) throws Exception;
    }


    public interface MethodCallBulkDeleteCatalogCategories {
        BulkDeleteCatalogCategoriesResponse bulkDeleteCatalogCategories(
            String revision,
            CatalogCategoryDeleteJobCreateQuery catalogCategoryDeleteJobCreateQuery) throws Exception;
    }


    public interface MethodCallGetDeleteCategoriesJob {
        GetDeleteCategoriesJobResponse getDeleteCategoriesJob(
            String jobId,
            Optional<? extends List<QueryParamFieldsCatalogCategoryBulkDeleteJob>> fieldsCatalogCategoryBulkDeleteJob,
            String revision) throws Exception;
    }


    public interface MethodCallCreateBackInStockSubscription {
        CreateBackInStockSubscriptionResponse createBackInStockSubscription(
            String revision,
            ServerBISSubscriptionCreateQuery serverBISSubscriptionCreateQuery) throws Exception;
    }


    public interface MethodCallGetItemsForCatalogCategory {
        GetItemsForCatalogCategoryResponse getItemsForCatalogCategory(
            GetItemsForCatalogCategoryRequest request) throws Exception;
    }


    public interface MethodCallGetVariantsForCatalogItem {
        GetVariantsForCatalogItemResponse getVariantsForCatalogItem(
            GetVariantsForCatalogItemRequest request) throws Exception;
    }


    public interface MethodCallGetCategoriesForCatalogItem {
        GetCategoriesForCatalogItemResponse getCategoriesForCatalogItem(
            GetCategoriesForCatalogItemRequest request) throws Exception;
    }


    public interface MethodCallGetItemIdsForCatalogCategory {
        GetItemIdsForCatalogCategoryResponse getItemIdsForCatalogCategory(
            String id,
            Optional<String> pageCursor,
            String revision) throws Exception;
    }


    public interface MethodCallAddItemsToCatalogCategory {
        AddItemsToCatalogCategoryResponse addItemsToCatalogCategory(
            String id,
            String revision,
            CatalogCategoryItemOp catalogCategoryItemOp) throws Exception;
    }


    public interface MethodCallUpdateItemsForCatalogCategory {
        UpdateItemsForCatalogCategoryResponse updateItemsForCatalogCategory(
            String id,
            String revision,
            CatalogCategoryItemOp catalogCategoryItemOp) throws Exception;
    }


    public interface MethodCallRemoveItemsFromCatalogCategory {
        RemoveItemsFromCatalogCategoryResponse removeItemsFromCatalogCategory(
            String id,
            String revision,
            CatalogCategoryItemOp catalogCategoryItemOp) throws Exception;
    }


    public interface MethodCallGetCategoryIdsForCatalogItem {
        GetCategoryIdsForCatalogItemResponse getCategoryIdsForCatalogItem(
            String id,
            Optional<String> pageCursor,
            String revision) throws Exception;
    }


    public interface MethodCallAddCategoryToCatalogItem {
        AddCategoryToCatalogItemResponse addCategoryToCatalogItem(
            String id,
            String revision,
            CatalogItemCategoryOp catalogItemCategoryOp) throws Exception;
    }


    public interface MethodCallUpdateCategoriesForCatalogItem {
        UpdateCategoriesForCatalogItemResponse updateCategoriesForCatalogItem(
            String id,
            String revision,
            CatalogItemCategoryOp catalogItemCategoryOp) throws Exception;
    }


    public interface MethodCallRemoveCategoriesFromCatalogItem {
        RemoveCategoriesFromCatalogItemResponse removeCategoriesFromCatalogItem(
            String id,
            String revision,
            CatalogItemCategoryOp catalogItemCategoryOp) throws Exception;
    }


    public interface MethodCallGetCoupons {
        GetCouponsResponse getCoupons(
            Optional<? extends List<FieldsCoupon>> fieldsCoupon,
            Optional<String> pageCursor,
            String revision) throws Exception;
    }


    public interface MethodCallCreateCoupon {
        CreateCouponResponse createCoupon(
            String revision,
            CouponCreateQuery couponCreateQuery) throws Exception;
    }


    public interface MethodCallGetCoupon {
        GetCouponResponse getCoupon(
            String id,
            Optional<? extends List<QueryParamFieldsCoupon>> fieldsCoupon,
            String revision) throws Exception;
    }


    public interface MethodCallUpdateCoupon {
        UpdateCouponResponse updateCoupon(
            String id,
            String revision,
            CouponUpdateQuery couponUpdateQuery) throws Exception;
    }


    public interface MethodCallDeleteCoupon {
        DeleteCouponResponse deleteCoupon(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallGetCouponCodes {
        GetCouponCodesResponse getCouponCodes(
            GetCouponCodesRequest request) throws Exception;
    }


    public interface MethodCallCreateCouponCode {
        CreateCouponCodeResponse createCouponCode(
            String revision,
            CouponCodeCreateQuery couponCodeCreateQuery) throws Exception;
    }


    public interface MethodCallGetCouponCode {
        GetCouponCodeResponse getCouponCode(
            GetCouponCodeRequest request) throws Exception;
    }


    public interface MethodCallUpdateCouponCode {
        UpdateCouponCodeResponse updateCouponCode(
            String id,
            String revision,
            CouponCodeUpdateQuery couponCodeUpdateQuery) throws Exception;
    }


    public interface MethodCallDeleteCouponCode {
        DeleteCouponCodeResponse deleteCouponCode(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallGetBulkCreateCouponCodeJobs {
        GetBulkCreateCouponCodeJobsResponse getBulkCreateCouponCodeJobs(
            Optional<? extends List<FieldsCouponCodeBulkCreateJob>> fieldsCouponCodeBulkCreateJob,
            Optional<String> filter,
            Optional<String> pageCursor,
            String revision) throws Exception;
    }


    public interface MethodCallBulkCreateCouponCodes {
        BulkCreateCouponCodesResponse bulkCreateCouponCodes(
            String revision,
            CouponCodeCreateJobCreateQuery couponCodeCreateJobCreateQuery) throws Exception;
    }


    public interface MethodCallGetBulkCreateCouponCodesJob {
        GetBulkCreateCouponCodesJobResponse getBulkCreateCouponCodesJob(
            GetBulkCreateCouponCodesJobRequest request) throws Exception;
    }


    public interface MethodCallGetCouponForCouponCode {
        GetCouponForCouponCodeResponse getCouponForCouponCode(
            String id,
            Optional<? extends List<GetCouponForCouponCodeQueryParamFieldsCoupon>> fieldsCoupon,
            String revision) throws Exception;
    }


    public interface MethodCallGetCouponIdForCouponCode {
        GetCouponIdForCouponCodeResponse getCouponIdForCouponCode(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallGetCouponCodesForCoupon {
        GetCouponCodesForCouponResponse getCouponCodesForCoupon(
            GetCouponCodesForCouponRequest request) throws Exception;
    }


    public interface MethodCallGetCodeIdsForCoupon {
        GetCodeIdsForCouponResponse getCodeIdsForCoupon(
            String id,
            Optional<String> pageCursor,
            String revision) throws Exception;
    }


    public interface MethodCallRequestProfileDeletion {
        RequestProfileDeletionResponse requestProfileDeletion(
            String revision,
            DataPrivacyCreateDeletionJobQuery dataPrivacyCreateDeletionJobQuery) throws Exception;
    }


    public interface MethodCallGetEvents {
        GetEventsResponse getEvents(
            GetEventsRequest request) throws Exception;
    }


    public interface MethodCallCreateEvent {
        CreateEventResponse createEvent(
            String revision,
            EventCreateQueryV2 eventCreateQueryV2) throws Exception;
    }


    public interface MethodCallGetEvent {
        GetEventResponse getEvent(
            GetEventRequest request) throws Exception;
    }


    public interface MethodCallBulkCreateEvents {
        BulkCreateEventsResponse bulkCreateEvents(
            String revision,
            EventsBulkCreateJob eventsBulkCreateJob) throws Exception;
    }


    public interface MethodCallGetMetricIdForEvent {
        GetMetricIdForEventResponse getMetricIdForEvent(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallGetEventMetric {
        GetEventMetricResponse getEventMetric(
            String id,
            Optional<? extends List<GetEventMetricQueryParamFieldsMetric>> fieldsMetric,
            String revision) throws Exception;
    }


    public interface MethodCallGetProfileIdForEvent {
        GetProfileIdForEventResponse getProfileIdForEvent(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallGetEventProfile {
        GetEventProfileResponse getEventProfile(
            String id,
            Optional<? extends List<AdditionalFieldsProfile>> additionalFieldsProfile,
            Optional<? extends List<GetEventProfileQueryParamFieldsProfile>> fieldsProfile,
            String revision) throws Exception;
    }


    public interface MethodCallGetFlows {
        GetFlowsResponse getFlows(
            GetFlowsRequest request) throws Exception;
    }


    public interface MethodCallGetFlow {
        GetFlowResponse getFlow(
            GetFlowRequest request) throws Exception;
    }


    public interface MethodCallUpdateFlow {
        UpdateFlowResponse updateFlow(
            String id,
            String revision,
            FlowUpdateQuery flowUpdateQuery) throws Exception;
    }


    public interface MethodCallDeleteFlow {
        DeleteFlowResponse deleteFlow(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallGetFlowAction {
        GetFlowActionResponse getFlowAction(
            GetFlowActionRequest request) throws Exception;
    }


    public interface MethodCallGetFlowMessage {
        GetFlowMessageResponse getFlowMessage(
            GetFlowMessageRequest request) throws Exception;
    }


    public interface MethodCallGetActionsForFlow {
        GetActionsForFlowResponse getActionsForFlow(
            GetActionsForFlowRequest request) throws Exception;
    }


    public interface MethodCallGetActionIdsForFlow {
        GetActionIdsForFlowResponse getActionIdsForFlow(
            GetActionIdsForFlowRequest request) throws Exception;
    }


    public interface MethodCallGetTagIdsForFlow {
        GetTagIdsForFlowResponse getTagIdsForFlow(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallGetFlowTags {
        GetFlowTagsResponse getFlowTags(
            String id,
            Optional<? extends List<GetFlowTagsQueryParamFieldsTag>> fieldsTag,
            String revision) throws Exception;
    }


    public interface MethodCallGetFlowActionFlow {
        GetFlowActionFlowResponse getFlowActionFlow(
            String id,
            Optional<? extends List<GetFlowActionFlowQueryParamFieldsFlow>> fieldsFlow,
            String revision) throws Exception;
    }


    public interface MethodCallGetFlowIdForFlowAction {
        GetFlowIdForFlowActionResponse getFlowIdForFlowAction(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallGetMessagesForFlowAction {
        GetMessagesForFlowActionResponse getMessagesForFlowAction(
            GetMessagesForFlowActionRequest request) throws Exception;
    }


    public interface MethodCallGetMessageIdsForFlowAction {
        GetMessageIdsForFlowActionResponse getMessageIdsForFlowAction(
            GetMessageIdsForFlowActionRequest request) throws Exception;
    }


    public interface MethodCallGetFlowMessageAction {
        GetFlowMessageActionResponse getFlowMessageAction(
            String id,
            Optional<? extends List<GetFlowMessageActionQueryParamFieldsFlowAction>> fieldsFlowAction,
            String revision) throws Exception;
    }


    public interface MethodCallGetActionIdForFlowMessage {
        GetActionIdForFlowMessageResponse getActionIdForFlowMessage(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallGetTemplateIdForFlowMessage {
        GetTemplateIdForFlowMessageResponse getTemplateIdForFlowMessage(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallGetTemplateForFlowMessage {
        GetTemplateForFlowMessageResponse getTemplateForFlowMessage(
            String id,
            Optional<? extends List<GetTemplateForFlowMessageQueryParamFieldsTemplate>> fieldsTemplate,
            String revision) throws Exception;
    }


    public interface MethodCallGetForms {
        GetFormsResponse getForms(
            GetFormsRequest request) throws Exception;
    }


    public interface MethodCallGetForm {
        GetFormResponse getForm(
            GetFormRequest request) throws Exception;
    }


    public interface MethodCallGetFormVersion {
        GetFormVersionResponse getFormVersion(
            String id,
            Optional<? extends List<QueryParamFieldsFormVersion>> fieldsFormVersion,
            String revision) throws Exception;
    }


    public interface MethodCallGetVersionsForForm {
        GetVersionsForFormResponse getVersionsForForm(
            GetVersionsForFormRequest request) throws Exception;
    }


    public interface MethodCallGetVersionIdsForForm {
        GetVersionIdsForFormResponse getVersionIdsForForm(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallGetFormIdForFormVersion {
        GetFormIdForFormVersionResponse getFormIdForFormVersion(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallGetFormForFormVersion {
        GetFormForFormVersionResponse getFormForFormVersion(
            String id,
            Optional<? extends List<GetFormForFormVersionQueryParamFieldsForm>> fieldsForm,
            String revision) throws Exception;
    }


    public interface MethodCallGetImages {
        GetImagesResponse getImages(
            GetImagesRequest request) throws Exception;
    }


    public interface MethodCallUploadImageFromUrl {
        UploadImageFromUrlResponse uploadImageFromUrl(
            String revision,
            ImageCreateQuery imageCreateQuery) throws Exception;
    }


    public interface MethodCallGetImage {
        GetImageResponse getImage(
            String id,
            Optional<? extends List<QueryParamFieldsImage>> fieldsImage,
            String revision) throws Exception;
    }


    public interface MethodCallUpdateImage {
        UpdateImageResponse updateImage(
            String id,
            String revision,
            ImagePartialUpdateQuery imagePartialUpdateQuery) throws Exception;
    }


    public interface MethodCallUploadImageFromFile {
        UploadImageFromFileResponse uploadImageFromFile(
            String revision,
            ImageUploadQuery imageUploadQuery) throws Exception;
    }


    public interface MethodCallGetLists {
        GetListsResponse getLists(
            GetListsRequest request) throws Exception;
    }


    public interface MethodCallCreateList {
        CreateListResponse createList(
            String revision,
            ListCreateQuery listCreateQuery) throws Exception;
    }


    public interface MethodCallGetList {
        GetListResponse getList(
            GetListRequest request) throws Exception;
    }


    public interface MethodCallUpdateList {
        UpdateListResponse updateList(
            String id,
            String revision,
            ListPartialUpdateQuery listPartialUpdateQuery) throws Exception;
    }


    public interface MethodCallDeleteList {
        DeleteListResponse deleteList(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallGetTagIdsForList {
        GetTagIdsForListResponse getTagIdsForList(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallGetListTags {
        GetListTagsResponse getListTags(
            String id,
            Optional<? extends List<GetListTagsQueryParamFieldsTag>> fieldsTag,
            String revision) throws Exception;
    }


    public interface MethodCallGetProfileIdsForList {
        GetProfileIdsForListResponse getProfileIdsForList(
            GetProfileIdsForListRequest request) throws Exception;
    }


    public interface MethodCallCreateListRelationships {
        CreateListRelationshipsResponse createListRelationships(
            String id,
            String revision,
            ListMembersAddQuery listMembersAddQuery) throws Exception;
    }


    public interface MethodCallDeleteListRelationships {
        DeleteListRelationshipsResponse deleteListRelationships(
            String id,
            String revision,
            ListMembersDeleteQuery listMembersDeleteQuery) throws Exception;
    }


    public interface MethodCallGetListProfiles {
        GetListProfilesResponse getListProfiles(
            GetListProfilesRequest request) throws Exception;
    }


    public interface MethodCallGetListRelationshipsFlowTriggers {
        GetListRelationshipsFlowTriggersResponse getListRelationshipsFlowTriggers(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallGetListFlowTriggers {
        GetListFlowTriggersResponse getListFlowTriggers(
            String id,
            Optional<? extends List<GetListFlowTriggersQueryParamFieldsFlow>> fieldsFlow,
            String revision) throws Exception;
    }


    public interface MethodCallGetMetrics {
        GetMetricsResponse getMetrics(
            GetMetricsRequest request) throws Exception;
    }


    public interface MethodCallGetMetric {
        GetMetricResponse getMetric(
            GetMetricRequest request) throws Exception;
    }


    public interface MethodCallGetMetricProperty {
        GetMetricPropertyResponse getMetricProperty(
            GetMetricPropertyRequest request) throws Exception;
    }


    public interface MethodCallQueryMetricAggregates {
        QueryMetricAggregatesResponse queryMetricAggregates(
            String revision,
            MetricAggregateQuery metricAggregateQuery) throws Exception;
    }


    public interface MethodCallGetMetricRelationshipsFlowTriggers {
        GetMetricRelationshipsFlowTriggersResponse getMetricRelationshipsFlowTriggers(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallGetMetricFlowTriggers {
        GetMetricFlowTriggersResponse getMetricFlowTriggers(
            String id,
            Optional<? extends List<GetMetricFlowTriggersQueryParamFieldsFlow>> fieldsFlow,
            String revision) throws Exception;
    }


    public interface MethodCallGetMetricIdForMetricProperty {
        GetMetricIdForMetricPropertyResponse getMetricIdForMetricProperty(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallGetPropertiesForMetric {
        GetPropertiesForMetricResponse getPropertiesForMetric(
            String id,
            Optional<? extends List<QueryParamAdditionalFieldsMetricProperty>> additionalFieldsMetricProperty,
            Optional<? extends List<QueryParamFieldsMetricProperty>> fieldsMetricProperty,
            String revision) throws Exception;
    }


    public interface MethodCallGetPropertyIdsForMetric {
        GetPropertyIdsForMetricResponse getPropertyIdsForMetric(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallGetMetricForMetricProperty {
        GetMetricForMetricPropertyResponse getMetricForMetricProperty(
            String id,
            Optional<? extends List<GetMetricForMetricPropertyQueryParamFieldsMetric>> fieldsMetric,
            String revision) throws Exception;
    }


    public interface MethodCallGetProfiles {
        GetProfilesResponse getProfiles(
            GetProfilesRequest request) throws Exception;
    }


    public interface MethodCallCreateProfile {
        CreateProfileResponse createProfile(
            Optional<? extends List<CreateProfileQueryParamAdditionalFieldsProfile>> additionalFieldsProfile,
            String revision,
            ProfileCreateQuery profileCreateQuery) throws Exception;
    }


    public interface MethodCallGetProfile {
        GetProfileResponse getProfile(
            GetProfileRequest request) throws Exception;
    }


    public interface MethodCallUpdateProfile {
        UpdateProfileResponse updateProfile(
            String id,
            Optional<? extends List<UpdateProfileQueryParamAdditionalFieldsProfile>> additionalFieldsProfile,
            String revision,
            ProfilePartialUpdateQuery profilePartialUpdateQuery) throws Exception;
    }


    public interface MethodCallGetBulkImportProfilesJobs {
        GetBulkImportProfilesJobsResponse getBulkImportProfilesJobs(
            GetBulkImportProfilesJobsRequest request) throws Exception;
    }


    public interface MethodCallSpawnBulkProfileImportJob {
        SpawnBulkProfileImportJobResponse spawnBulkProfileImportJob(
            String revision,
            ProfileImportJobCreateQuery profileImportJobCreateQuery) throws Exception;
    }


    public interface MethodCallGetBulkImportProfilesJob {
        GetBulkImportProfilesJobResponse getBulkImportProfilesJob(
            GetBulkImportProfilesJobRequest request) throws Exception;
    }


    public interface MethodCallGetBulkSuppressProfilesJobs {
        GetBulkSuppressProfilesJobsResponse getBulkSuppressProfilesJobs(
            GetBulkSuppressProfilesJobsRequest request) throws Exception;
    }


    public interface MethodCallBulkSuppressProfiles {
        BulkSuppressProfilesResponse bulkSuppressProfiles(
            String revision,
            SuppressionCreateJobCreateQuery suppressionCreateJobCreateQuery) throws Exception;
    }


    public interface MethodCallGetBulkSuppressProfilesJob {
        GetBulkSuppressProfilesJobResponse getBulkSuppressProfilesJob(
            String jobId,
            Optional<? extends List<QueryParamFieldsProfileSuppressionBulkCreateJob>> fieldsProfileSuppressionBulkCreateJob,
            String revision) throws Exception;
    }


    public interface MethodCallGetBulkUnsuppressProfilesJobs {
        GetBulkUnsuppressProfilesJobsResponse getBulkUnsuppressProfilesJobs(
            GetBulkUnsuppressProfilesJobsRequest request) throws Exception;
    }


    public interface MethodCallBulkUnsuppressProfiles {
        BulkUnsuppressProfilesResponse bulkUnsuppressProfiles(
            String revision,
            SuppressionDeleteJobCreateQuery suppressionDeleteJobCreateQuery) throws Exception;
    }


    public interface MethodCallGetBulkUnsuppressProfilesJob {
        GetBulkUnsuppressProfilesJobResponse getBulkUnsuppressProfilesJob(
            String jobId,
            Optional<? extends List<QueryParamFieldsProfileSuppressionBulkDeleteJob>> fieldsProfileSuppressionBulkDeleteJob,
            String revision) throws Exception;
    }


    public interface MethodCallCreateOrUpdateProfile {
        CreateOrUpdateProfileResponse createOrUpdateProfile(
            Optional<? extends List<CreateOrUpdateProfileQueryParamAdditionalFieldsProfile>> additionalFieldsProfile,
            String revision,
            ProfileUpsertQuery profileUpsertQuery) throws Exception;
    }


    public interface MethodCallMergeProfiles {
        MergeProfilesResponse mergeProfiles(
            String revision,
            ProfileMergeQuery profileMergeQuery) throws Exception;
    }


    public interface MethodCallBulkSubscribeProfiles {
        BulkSubscribeProfilesResponse bulkSubscribeProfiles(
            String revision,
            SubscriptionCreateJobCreateQuery subscriptionCreateJobCreateQuery) throws Exception;
    }


    public interface MethodCallBulkUnsubscribeProfiles {
        BulkUnsubscribeProfilesResponse bulkUnsubscribeProfiles(
            String revision,
            SubscriptionDeleteJobCreateQuery subscriptionDeleteJobCreateQuery) throws Exception;
    }


    public interface MethodCallCreatePushToken {
        CreatePushTokenResponse createPushToken(
            String revision,
            PushTokenCreateQuery pushTokenCreateQuery) throws Exception;
    }


    public interface MethodCallGetListsForProfile {
        GetListsForProfileResponse getListsForProfile(
            String id,
            Optional<? extends List<GetListsForProfileQueryParamFieldsList>> fieldsList,
            String revision) throws Exception;
    }


    public interface MethodCallGetListIdsForProfile {
        GetListIdsForProfileResponse getListIdsForProfile(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallGetSegmentsForProfile {
        GetSegmentsForProfileResponse getSegmentsForProfile(
            String id,
            Optional<? extends List<QueryParamFieldsSegment>> fieldsSegment,
            String revision) throws Exception;
    }


    public interface MethodCallGetSegmentIdsForProfile {
        GetSegmentIdsForProfileResponse getSegmentIdsForProfile(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallGetListForBulkImportProfilesJob {
        GetListForBulkImportProfilesJobResponse getListForBulkImportProfilesJob(
            String id,
            Optional<? extends List<GetListForBulkImportProfilesJobQueryParamFieldsList>> fieldsList,
            String revision) throws Exception;
    }


    public interface MethodCallGetListIdsForBulkImportProfilesJob {
        GetListIdsForBulkImportProfilesJobResponse getListIdsForBulkImportProfilesJob(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallGetProfilesForBulkImportProfilesJob {
        GetProfilesForBulkImportProfilesJobResponse getProfilesForBulkImportProfilesJob(
            GetProfilesForBulkImportProfilesJobRequest request) throws Exception;
    }


    public interface MethodCallGetProfileIdsForBulkImportProfilesJob {
        GetProfileIdsForBulkImportProfilesJobResponse getProfileIdsForBulkImportProfilesJob(
            String id,
            Optional<String> pageCursor,
            Optional<Long> pageSize,
            String revision) throws Exception;
    }


    public interface MethodCallGetErrorsForBulkImportProfilesJob {
        GetErrorsForBulkImportProfilesJobResponse getErrorsForBulkImportProfilesJob(
            GetErrorsForBulkImportProfilesJobRequest request) throws Exception;
    }


    public interface MethodCallQueryCampaignValues {
        QueryCampaignValuesResponse queryCampaignValues(
            Optional<String> pageCursor,
            String revision,
            CampaignValuesRequestDTO campaignValuesRequestDTO) throws Exception;
    }


    public interface MethodCallQueryFlowValues {
        QueryFlowValuesResponse queryFlowValues(
            Optional<String> pageCursor,
            String revision,
            FlowValuesRequestDTO flowValuesRequestDTO) throws Exception;
    }


    public interface MethodCallQueryFlowSeries {
        QueryFlowSeriesResponse queryFlowSeries(
            Optional<String> pageCursor,
            String revision,
            FlowSeriesRequestDTO flowSeriesRequestDTO) throws Exception;
    }


    public interface MethodCallQueryFormValues {
        QueryFormValuesResponse queryFormValues(
            String revision,
            FormValuesRequestDTO formValuesRequestDTO) throws Exception;
    }


    public interface MethodCallQueryFormSeries {
        QueryFormSeriesResponse queryFormSeries(
            String revision,
            FormSeriesRequestDTO formSeriesRequestDTO) throws Exception;
    }


    public interface MethodCallQuerySegmentValues {
        QuerySegmentValuesResponse querySegmentValues(
            String revision,
            SegmentValuesRequestDTO segmentValuesRequestDTO) throws Exception;
    }


    public interface MethodCallQuerySegmentSeries {
        QuerySegmentSeriesResponse querySegmentSeries(
            String revision,
            SegmentSeriesRequestDTO segmentSeriesRequestDTO) throws Exception;
    }


    public interface MethodCallGetReviews {
        GetReviewsResponse getReviews(
            GetReviewsRequest request) throws Exception;
    }


    public interface MethodCallGetReview {
        GetReviewResponse getReview(
            GetReviewRequest request) throws Exception;
    }


    public interface MethodCallGetSegments {
        GetSegmentsResponse getSegments(
            GetSegmentsRequest request) throws Exception;
    }


    public interface MethodCallCreateSegment {
        CreateSegmentResponse createSegment(
            String revision,
            SegmentCreateQuery segmentCreateQuery) throws Exception;
    }


    public interface MethodCallGetSegment {
        GetSegmentResponse getSegment(
            GetSegmentRequest request) throws Exception;
    }


    public interface MethodCallUpdateSegment {
        UpdateSegmentResponse updateSegment(
            String id,
            String revision,
            SegmentPartialUpdateQuery segmentPartialUpdateQuery) throws Exception;
    }


    public interface MethodCallDeleteSegment {
        DeleteSegmentResponse deleteSegment(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallGetTagIdsForSegment {
        GetTagIdsForSegmentResponse getTagIdsForSegment(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallGetTagsForSegment {
        GetTagsForSegmentResponse getTagsForSegment(
            String id,
            Optional<? extends List<GetTagsForSegmentQueryParamFieldsTag>> fieldsTag,
            String revision) throws Exception;
    }


    public interface MethodCallGetProfileIdsForSegment {
        GetProfileIdsForSegmentResponse getProfileIdsForSegment(
            GetProfileIdsForSegmentRequest request) throws Exception;
    }


    public interface MethodCallGetProfilesForSegment {
        GetProfilesForSegmentResponse getProfilesForSegment(
            GetProfilesForSegmentRequest request) throws Exception;
    }


    public interface MethodCallGetSegmentRelationshipsFlowTriggers {
        GetSegmentRelationshipsFlowTriggersResponse getSegmentRelationshipsFlowTriggers(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallGetSegmentFlowTriggers {
        GetSegmentFlowTriggersResponse getSegmentFlowTriggers(
            String id,
            Optional<? extends List<GetSegmentFlowTriggersQueryParamFieldsFlow>> fieldsFlow,
            String revision) throws Exception;
    }


    public interface MethodCallGetTags {
        GetTagsResponse getTags(
            GetTagsRequest request) throws Exception;
    }


    public interface MethodCallCreateTag {
        CreateTagResponse createTag(
            String revision,
            TagCreateQuery tagCreateQuery) throws Exception;
    }


    public interface MethodCallGetTag {
        GetTagResponse getTag(
            GetTagRequest request) throws Exception;
    }


    public interface MethodCallUpdateTag {
        UpdateTagResponse updateTag(
            String id,
            String revision,
            TagUpdateQuery tagUpdateQuery) throws Exception;
    }


    public interface MethodCallDeleteTag {
        DeleteTagResponse deleteTag(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallGetTagGroups {
        GetTagGroupsResponse getTagGroups(
            GetTagGroupsRequest request) throws Exception;
    }


    public interface MethodCallCreateTagGroup {
        CreateTagGroupResponse createTagGroup(
            String revision,
            TagGroupCreateQuery tagGroupCreateQuery) throws Exception;
    }


    public interface MethodCallGetTagGroup {
        GetTagGroupResponse getTagGroup(
            String id,
            Optional<? extends List<GetTagGroupQueryParamFieldsTagGroup>> fieldsTagGroup,
            String revision) throws Exception;
    }


    public interface MethodCallUpdateTagGroup {
        UpdateTagGroupResponse updateTagGroup(
            String id,
            String revision,
            TagGroupUpdateQuery tagGroupUpdateQuery) throws Exception;
    }


    public interface MethodCallDeleteTagGroup {
        DeleteTagGroupResponse deleteTagGroup(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallGetFlowIdsForTag {
        GetFlowIdsForTagResponse getFlowIdsForTag(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallTagFlows {
        TagFlowsResponse tagFlows(
            String id,
            String revision,
            TagFlowOp tagFlowOp) throws Exception;
    }


    public interface MethodCallRemoveTagFromFlows {
        RemoveTagFromFlowsResponse removeTagFromFlows(
            String id,
            String revision,
            TagFlowOp tagFlowOp) throws Exception;
    }


    public interface MethodCallGetCampaignIdsForTag {
        GetCampaignIdsForTagResponse getCampaignIdsForTag(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallTagCampaigns {
        TagCampaignsResponse tagCampaigns(
            String id,
            String revision,
            TagCampaignOp tagCampaignOp) throws Exception;
    }


    public interface MethodCallRemoveTagFromCampaigns {
        RemoveTagFromCampaignsResponse removeTagFromCampaigns(
            String id,
            String revision,
            TagCampaignOp tagCampaignOp) throws Exception;
    }


    public interface MethodCallGetListIdsForTag {
        GetListIdsForTagResponse getListIdsForTag(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallTagLists {
        TagListsResponse tagLists(
            String id,
            String revision,
            TagListOp tagListOp) throws Exception;
    }


    public interface MethodCallRemoveTagFromLists {
        RemoveTagFromListsResponse removeTagFromLists(
            String id,
            String revision,
            TagListOp tagListOp) throws Exception;
    }


    public interface MethodCallGetSegmentIdsForTag {
        GetSegmentIdsForTagResponse getSegmentIdsForTag(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallTagSegments {
        TagSegmentsResponse tagSegments(
            String id,
            String revision,
            TagSegmentOp tagSegmentOp) throws Exception;
    }


    public interface MethodCallRemoveTagFromSegments {
        RemoveTagFromSegmentsResponse removeTagFromSegments(
            String id,
            String revision,
            TagSegmentOp tagSegmentOp) throws Exception;
    }


    public interface MethodCallGetTagGroupIdForTag {
        GetTagGroupIdForTagResponse getTagGroupIdForTag(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallGetTagIdsForTagGroup {
        GetTagIdsForTagGroupResponse getTagIdsForTagGroup(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallGetTagGroupForTag {
        GetTagGroupForTagResponse getTagGroupForTag(
            String id,
            Optional<? extends List<GetTagGroupForTagQueryParamFieldsTagGroup>> fieldsTagGroup,
            String revision) throws Exception;
    }


    public interface MethodCallGetTagsForTagGroup {
        GetTagsForTagGroupResponse getTagsForTagGroup(
            String id,
            Optional<? extends List<GetTagsForTagGroupQueryParamFieldsTag>> fieldsTag,
            String revision) throws Exception;
    }


    public interface MethodCallGetTemplates {
        GetTemplatesResponse getTemplates(
            GetTemplatesRequest request) throws Exception;
    }


    public interface MethodCallCreateTemplate {
        CreateTemplateResponse createTemplate(
            String revision,
            TemplateCreateQuery templateCreateQuery) throws Exception;
    }


    public interface MethodCallGetTemplate {
        GetTemplateResponse getTemplate(
            String id,
            Optional<? extends List<GetTemplateQueryParamFieldsTemplate>> fieldsTemplate,
            String revision) throws Exception;
    }


    public interface MethodCallUpdateTemplate {
        UpdateTemplateResponse updateTemplate(
            String id,
            String revision,
            TemplateUpdateQuery templateUpdateQuery) throws Exception;
    }


    public interface MethodCallDeleteTemplate {
        DeleteTemplateResponse deleteTemplate(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallGetAllUniversalContent {
        GetAllUniversalContentResponse getAllUniversalContent(
            GetAllUniversalContentRequest request) throws Exception;
    }


    public interface MethodCallCreateUniversalContent {
        CreateUniversalContentResponse createUniversalContent(
            String revision,
            UniversalContentCreateQuery universalContentCreateQuery) throws Exception;
    }


    public interface MethodCallGetUniversalContent {
        GetUniversalContentResponse getUniversalContent(
            String id,
            Optional<? extends List<QueryParamFieldsTemplateUniversalContent>> fieldsTemplateUniversalContent,
            String revision) throws Exception;
    }


    public interface MethodCallUpdateUniversalContent {
        UpdateUniversalContentResponse updateUniversalContent(
            String id,
            String revision,
            UniversalContentPartialUpdateQuery universalContentPartialUpdateQuery) throws Exception;
    }


    public interface MethodCallDeleteUniversalContent {
        DeleteUniversalContentResponse deleteUniversalContent(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallRenderTemplate {
        RenderTemplateResponse renderTemplate(
            String revision,
            TemplateRenderQuery templateRenderQuery) throws Exception;
    }


    public interface MethodCallCloneTemplate {
        CloneTemplateResponse cloneTemplate(
            String revision,
            TemplateCloneQuery templateCloneQuery) throws Exception;
    }


    public interface MethodCallGetTrackingSettings {
        GetTrackingSettingsResponse getTrackingSettings(
            Optional<? extends List<FieldsTrackingSetting>> fieldsTrackingSetting,
            Optional<String> pageCursor,
            Optional<Long> pageSize,
            String revision) throws Exception;
    }


    public interface MethodCallGetTrackingSetting {
        GetTrackingSettingResponse getTrackingSetting(
            String id,
            Optional<? extends List<QueryParamFieldsTrackingSetting>> fieldsTrackingSetting,
            String revision) throws Exception;
    }


    public interface MethodCallUpdateTrackingSetting {
        UpdateTrackingSettingResponse updateTrackingSetting(
            String id,
            String revision,
            TrackingSettingPartialUpdateQuery trackingSettingPartialUpdateQuery) throws Exception;
    }


    public interface MethodCallGetWebhooks {
        GetWebhooksResponse getWebhooks(
            Optional<? extends List<FieldsWebhook>> fieldsWebhook,
            Optional<? extends List<GetWebhooksQueryParamInclude>> include,
            String revision) throws Exception;
    }


    public interface MethodCallCreateWebhook {
        CreateWebhookResponse createWebhook(
            String revision,
            WebhookCreateQuery webhookCreateQuery) throws Exception;
    }


    public interface MethodCallGetWebhook {
        GetWebhookResponse getWebhook(
            String id,
            Optional<? extends List<QueryParamFieldsWebhook>> fieldsWebhook,
            Optional<? extends List<GetWebhookQueryParamInclude>> include,
            String revision) throws Exception;
    }


    public interface MethodCallUpdateWebhook {
        UpdateWebhookResponse updateWebhook(
            String id,
            String revision,
            WebhookPartialUpdateQuery webhookPartialUpdateQuery) throws Exception;
    }


    public interface MethodCallDeleteWebhook {
        DeleteWebhookResponse deleteWebhook(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallGetWebhookTopics {
        GetWebhookTopicsResponse getWebhookTopics(
            String revision) throws Exception;
    }


    public interface MethodCallGetWebhookTopic {
        GetWebhookTopicResponse getWebhookTopic(
            String id,
            String revision) throws Exception;
    }


    public interface MethodCallCreateClientSubscription {
        CreateClientSubscriptionResponse createClientSubscription(
            String companyId,
            String revision,
            OnsiteSubscriptionCreateQueryDeprecatedOct24 onsiteSubscriptionCreateQueryDeprecatedOct24) throws Exception;
    }


    public interface MethodCallCreateClientPushToken {
        CreateClientPushTokenResponse createClientPushToken(
            String companyId,
            String revision,
            PushTokenCreateQuery pushTokenCreateQuery) throws Exception;
    }


    public interface MethodCallUnregisterClientPushToken {
        UnregisterClientPushTokenResponse unregisterClientPushToken(
            String companyId,
            String revision,
            PushTokenUnregisterQuery pushTokenUnregisterQuery) throws Exception;
    }


    public interface MethodCallCreateClientEvent {
        CreateClientEventResponse createClientEvent(
            String companyId,
            String revision,
            EventCreateQueryV2 eventCreateQueryV2) throws Exception;
    }


    public interface MethodCallCreateClientProfile {
        CreateClientProfileResponse createClientProfile(
            String companyId,
            String revision,
            OnsiteProfileCreateQuery onsiteProfileCreateQuery) throws Exception;
    }


    public interface MethodCallBulkCreateClientEvents {
        BulkCreateClientEventsResponse bulkCreateClientEvents(
            String companyId,
            String revision,
            EventsBulkCreateQuery eventsBulkCreateQuery) throws Exception;
    }


    public interface MethodCallCreateClientBackInStockSubscription {
        CreateClientBackInStockSubscriptionResponse createClientBackInStockSubscription(
            String companyId,
            String revision,
            ClientBISSubscriptionCreateQuery clientBISSubscriptionCreateQuery) throws Exception;
    }


}
