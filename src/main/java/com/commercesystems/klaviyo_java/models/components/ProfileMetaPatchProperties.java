/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.commercesystems.klaviyo_java.models.components;


import com.commercesystems.klaviyo_java.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import org.openapitools.jackson.nullable.JsonNullable;


public class ProfileMetaPatchProperties {

    /**
     * Append a simple value or values to this property array
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("append")
    private JsonNullable<? extends Append> append;

    /**
     * Remove a simple value or values from this property array
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unappend")
    private JsonNullable<? extends Unappend> unappend;

    /**
     * Remove a key or keys (and their values) completely from properties
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unset")
    private JsonNullable<? extends Unset> unset;

    @JsonCreator
    public ProfileMetaPatchProperties(
            @JsonProperty("append") JsonNullable<? extends Append> append,
            @JsonProperty("unappend") JsonNullable<? extends Unappend> unappend,
            @JsonProperty("unset") JsonNullable<? extends Unset> unset) {
        Utils.checkNotNull(append, "append");
        Utils.checkNotNull(unappend, "unappend");
        Utils.checkNotNull(unset, "unset");
        this.append = append;
        this.unappend = unappend;
        this.unset = unset;
    }
    
    public ProfileMetaPatchProperties() {
        this(JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined());
    }

    /**
     * Append a simple value or values to this property array
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<Append> append() {
        return (JsonNullable<Append>) append;
    }

    /**
     * Remove a simple value or values from this property array
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<Unappend> unappend() {
        return (JsonNullable<Unappend>) unappend;
    }

    /**
     * Remove a key or keys (and their values) completely from properties
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<Unset> unset() {
        return (JsonNullable<Unset>) unset;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * Append a simple value or values to this property array
     */
    public ProfileMetaPatchProperties withAppend(Append append) {
        Utils.checkNotNull(append, "append");
        this.append = JsonNullable.of(append);
        return this;
    }

    /**
     * Append a simple value or values to this property array
     */
    public ProfileMetaPatchProperties withAppend(JsonNullable<? extends Append> append) {
        Utils.checkNotNull(append, "append");
        this.append = append;
        return this;
    }

    /**
     * Remove a simple value or values from this property array
     */
    public ProfileMetaPatchProperties withUnappend(Unappend unappend) {
        Utils.checkNotNull(unappend, "unappend");
        this.unappend = JsonNullable.of(unappend);
        return this;
    }

    /**
     * Remove a simple value or values from this property array
     */
    public ProfileMetaPatchProperties withUnappend(JsonNullable<? extends Unappend> unappend) {
        Utils.checkNotNull(unappend, "unappend");
        this.unappend = unappend;
        return this;
    }

    /**
     * Remove a key or keys (and their values) completely from properties
     */
    public ProfileMetaPatchProperties withUnset(Unset unset) {
        Utils.checkNotNull(unset, "unset");
        this.unset = JsonNullable.of(unset);
        return this;
    }

    /**
     * Remove a key or keys (and their values) completely from properties
     */
    public ProfileMetaPatchProperties withUnset(JsonNullable<? extends Unset> unset) {
        Utils.checkNotNull(unset, "unset");
        this.unset = unset;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ProfileMetaPatchProperties other = (ProfileMetaPatchProperties) o;
        return 
            Objects.deepEquals(this.append, other.append) &&
            Objects.deepEquals(this.unappend, other.unappend) &&
            Objects.deepEquals(this.unset, other.unset);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            append,
            unappend,
            unset);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ProfileMetaPatchProperties.class,
                "append", append,
                "unappend", unappend,
                "unset", unset);
    }
    
    public final static class Builder {
 
        private JsonNullable<? extends Append> append = JsonNullable.undefined();
 
        private JsonNullable<? extends Unappend> unappend = JsonNullable.undefined();
 
        private JsonNullable<? extends Unset> unset = JsonNullable.undefined();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Append a simple value or values to this property array
         */
        public Builder append(Append append) {
            Utils.checkNotNull(append, "append");
            this.append = JsonNullable.of(append);
            return this;
        }

        /**
         * Append a simple value or values to this property array
         */
        public Builder append(JsonNullable<? extends Append> append) {
            Utils.checkNotNull(append, "append");
            this.append = append;
            return this;
        }

        /**
         * Remove a simple value or values from this property array
         */
        public Builder unappend(Unappend unappend) {
            Utils.checkNotNull(unappend, "unappend");
            this.unappend = JsonNullable.of(unappend);
            return this;
        }

        /**
         * Remove a simple value or values from this property array
         */
        public Builder unappend(JsonNullable<? extends Unappend> unappend) {
            Utils.checkNotNull(unappend, "unappend");
            this.unappend = unappend;
            return this;
        }

        /**
         * Remove a key or keys (and their values) completely from properties
         */
        public Builder unset(Unset unset) {
            Utils.checkNotNull(unset, "unset");
            this.unset = JsonNullable.of(unset);
            return this;
        }

        /**
         * Remove a key or keys (and their values) completely from properties
         */
        public Builder unset(JsonNullable<? extends Unset> unset) {
            Utils.checkNotNull(unset, "unset");
            this.unset = unset;
            return this;
        }
        
        public ProfileMetaPatchProperties build() {
            return new ProfileMetaPatchProperties(
                append,
                unappend,
                unset);
        }
    }
}

