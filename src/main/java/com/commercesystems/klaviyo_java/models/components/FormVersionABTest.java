/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.commercesystems.klaviyo_java.models.components;


import com.commercesystems.klaviyo_java.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;


public class FormVersionABTest {

    /**
     * This is the name of the AB test variation.
     */
    @JsonProperty("variation_name")
    private String variationName;

    @JsonCreator
    public FormVersionABTest(
            @JsonProperty("variation_name") String variationName) {
        Utils.checkNotNull(variationName, "variationName");
        this.variationName = variationName;
    }

    /**
     * This is the name of the AB test variation.
     */
    @JsonIgnore
    public String variationName() {
        return variationName;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * This is the name of the AB test variation.
     */
    public FormVersionABTest withVariationName(String variationName) {
        Utils.checkNotNull(variationName, "variationName");
        this.variationName = variationName;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        FormVersionABTest other = (FormVersionABTest) o;
        return 
            Objects.deepEquals(this.variationName, other.variationName);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            variationName);
    }
    
    @Override
    public String toString() {
        return Utils.toString(FormVersionABTest.class,
                "variationName", variationName);
    }
    
    public final static class Builder {
 
        private String variationName;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * This is the name of the AB test variation.
         */
        public Builder variationName(String variationName) {
            Utils.checkNotNull(variationName, "variationName");
            this.variationName = variationName;
            return this;
        }
        
        public FormVersionABTest build() {
            return new FormVersionABTest(
                variationName);
        }
    }
}

