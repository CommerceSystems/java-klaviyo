/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.commercesystems.klaviyo_java.models.components;


import com.commercesystems.klaviyo_java.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import java.util.Optional;


public class TagCreateQueryResourceObjectRelationships {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tag-group")
    private Optional<? extends TagGroup> tagGroup;

    @JsonCreator
    public TagCreateQueryResourceObjectRelationships(
            @JsonProperty("tag-group") Optional<? extends TagGroup> tagGroup) {
        Utils.checkNotNull(tagGroup, "tagGroup");
        this.tagGroup = tagGroup;
    }
    
    public TagCreateQueryResourceObjectRelationships() {
        this(Optional.empty());
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<TagGroup> tagGroup() {
        return (Optional<TagGroup>) tagGroup;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public TagCreateQueryResourceObjectRelationships withTagGroup(TagGroup tagGroup) {
        Utils.checkNotNull(tagGroup, "tagGroup");
        this.tagGroup = Optional.ofNullable(tagGroup);
        return this;
    }

    public TagCreateQueryResourceObjectRelationships withTagGroup(Optional<? extends TagGroup> tagGroup) {
        Utils.checkNotNull(tagGroup, "tagGroup");
        this.tagGroup = tagGroup;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        TagCreateQueryResourceObjectRelationships other = (TagCreateQueryResourceObjectRelationships) o;
        return 
            Objects.deepEquals(this.tagGroup, other.tagGroup);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            tagGroup);
    }
    
    @Override
    public String toString() {
        return Utils.toString(TagCreateQueryResourceObjectRelationships.class,
                "tagGroup", tagGroup);
    }
    
    public final static class Builder {
 
        private Optional<? extends TagGroup> tagGroup = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder tagGroup(TagGroup tagGroup) {
            Utils.checkNotNull(tagGroup, "tagGroup");
            this.tagGroup = Optional.ofNullable(tagGroup);
            return this;
        }

        public Builder tagGroup(Optional<? extends TagGroup> tagGroup) {
            Utils.checkNotNull(tagGroup, "tagGroup");
            this.tagGroup = tagGroup;
            return this;
        }
        
        public TagCreateQueryResourceObjectRelationships build() {
            return new TagCreateQueryResourceObjectRelationships(
                tagGroup);
        }
    }
}

