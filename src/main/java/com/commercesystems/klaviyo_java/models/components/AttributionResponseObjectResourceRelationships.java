/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.commercesystems.klaviyo_java.models.components;


import com.commercesystems.klaviyo_java.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import java.util.Optional;


public class AttributionResponseObjectResourceRelationships {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("event")
    private Optional<? extends Event> event;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("attributed-event")
    private Optional<? extends AttributedEvent> attributedEvent;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("campaign")
    private Optional<? extends AttributionResponseObjectResourceCampaign> campaign;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("campaign-message")
    private Optional<? extends CampaignMessage> campaignMessage;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("flow")
    private Optional<? extends AttributionResponseObjectResourceFlow> flow;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("flow-message")
    private Optional<? extends FlowMessage> flowMessage;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("flow-message-variation")
    private Optional<? extends FlowMessageVariation> flowMessageVariation;

    @JsonCreator
    public AttributionResponseObjectResourceRelationships(
            @JsonProperty("event") Optional<? extends Event> event,
            @JsonProperty("attributed-event") Optional<? extends AttributedEvent> attributedEvent,
            @JsonProperty("campaign") Optional<? extends AttributionResponseObjectResourceCampaign> campaign,
            @JsonProperty("campaign-message") Optional<? extends CampaignMessage> campaignMessage,
            @JsonProperty("flow") Optional<? extends AttributionResponseObjectResourceFlow> flow,
            @JsonProperty("flow-message") Optional<? extends FlowMessage> flowMessage,
            @JsonProperty("flow-message-variation") Optional<? extends FlowMessageVariation> flowMessageVariation) {
        Utils.checkNotNull(event, "event");
        Utils.checkNotNull(attributedEvent, "attributedEvent");
        Utils.checkNotNull(campaign, "campaign");
        Utils.checkNotNull(campaignMessage, "campaignMessage");
        Utils.checkNotNull(flow, "flow");
        Utils.checkNotNull(flowMessage, "flowMessage");
        Utils.checkNotNull(flowMessageVariation, "flowMessageVariation");
        this.event = event;
        this.attributedEvent = attributedEvent;
        this.campaign = campaign;
        this.campaignMessage = campaignMessage;
        this.flow = flow;
        this.flowMessage = flowMessage;
        this.flowMessageVariation = flowMessageVariation;
    }
    
    public AttributionResponseObjectResourceRelationships() {
        this(Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty());
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<Event> event() {
        return (Optional<Event>) event;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<AttributedEvent> attributedEvent() {
        return (Optional<AttributedEvent>) attributedEvent;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<AttributionResponseObjectResourceCampaign> campaign() {
        return (Optional<AttributionResponseObjectResourceCampaign>) campaign;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<CampaignMessage> campaignMessage() {
        return (Optional<CampaignMessage>) campaignMessage;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<AttributionResponseObjectResourceFlow> flow() {
        return (Optional<AttributionResponseObjectResourceFlow>) flow;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<FlowMessage> flowMessage() {
        return (Optional<FlowMessage>) flowMessage;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<FlowMessageVariation> flowMessageVariation() {
        return (Optional<FlowMessageVariation>) flowMessageVariation;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public AttributionResponseObjectResourceRelationships withEvent(Event event) {
        Utils.checkNotNull(event, "event");
        this.event = Optional.ofNullable(event);
        return this;
    }

    public AttributionResponseObjectResourceRelationships withEvent(Optional<? extends Event> event) {
        Utils.checkNotNull(event, "event");
        this.event = event;
        return this;
    }

    public AttributionResponseObjectResourceRelationships withAttributedEvent(AttributedEvent attributedEvent) {
        Utils.checkNotNull(attributedEvent, "attributedEvent");
        this.attributedEvent = Optional.ofNullable(attributedEvent);
        return this;
    }

    public AttributionResponseObjectResourceRelationships withAttributedEvent(Optional<? extends AttributedEvent> attributedEvent) {
        Utils.checkNotNull(attributedEvent, "attributedEvent");
        this.attributedEvent = attributedEvent;
        return this;
    }

    public AttributionResponseObjectResourceRelationships withCampaign(AttributionResponseObjectResourceCampaign campaign) {
        Utils.checkNotNull(campaign, "campaign");
        this.campaign = Optional.ofNullable(campaign);
        return this;
    }

    public AttributionResponseObjectResourceRelationships withCampaign(Optional<? extends AttributionResponseObjectResourceCampaign> campaign) {
        Utils.checkNotNull(campaign, "campaign");
        this.campaign = campaign;
        return this;
    }

    public AttributionResponseObjectResourceRelationships withCampaignMessage(CampaignMessage campaignMessage) {
        Utils.checkNotNull(campaignMessage, "campaignMessage");
        this.campaignMessage = Optional.ofNullable(campaignMessage);
        return this;
    }

    public AttributionResponseObjectResourceRelationships withCampaignMessage(Optional<? extends CampaignMessage> campaignMessage) {
        Utils.checkNotNull(campaignMessage, "campaignMessage");
        this.campaignMessage = campaignMessage;
        return this;
    }

    public AttributionResponseObjectResourceRelationships withFlow(AttributionResponseObjectResourceFlow flow) {
        Utils.checkNotNull(flow, "flow");
        this.flow = Optional.ofNullable(flow);
        return this;
    }

    public AttributionResponseObjectResourceRelationships withFlow(Optional<? extends AttributionResponseObjectResourceFlow> flow) {
        Utils.checkNotNull(flow, "flow");
        this.flow = flow;
        return this;
    }

    public AttributionResponseObjectResourceRelationships withFlowMessage(FlowMessage flowMessage) {
        Utils.checkNotNull(flowMessage, "flowMessage");
        this.flowMessage = Optional.ofNullable(flowMessage);
        return this;
    }

    public AttributionResponseObjectResourceRelationships withFlowMessage(Optional<? extends FlowMessage> flowMessage) {
        Utils.checkNotNull(flowMessage, "flowMessage");
        this.flowMessage = flowMessage;
        return this;
    }

    public AttributionResponseObjectResourceRelationships withFlowMessageVariation(FlowMessageVariation flowMessageVariation) {
        Utils.checkNotNull(flowMessageVariation, "flowMessageVariation");
        this.flowMessageVariation = Optional.ofNullable(flowMessageVariation);
        return this;
    }

    public AttributionResponseObjectResourceRelationships withFlowMessageVariation(Optional<? extends FlowMessageVariation> flowMessageVariation) {
        Utils.checkNotNull(flowMessageVariation, "flowMessageVariation");
        this.flowMessageVariation = flowMessageVariation;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        AttributionResponseObjectResourceRelationships other = (AttributionResponseObjectResourceRelationships) o;
        return 
            Objects.deepEquals(this.event, other.event) &&
            Objects.deepEquals(this.attributedEvent, other.attributedEvent) &&
            Objects.deepEquals(this.campaign, other.campaign) &&
            Objects.deepEquals(this.campaignMessage, other.campaignMessage) &&
            Objects.deepEquals(this.flow, other.flow) &&
            Objects.deepEquals(this.flowMessage, other.flowMessage) &&
            Objects.deepEquals(this.flowMessageVariation, other.flowMessageVariation);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            event,
            attributedEvent,
            campaign,
            campaignMessage,
            flow,
            flowMessage,
            flowMessageVariation);
    }
    
    @Override
    public String toString() {
        return Utils.toString(AttributionResponseObjectResourceRelationships.class,
                "event", event,
                "attributedEvent", attributedEvent,
                "campaign", campaign,
                "campaignMessage", campaignMessage,
                "flow", flow,
                "flowMessage", flowMessage,
                "flowMessageVariation", flowMessageVariation);
    }
    
    public final static class Builder {
 
        private Optional<? extends Event> event = Optional.empty();
 
        private Optional<? extends AttributedEvent> attributedEvent = Optional.empty();
 
        private Optional<? extends AttributionResponseObjectResourceCampaign> campaign = Optional.empty();
 
        private Optional<? extends CampaignMessage> campaignMessage = Optional.empty();
 
        private Optional<? extends AttributionResponseObjectResourceFlow> flow = Optional.empty();
 
        private Optional<? extends FlowMessage> flowMessage = Optional.empty();
 
        private Optional<? extends FlowMessageVariation> flowMessageVariation = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder event(Event event) {
            Utils.checkNotNull(event, "event");
            this.event = Optional.ofNullable(event);
            return this;
        }

        public Builder event(Optional<? extends Event> event) {
            Utils.checkNotNull(event, "event");
            this.event = event;
            return this;
        }

        public Builder attributedEvent(AttributedEvent attributedEvent) {
            Utils.checkNotNull(attributedEvent, "attributedEvent");
            this.attributedEvent = Optional.ofNullable(attributedEvent);
            return this;
        }

        public Builder attributedEvent(Optional<? extends AttributedEvent> attributedEvent) {
            Utils.checkNotNull(attributedEvent, "attributedEvent");
            this.attributedEvent = attributedEvent;
            return this;
        }

        public Builder campaign(AttributionResponseObjectResourceCampaign campaign) {
            Utils.checkNotNull(campaign, "campaign");
            this.campaign = Optional.ofNullable(campaign);
            return this;
        }

        public Builder campaign(Optional<? extends AttributionResponseObjectResourceCampaign> campaign) {
            Utils.checkNotNull(campaign, "campaign");
            this.campaign = campaign;
            return this;
        }

        public Builder campaignMessage(CampaignMessage campaignMessage) {
            Utils.checkNotNull(campaignMessage, "campaignMessage");
            this.campaignMessage = Optional.ofNullable(campaignMessage);
            return this;
        }

        public Builder campaignMessage(Optional<? extends CampaignMessage> campaignMessage) {
            Utils.checkNotNull(campaignMessage, "campaignMessage");
            this.campaignMessage = campaignMessage;
            return this;
        }

        public Builder flow(AttributionResponseObjectResourceFlow flow) {
            Utils.checkNotNull(flow, "flow");
            this.flow = Optional.ofNullable(flow);
            return this;
        }

        public Builder flow(Optional<? extends AttributionResponseObjectResourceFlow> flow) {
            Utils.checkNotNull(flow, "flow");
            this.flow = flow;
            return this;
        }

        public Builder flowMessage(FlowMessage flowMessage) {
            Utils.checkNotNull(flowMessage, "flowMessage");
            this.flowMessage = Optional.ofNullable(flowMessage);
            return this;
        }

        public Builder flowMessage(Optional<? extends FlowMessage> flowMessage) {
            Utils.checkNotNull(flowMessage, "flowMessage");
            this.flowMessage = flowMessage;
            return this;
        }

        public Builder flowMessageVariation(FlowMessageVariation flowMessageVariation) {
            Utils.checkNotNull(flowMessageVariation, "flowMessageVariation");
            this.flowMessageVariation = Optional.ofNullable(flowMessageVariation);
            return this;
        }

        public Builder flowMessageVariation(Optional<? extends FlowMessageVariation> flowMessageVariation) {
            Utils.checkNotNull(flowMessageVariation, "flowMessageVariation");
            this.flowMessageVariation = flowMessageVariation;
            return this;
        }
        
        public AttributionResponseObjectResourceRelationships build() {
            return new AttributionResponseObjectResourceRelationships(
                event,
                attributedEvent,
                campaign,
                campaignMessage,
                flow,
                flowMessage,
                flowMessageVariation);
        }
    }
}

