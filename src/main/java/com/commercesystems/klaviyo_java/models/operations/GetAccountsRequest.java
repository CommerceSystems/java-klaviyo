/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.commercesystems.klaviyo_java.models.operations;


import com.commercesystems.klaviyo_java.utils.LazySingletonValue;
import com.commercesystems.klaviyo_java.utils.SpeakeasyMetadata;
import com.commercesystems.klaviyo_java.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.core.type.TypeReference;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.List;
import java.util.Objects;
import java.util.Optional;


public class GetAccountsRequest {

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=false,name=fields[account]")
    private Optional<? extends List<FieldsAccount>> fieldsAccount;

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=revision")
    private String revision;

    @JsonCreator
    public GetAccountsRequest(
            Optional<? extends List<FieldsAccount>> fieldsAccount,
            String revision) {
        Utils.checkNotNull(fieldsAccount, "fieldsAccount");
        Utils.checkNotNull(revision, "revision");
        this.fieldsAccount = fieldsAccount;
        this.revision = revision;
    }
    
    public GetAccountsRequest(
            String revision) {
        this(Optional.empty(), revision);
    }

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<List<FieldsAccount>> fieldsAccount() {
        return (Optional<List<FieldsAccount>>) fieldsAccount;
    }

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     */
    @JsonIgnore
    public String revision() {
        return revision;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets
     */
    public GetAccountsRequest withFieldsAccount(List<FieldsAccount> fieldsAccount) {
        Utils.checkNotNull(fieldsAccount, "fieldsAccount");
        this.fieldsAccount = Optional.ofNullable(fieldsAccount);
        return this;
    }

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets
     */
    public GetAccountsRequest withFieldsAccount(Optional<? extends List<FieldsAccount>> fieldsAccount) {
        Utils.checkNotNull(fieldsAccount, "fieldsAccount");
        this.fieldsAccount = fieldsAccount;
        return this;
    }

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     */
    public GetAccountsRequest withRevision(String revision) {
        Utils.checkNotNull(revision, "revision");
        this.revision = revision;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetAccountsRequest other = (GetAccountsRequest) o;
        return 
            Objects.deepEquals(this.fieldsAccount, other.fieldsAccount) &&
            Objects.deepEquals(this.revision, other.revision);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            fieldsAccount,
            revision);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetAccountsRequest.class,
                "fieldsAccount", fieldsAccount,
                "revision", revision);
    }
    
    public final static class Builder {
 
        private Optional<? extends List<FieldsAccount>> fieldsAccount = Optional.empty();
 
        private String revision;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets
         */
        public Builder fieldsAccount(List<FieldsAccount> fieldsAccount) {
            Utils.checkNotNull(fieldsAccount, "fieldsAccount");
            this.fieldsAccount = Optional.ofNullable(fieldsAccount);
            return this;
        }

        /**
         * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets
         */
        public Builder fieldsAccount(Optional<? extends List<FieldsAccount>> fieldsAccount) {
            Utils.checkNotNull(fieldsAccount, "fieldsAccount");
            this.fieldsAccount = fieldsAccount;
            return this;
        }

        /**
         * API endpoint revision (format: YYYY-MM-DD[.suffix])
         */
        public Builder revision(String revision) {
            Utils.checkNotNull(revision, "revision");
            this.revision = revision;
            return this;
        }
        
        public GetAccountsRequest build() {
            if (revision == null) {
                revision = _SINGLETON_VALUE_Revision.value();
            }            return new GetAccountsRequest(
                fieldsAccount,
                revision);
        }

        private static final LazySingletonValue<String> _SINGLETON_VALUE_Revision =
                new LazySingletonValue<>(
                        "revision",
                        "\"2024-10-15\"",
                        new TypeReference<String>() {});
    }
}

