/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.commercesystems.klaviyo_java.models.components;


import com.commercesystems.klaviyo_java.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.List;
import java.util.Objects;
import org.openapitools.jackson.nullable.JsonNullable;


public class NoEmailMarketing {

    @JsonProperty("subscription")
    private AnyEnum subscription;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("filters")
    private JsonNullable<? extends List<NoEmailMarketingFilters>> filters;

    @JsonCreator
    public NoEmailMarketing(
            @JsonProperty("subscription") AnyEnum subscription,
            @JsonProperty("filters") JsonNullable<? extends List<NoEmailMarketingFilters>> filters) {
        Utils.checkNotNull(subscription, "subscription");
        Utils.checkNotNull(filters, "filters");
        this.subscription = subscription;
        this.filters = filters;
    }
    
    public NoEmailMarketing(
            AnyEnum subscription) {
        this(subscription, JsonNullable.undefined());
    }

    @JsonIgnore
    public AnyEnum subscription() {
        return subscription;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<List<NoEmailMarketingFilters>> filters() {
        return (JsonNullable<List<NoEmailMarketingFilters>>) filters;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public NoEmailMarketing withSubscription(AnyEnum subscription) {
        Utils.checkNotNull(subscription, "subscription");
        this.subscription = subscription;
        return this;
    }

    public NoEmailMarketing withFilters(List<NoEmailMarketingFilters> filters) {
        Utils.checkNotNull(filters, "filters");
        this.filters = JsonNullable.of(filters);
        return this;
    }

    public NoEmailMarketing withFilters(JsonNullable<? extends List<NoEmailMarketingFilters>> filters) {
        Utils.checkNotNull(filters, "filters");
        this.filters = filters;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        NoEmailMarketing other = (NoEmailMarketing) o;
        return 
            Objects.deepEquals(this.subscription, other.subscription) &&
            Objects.deepEquals(this.filters, other.filters);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            subscription,
            filters);
    }
    
    @Override
    public String toString() {
        return Utils.toString(NoEmailMarketing.class,
                "subscription", subscription,
                "filters", filters);
    }
    
    public final static class Builder {
 
        private AnyEnum subscription;
 
        private JsonNullable<? extends List<NoEmailMarketingFilters>> filters = JsonNullable.undefined();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder subscription(AnyEnum subscription) {
            Utils.checkNotNull(subscription, "subscription");
            this.subscription = subscription;
            return this;
        }

        public Builder filters(List<NoEmailMarketingFilters> filters) {
            Utils.checkNotNull(filters, "filters");
            this.filters = JsonNullable.of(filters);
            return this;
        }

        public Builder filters(JsonNullable<? extends List<NoEmailMarketingFilters>> filters) {
            Utils.checkNotNull(filters, "filters");
            this.filters = filters;
            return this;
        }
        
        public NoEmailMarketing build() {
            return new NoEmailMarketing(
                subscription,
                filters);
        }
    }
}

