/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.commercesystems.klaviyo_java.models.components;


import com.commercesystems.klaviyo_java.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;


public class ProfilePropertyCondition {

    @JsonProperty("type")
    private ProfilePropertyEnum type;

    @JsonProperty("property")
    private String property;

    @JsonProperty("filter")
    private ProfilePropertyConditionFilter filter;

    @JsonCreator
    public ProfilePropertyCondition(
            @JsonProperty("type") ProfilePropertyEnum type,
            @JsonProperty("property") String property,
            @JsonProperty("filter") ProfilePropertyConditionFilter filter) {
        Utils.checkNotNull(type, "type");
        Utils.checkNotNull(property, "property");
        Utils.checkNotNull(filter, "filter");
        this.type = type;
        this.property = property;
        this.filter = filter;
    }

    @JsonIgnore
    public ProfilePropertyEnum type() {
        return type;
    }

    @JsonIgnore
    public String property() {
        return property;
    }

    @JsonIgnore
    public ProfilePropertyConditionFilter filter() {
        return filter;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public ProfilePropertyCondition withType(ProfilePropertyEnum type) {
        Utils.checkNotNull(type, "type");
        this.type = type;
        return this;
    }

    public ProfilePropertyCondition withProperty(String property) {
        Utils.checkNotNull(property, "property");
        this.property = property;
        return this;
    }

    public ProfilePropertyCondition withFilter(ProfilePropertyConditionFilter filter) {
        Utils.checkNotNull(filter, "filter");
        this.filter = filter;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ProfilePropertyCondition other = (ProfilePropertyCondition) o;
        return 
            Objects.deepEquals(this.type, other.type) &&
            Objects.deepEquals(this.property, other.property) &&
            Objects.deepEquals(this.filter, other.filter);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            type,
            property,
            filter);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ProfilePropertyCondition.class,
                "type", type,
                "property", property,
                "filter", filter);
    }
    
    public final static class Builder {
 
        private ProfilePropertyEnum type;
 
        private String property;
 
        private ProfilePropertyConditionFilter filter;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder type(ProfilePropertyEnum type) {
            Utils.checkNotNull(type, "type");
            this.type = type;
            return this;
        }

        public Builder property(String property) {
            Utils.checkNotNull(property, "property");
            this.property = property;
            return this;
        }

        public Builder filter(ProfilePropertyConditionFilter filter) {
            Utils.checkNotNull(filter, "filter");
            this.filter = filter;
            return this;
        }
        
        public ProfilePropertyCondition build() {
            return new ProfilePropertyCondition(
                type,
                property,
                filter);
        }
    }
}

