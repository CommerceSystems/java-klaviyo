/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.commercesystems.klaviyo_java.models.operations;

import com.commercesystems.klaviyo_java.utils.LazySingletonValue;
import com.commercesystems.klaviyo_java.utils.Utils;
import com.fasterxml.jackson.core.type.TypeReference;
import java.lang.String;
import java.util.List;
import java.util.Optional;

public class GetWebhooksRequestBuilder {

    private Optional<? extends List<FieldsWebhook>> fieldsWebhook = Optional.empty();
    private Optional<? extends List<GetWebhooksQueryParamInclude>> include = Optional.empty();
    private String revision;
    private final SDKMethodInterfaces.MethodCallGetWebhooks sdk;

    public GetWebhooksRequestBuilder(SDKMethodInterfaces.MethodCallGetWebhooks sdk) {
        this.sdk = sdk;
    }
                
    public GetWebhooksRequestBuilder fieldsWebhook(List<FieldsWebhook> fieldsWebhook) {
        Utils.checkNotNull(fieldsWebhook, "fieldsWebhook");
        this.fieldsWebhook = Optional.of(fieldsWebhook);
        return this;
    }

    public GetWebhooksRequestBuilder fieldsWebhook(Optional<? extends List<FieldsWebhook>> fieldsWebhook) {
        Utils.checkNotNull(fieldsWebhook, "fieldsWebhook");
        this.fieldsWebhook = fieldsWebhook;
        return this;
    }
                
    public GetWebhooksRequestBuilder include(List<GetWebhooksQueryParamInclude> include) {
        Utils.checkNotNull(include, "include");
        this.include = Optional.of(include);
        return this;
    }

    public GetWebhooksRequestBuilder include(Optional<? extends List<GetWebhooksQueryParamInclude>> include) {
        Utils.checkNotNull(include, "include");
        this.include = include;
        return this;
    }

    public GetWebhooksRequestBuilder revision(String revision) {
        Utils.checkNotNull(revision, "revision");
        this.revision = revision;
        return this;
    }

    public GetWebhooksResponse call() throws Exception {
        if (revision == null) {
            revision = _SINGLETON_VALUE_Revision.value();
        }
        return sdk.getWebhooks(
            fieldsWebhook,
            include,
            revision);
    }

    private static final LazySingletonValue<String> _SINGLETON_VALUE_Revision =
            new LazySingletonValue<>(
                    "revision",
                    "\"2024-10-15\"",
                    new TypeReference<String>() {});
}
