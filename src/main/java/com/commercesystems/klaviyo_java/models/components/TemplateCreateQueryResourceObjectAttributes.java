/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.commercesystems.klaviyo_java.models.components;


import com.commercesystems.klaviyo_java.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;
import org.openapitools.jackson.nullable.JsonNullable;


public class TemplateCreateQueryResourceObjectAttributes {

    /**
     * The name of the template
     */
    @JsonProperty("name")
    private String name;

    /**
     * Restricted to CODE
     */
    @JsonProperty("editor_type")
    private String editorType;

    /**
     * The HTML contents of the template
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("html")
    private JsonNullable<String> html;

    /**
     * The plaintext version of the template
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("text")
    private JsonNullable<String> text;

    @JsonCreator
    public TemplateCreateQueryResourceObjectAttributes(
            @JsonProperty("name") String name,
            @JsonProperty("editor_type") String editorType,
            @JsonProperty("html") JsonNullable<String> html,
            @JsonProperty("text") JsonNullable<String> text) {
        Utils.checkNotNull(name, "name");
        Utils.checkNotNull(editorType, "editorType");
        Utils.checkNotNull(html, "html");
        Utils.checkNotNull(text, "text");
        this.name = name;
        this.editorType = editorType;
        this.html = html;
        this.text = text;
    }
    
    public TemplateCreateQueryResourceObjectAttributes(
            String name,
            String editorType) {
        this(name, editorType, JsonNullable.undefined(), JsonNullable.undefined());
    }

    /**
     * The name of the template
     */
    @JsonIgnore
    public String name() {
        return name;
    }

    /**
     * Restricted to CODE
     */
    @JsonIgnore
    public String editorType() {
        return editorType;
    }

    /**
     * The HTML contents of the template
     */
    @JsonIgnore
    public JsonNullable<String> html() {
        return html;
    }

    /**
     * The plaintext version of the template
     */
    @JsonIgnore
    public JsonNullable<String> text() {
        return text;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * The name of the template
     */
    public TemplateCreateQueryResourceObjectAttributes withName(String name) {
        Utils.checkNotNull(name, "name");
        this.name = name;
        return this;
    }

    /**
     * Restricted to CODE
     */
    public TemplateCreateQueryResourceObjectAttributes withEditorType(String editorType) {
        Utils.checkNotNull(editorType, "editorType");
        this.editorType = editorType;
        return this;
    }

    /**
     * The HTML contents of the template
     */
    public TemplateCreateQueryResourceObjectAttributes withHtml(String html) {
        Utils.checkNotNull(html, "html");
        this.html = JsonNullable.of(html);
        return this;
    }

    /**
     * The HTML contents of the template
     */
    public TemplateCreateQueryResourceObjectAttributes withHtml(JsonNullable<String> html) {
        Utils.checkNotNull(html, "html");
        this.html = html;
        return this;
    }

    /**
     * The plaintext version of the template
     */
    public TemplateCreateQueryResourceObjectAttributes withText(String text) {
        Utils.checkNotNull(text, "text");
        this.text = JsonNullable.of(text);
        return this;
    }

    /**
     * The plaintext version of the template
     */
    public TemplateCreateQueryResourceObjectAttributes withText(JsonNullable<String> text) {
        Utils.checkNotNull(text, "text");
        this.text = text;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        TemplateCreateQueryResourceObjectAttributes other = (TemplateCreateQueryResourceObjectAttributes) o;
        return 
            Objects.deepEquals(this.name, other.name) &&
            Objects.deepEquals(this.editorType, other.editorType) &&
            Objects.deepEquals(this.html, other.html) &&
            Objects.deepEquals(this.text, other.text);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            name,
            editorType,
            html,
            text);
    }
    
    @Override
    public String toString() {
        return Utils.toString(TemplateCreateQueryResourceObjectAttributes.class,
                "name", name,
                "editorType", editorType,
                "html", html,
                "text", text);
    }
    
    public final static class Builder {
 
        private String name;
 
        private String editorType;
 
        private JsonNullable<String> html = JsonNullable.undefined();
 
        private JsonNullable<String> text = JsonNullable.undefined();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The name of the template
         */
        public Builder name(String name) {
            Utils.checkNotNull(name, "name");
            this.name = name;
            return this;
        }

        /**
         * Restricted to CODE
         */
        public Builder editorType(String editorType) {
            Utils.checkNotNull(editorType, "editorType");
            this.editorType = editorType;
            return this;
        }

        /**
         * The HTML contents of the template
         */
        public Builder html(String html) {
            Utils.checkNotNull(html, "html");
            this.html = JsonNullable.of(html);
            return this;
        }

        /**
         * The HTML contents of the template
         */
        public Builder html(JsonNullable<String> html) {
            Utils.checkNotNull(html, "html");
            this.html = html;
            return this;
        }

        /**
         * The plaintext version of the template
         */
        public Builder text(String text) {
            Utils.checkNotNull(text, "text");
            this.text = JsonNullable.of(text);
            return this;
        }

        /**
         * The plaintext version of the template
         */
        public Builder text(JsonNullable<String> text) {
            Utils.checkNotNull(text, "text");
            this.text = text;
            return this;
        }
        
        public TemplateCreateQueryResourceObjectAttributes build() {
            return new TemplateCreateQueryResourceObjectAttributes(
                name,
                editorType,
                html,
                text);
        }
    }
}

