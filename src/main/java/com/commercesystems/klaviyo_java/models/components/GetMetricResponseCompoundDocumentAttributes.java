/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.commercesystems.klaviyo_java.models.components;


import com.commercesystems.klaviyo_java.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import org.openapitools.jackson.nullable.JsonNullable;


public class GetMetricResponseCompoundDocumentAttributes {

    /**
     * The name of the metric
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    private JsonNullable<String> name;

    /**
     * Creation time in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created")
    private JsonNullable<String> created;

    /**
     * Last updated time in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updated")
    private JsonNullable<String> updated;

    /**
     * The integration associated with the event
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("integration")
    private JsonNullable<? extends GetMetricResponseCompoundDocumentIntegration> integration;

    @JsonCreator
    public GetMetricResponseCompoundDocumentAttributes(
            @JsonProperty("name") JsonNullable<String> name,
            @JsonProperty("created") JsonNullable<String> created,
            @JsonProperty("updated") JsonNullable<String> updated,
            @JsonProperty("integration") JsonNullable<? extends GetMetricResponseCompoundDocumentIntegration> integration) {
        Utils.checkNotNull(name, "name");
        Utils.checkNotNull(created, "created");
        Utils.checkNotNull(updated, "updated");
        Utils.checkNotNull(integration, "integration");
        this.name = name;
        this.created = created;
        this.updated = updated;
        this.integration = integration;
    }
    
    public GetMetricResponseCompoundDocumentAttributes() {
        this(JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined());
    }

    /**
     * The name of the metric
     */
    @JsonIgnore
    public JsonNullable<String> name() {
        return name;
    }

    /**
     * Creation time in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)
     */
    @JsonIgnore
    public JsonNullable<String> created() {
        return created;
    }

    /**
     * Last updated time in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)
     */
    @JsonIgnore
    public JsonNullable<String> updated() {
        return updated;
    }

    /**
     * The integration associated with the event
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<GetMetricResponseCompoundDocumentIntegration> integration() {
        return (JsonNullable<GetMetricResponseCompoundDocumentIntegration>) integration;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * The name of the metric
     */
    public GetMetricResponseCompoundDocumentAttributes withName(String name) {
        Utils.checkNotNull(name, "name");
        this.name = JsonNullable.of(name);
        return this;
    }

    /**
     * The name of the metric
     */
    public GetMetricResponseCompoundDocumentAttributes withName(JsonNullable<String> name) {
        Utils.checkNotNull(name, "name");
        this.name = name;
        return this;
    }

    /**
     * Creation time in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)
     */
    public GetMetricResponseCompoundDocumentAttributes withCreated(String created) {
        Utils.checkNotNull(created, "created");
        this.created = JsonNullable.of(created);
        return this;
    }

    /**
     * Creation time in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)
     */
    public GetMetricResponseCompoundDocumentAttributes withCreated(JsonNullable<String> created) {
        Utils.checkNotNull(created, "created");
        this.created = created;
        return this;
    }

    /**
     * Last updated time in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)
     */
    public GetMetricResponseCompoundDocumentAttributes withUpdated(String updated) {
        Utils.checkNotNull(updated, "updated");
        this.updated = JsonNullable.of(updated);
        return this;
    }

    /**
     * Last updated time in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)
     */
    public GetMetricResponseCompoundDocumentAttributes withUpdated(JsonNullable<String> updated) {
        Utils.checkNotNull(updated, "updated");
        this.updated = updated;
        return this;
    }

    /**
     * The integration associated with the event
     */
    public GetMetricResponseCompoundDocumentAttributes withIntegration(GetMetricResponseCompoundDocumentIntegration integration) {
        Utils.checkNotNull(integration, "integration");
        this.integration = JsonNullable.of(integration);
        return this;
    }

    /**
     * The integration associated with the event
     */
    public GetMetricResponseCompoundDocumentAttributes withIntegration(JsonNullable<? extends GetMetricResponseCompoundDocumentIntegration> integration) {
        Utils.checkNotNull(integration, "integration");
        this.integration = integration;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetMetricResponseCompoundDocumentAttributes other = (GetMetricResponseCompoundDocumentAttributes) o;
        return 
            Objects.deepEquals(this.name, other.name) &&
            Objects.deepEquals(this.created, other.created) &&
            Objects.deepEquals(this.updated, other.updated) &&
            Objects.deepEquals(this.integration, other.integration);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            name,
            created,
            updated,
            integration);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetMetricResponseCompoundDocumentAttributes.class,
                "name", name,
                "created", created,
                "updated", updated,
                "integration", integration);
    }
    
    public final static class Builder {
 
        private JsonNullable<String> name = JsonNullable.undefined();
 
        private JsonNullable<String> created = JsonNullable.undefined();
 
        private JsonNullable<String> updated = JsonNullable.undefined();
 
        private JsonNullable<? extends GetMetricResponseCompoundDocumentIntegration> integration = JsonNullable.undefined();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The name of the metric
         */
        public Builder name(String name) {
            Utils.checkNotNull(name, "name");
            this.name = JsonNullable.of(name);
            return this;
        }

        /**
         * The name of the metric
         */
        public Builder name(JsonNullable<String> name) {
            Utils.checkNotNull(name, "name");
            this.name = name;
            return this;
        }

        /**
         * Creation time in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)
         */
        public Builder created(String created) {
            Utils.checkNotNull(created, "created");
            this.created = JsonNullable.of(created);
            return this;
        }

        /**
         * Creation time in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)
         */
        public Builder created(JsonNullable<String> created) {
            Utils.checkNotNull(created, "created");
            this.created = created;
            return this;
        }

        /**
         * Last updated time in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)
         */
        public Builder updated(String updated) {
            Utils.checkNotNull(updated, "updated");
            this.updated = JsonNullable.of(updated);
            return this;
        }

        /**
         * Last updated time in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)
         */
        public Builder updated(JsonNullable<String> updated) {
            Utils.checkNotNull(updated, "updated");
            this.updated = updated;
            return this;
        }

        /**
         * The integration associated with the event
         */
        public Builder integration(GetMetricResponseCompoundDocumentIntegration integration) {
            Utils.checkNotNull(integration, "integration");
            this.integration = JsonNullable.of(integration);
            return this;
        }

        /**
         * The integration associated with the event
         */
        public Builder integration(JsonNullable<? extends GetMetricResponseCompoundDocumentIntegration> integration) {
            Utils.checkNotNull(integration, "integration");
            this.integration = integration;
            return this;
        }
        
        public GetMetricResponseCompoundDocumentAttributes build() {
            return new GetMetricResponseCompoundDocumentAttributes(
                name,
                created,
                updated,
                integration);
        }
    }
}

