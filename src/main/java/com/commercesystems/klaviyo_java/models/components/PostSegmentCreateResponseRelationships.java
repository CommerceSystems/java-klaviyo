/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.commercesystems.klaviyo_java.models.components;


import com.commercesystems.klaviyo_java.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import java.util.Optional;


public class PostSegmentCreateResponseRelationships {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("profiles")
    private Optional<? extends PostSegmentCreateResponseProfiles> profiles;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    private Optional<? extends PostSegmentCreateResponseTags> tags;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("flow-triggers")
    private Optional<? extends PostSegmentCreateResponseFlowTriggers> flowTriggers;

    @JsonCreator
    public PostSegmentCreateResponseRelationships(
            @JsonProperty("profiles") Optional<? extends PostSegmentCreateResponseProfiles> profiles,
            @JsonProperty("tags") Optional<? extends PostSegmentCreateResponseTags> tags,
            @JsonProperty("flow-triggers") Optional<? extends PostSegmentCreateResponseFlowTriggers> flowTriggers) {
        Utils.checkNotNull(profiles, "profiles");
        Utils.checkNotNull(tags, "tags");
        Utils.checkNotNull(flowTriggers, "flowTriggers");
        this.profiles = profiles;
        this.tags = tags;
        this.flowTriggers = flowTriggers;
    }
    
    public PostSegmentCreateResponseRelationships() {
        this(Optional.empty(), Optional.empty(), Optional.empty());
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<PostSegmentCreateResponseProfiles> profiles() {
        return (Optional<PostSegmentCreateResponseProfiles>) profiles;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<PostSegmentCreateResponseTags> tags() {
        return (Optional<PostSegmentCreateResponseTags>) tags;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<PostSegmentCreateResponseFlowTriggers> flowTriggers() {
        return (Optional<PostSegmentCreateResponseFlowTriggers>) flowTriggers;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public PostSegmentCreateResponseRelationships withProfiles(PostSegmentCreateResponseProfiles profiles) {
        Utils.checkNotNull(profiles, "profiles");
        this.profiles = Optional.ofNullable(profiles);
        return this;
    }

    public PostSegmentCreateResponseRelationships withProfiles(Optional<? extends PostSegmentCreateResponseProfiles> profiles) {
        Utils.checkNotNull(profiles, "profiles");
        this.profiles = profiles;
        return this;
    }

    public PostSegmentCreateResponseRelationships withTags(PostSegmentCreateResponseTags tags) {
        Utils.checkNotNull(tags, "tags");
        this.tags = Optional.ofNullable(tags);
        return this;
    }

    public PostSegmentCreateResponseRelationships withTags(Optional<? extends PostSegmentCreateResponseTags> tags) {
        Utils.checkNotNull(tags, "tags");
        this.tags = tags;
        return this;
    }

    public PostSegmentCreateResponseRelationships withFlowTriggers(PostSegmentCreateResponseFlowTriggers flowTriggers) {
        Utils.checkNotNull(flowTriggers, "flowTriggers");
        this.flowTriggers = Optional.ofNullable(flowTriggers);
        return this;
    }

    public PostSegmentCreateResponseRelationships withFlowTriggers(Optional<? extends PostSegmentCreateResponseFlowTriggers> flowTriggers) {
        Utils.checkNotNull(flowTriggers, "flowTriggers");
        this.flowTriggers = flowTriggers;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PostSegmentCreateResponseRelationships other = (PostSegmentCreateResponseRelationships) o;
        return 
            Objects.deepEquals(this.profiles, other.profiles) &&
            Objects.deepEquals(this.tags, other.tags) &&
            Objects.deepEquals(this.flowTriggers, other.flowTriggers);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            profiles,
            tags,
            flowTriggers);
    }
    
    @Override
    public String toString() {
        return Utils.toString(PostSegmentCreateResponseRelationships.class,
                "profiles", profiles,
                "tags", tags,
                "flowTriggers", flowTriggers);
    }
    
    public final static class Builder {
 
        private Optional<? extends PostSegmentCreateResponseProfiles> profiles = Optional.empty();
 
        private Optional<? extends PostSegmentCreateResponseTags> tags = Optional.empty();
 
        private Optional<? extends PostSegmentCreateResponseFlowTriggers> flowTriggers = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder profiles(PostSegmentCreateResponseProfiles profiles) {
            Utils.checkNotNull(profiles, "profiles");
            this.profiles = Optional.ofNullable(profiles);
            return this;
        }

        public Builder profiles(Optional<? extends PostSegmentCreateResponseProfiles> profiles) {
            Utils.checkNotNull(profiles, "profiles");
            this.profiles = profiles;
            return this;
        }

        public Builder tags(PostSegmentCreateResponseTags tags) {
            Utils.checkNotNull(tags, "tags");
            this.tags = Optional.ofNullable(tags);
            return this;
        }

        public Builder tags(Optional<? extends PostSegmentCreateResponseTags> tags) {
            Utils.checkNotNull(tags, "tags");
            this.tags = tags;
            return this;
        }

        public Builder flowTriggers(PostSegmentCreateResponseFlowTriggers flowTriggers) {
            Utils.checkNotNull(flowTriggers, "flowTriggers");
            this.flowTriggers = Optional.ofNullable(flowTriggers);
            return this;
        }

        public Builder flowTriggers(Optional<? extends PostSegmentCreateResponseFlowTriggers> flowTriggers) {
            Utils.checkNotNull(flowTriggers, "flowTriggers");
            this.flowTriggers = flowTriggers;
            return this;
        }
        
        public PostSegmentCreateResponseRelationships build() {
            return new PostSegmentCreateResponseRelationships(
                profiles,
                tags,
                flowTriggers);
        }
    }
}

