/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.commercesystems.klaviyo_java.models.operations;


import com.commercesystems.klaviyo_java.models.components.CampaignSendJobCreateQuery;
import com.commercesystems.klaviyo_java.utils.LazySingletonValue;
import com.commercesystems.klaviyo_java.utils.SpeakeasyMetadata;
import com.commercesystems.klaviyo_java.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.core.type.TypeReference;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;


public class SendCampaignRequest {

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=revision")
    private String revision;

    /**
     * Trigger the campaign to send asynchronously
     */
    @SpeakeasyMetadata("request:mediaType=application/vnd.api+json")
    private CampaignSendJobCreateQuery campaignSendJobCreateQuery;

    @JsonCreator
    public SendCampaignRequest(
            String revision,
            CampaignSendJobCreateQuery campaignSendJobCreateQuery) {
        Utils.checkNotNull(revision, "revision");
        Utils.checkNotNull(campaignSendJobCreateQuery, "campaignSendJobCreateQuery");
        this.revision = revision;
        this.campaignSendJobCreateQuery = campaignSendJobCreateQuery;
    }

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     */
    @JsonIgnore
    public String revision() {
        return revision;
    }

    /**
     * Trigger the campaign to send asynchronously
     */
    @JsonIgnore
    public CampaignSendJobCreateQuery campaignSendJobCreateQuery() {
        return campaignSendJobCreateQuery;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     */
    public SendCampaignRequest withRevision(String revision) {
        Utils.checkNotNull(revision, "revision");
        this.revision = revision;
        return this;
    }

    /**
     * Trigger the campaign to send asynchronously
     */
    public SendCampaignRequest withCampaignSendJobCreateQuery(CampaignSendJobCreateQuery campaignSendJobCreateQuery) {
        Utils.checkNotNull(campaignSendJobCreateQuery, "campaignSendJobCreateQuery");
        this.campaignSendJobCreateQuery = campaignSendJobCreateQuery;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SendCampaignRequest other = (SendCampaignRequest) o;
        return 
            Objects.deepEquals(this.revision, other.revision) &&
            Objects.deepEquals(this.campaignSendJobCreateQuery, other.campaignSendJobCreateQuery);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            revision,
            campaignSendJobCreateQuery);
    }
    
    @Override
    public String toString() {
        return Utils.toString(SendCampaignRequest.class,
                "revision", revision,
                "campaignSendJobCreateQuery", campaignSendJobCreateQuery);
    }
    
    public final static class Builder {
 
        private String revision;
 
        private CampaignSendJobCreateQuery campaignSendJobCreateQuery;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * API endpoint revision (format: YYYY-MM-DD[.suffix])
         */
        public Builder revision(String revision) {
            Utils.checkNotNull(revision, "revision");
            this.revision = revision;
            return this;
        }

        /**
         * Trigger the campaign to send asynchronously
         */
        public Builder campaignSendJobCreateQuery(CampaignSendJobCreateQuery campaignSendJobCreateQuery) {
            Utils.checkNotNull(campaignSendJobCreateQuery, "campaignSendJobCreateQuery");
            this.campaignSendJobCreateQuery = campaignSendJobCreateQuery;
            return this;
        }
        
        public SendCampaignRequest build() {
            if (revision == null) {
                revision = _SINGLETON_VALUE_Revision.value();
            }            return new SendCampaignRequest(
                revision,
                campaignSendJobCreateQuery);
        }

        private static final LazySingletonValue<String> _SINGLETON_VALUE_Revision =
                new LazySingletonValue<>(
                        "revision",
                        "\"2024-10-15\"",
                        new TypeReference<String>() {});
    }
}

