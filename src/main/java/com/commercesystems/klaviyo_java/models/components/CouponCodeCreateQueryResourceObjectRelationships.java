/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.commercesystems.klaviyo_java.models.components;


import com.commercesystems.klaviyo_java.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import java.util.Optional;


public class CouponCodeCreateQueryResourceObjectRelationships {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("coupon")
    private Optional<? extends Coupon> coupon;

    @JsonCreator
    public CouponCodeCreateQueryResourceObjectRelationships(
            @JsonProperty("coupon") Optional<? extends Coupon> coupon) {
        Utils.checkNotNull(coupon, "coupon");
        this.coupon = coupon;
    }
    
    public CouponCodeCreateQueryResourceObjectRelationships() {
        this(Optional.empty());
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<Coupon> coupon() {
        return (Optional<Coupon>) coupon;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public CouponCodeCreateQueryResourceObjectRelationships withCoupon(Coupon coupon) {
        Utils.checkNotNull(coupon, "coupon");
        this.coupon = Optional.ofNullable(coupon);
        return this;
    }

    public CouponCodeCreateQueryResourceObjectRelationships withCoupon(Optional<? extends Coupon> coupon) {
        Utils.checkNotNull(coupon, "coupon");
        this.coupon = coupon;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CouponCodeCreateQueryResourceObjectRelationships other = (CouponCodeCreateQueryResourceObjectRelationships) o;
        return 
            Objects.deepEquals(this.coupon, other.coupon);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            coupon);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CouponCodeCreateQueryResourceObjectRelationships.class,
                "coupon", coupon);
    }
    
    public final static class Builder {
 
        private Optional<? extends Coupon> coupon = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder coupon(Coupon coupon) {
            Utils.checkNotNull(coupon, "coupon");
            this.coupon = Optional.ofNullable(coupon);
            return this;
        }

        public Builder coupon(Optional<? extends Coupon> coupon) {
            Utils.checkNotNull(coupon, "coupon");
            this.coupon = coupon;
            return this;
        }
        
        public CouponCodeCreateQueryResourceObjectRelationships build() {
            return new CouponCodeCreateQueryResourceObjectRelationships(
                coupon);
        }
    }
}

