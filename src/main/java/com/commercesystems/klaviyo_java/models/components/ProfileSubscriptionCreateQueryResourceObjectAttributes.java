/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.commercesystems.klaviyo_java.models.components;


import com.commercesystems.klaviyo_java.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.time.LocalDate;
import java.util.Objects;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class ProfileSubscriptionCreateQueryResourceObjectAttributes {

    /**
     * The email address to subscribe or to set on the profile if `channels` is specified and the email channel is omitted.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    private JsonNullable<String> email;

    /**
     * The phone number to subscribe or to set on the profile if `channels` is specified and the SMS channel is omitted. This must be in E.164 format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("phone_number")
    private JsonNullable<String> phoneNumber;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscriptions")
    private Optional<? extends SubscriptionChannels> subscriptions;

    /**
     * The profile's date of birth. This field is required to update SMS consent for accounts using age-gating: https://help.klaviyo.com/hc/en-us/articles/17252552814875
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("age_gated_date_of_birth")
    private JsonNullable<LocalDate> ageGatedDateOfBirth;

    @JsonCreator
    public ProfileSubscriptionCreateQueryResourceObjectAttributes(
            @JsonProperty("email") JsonNullable<String> email,
            @JsonProperty("phone_number") JsonNullable<String> phoneNumber,
            @JsonProperty("subscriptions") Optional<? extends SubscriptionChannels> subscriptions,
            @JsonProperty("age_gated_date_of_birth") JsonNullable<LocalDate> ageGatedDateOfBirth) {
        Utils.checkNotNull(email, "email");
        Utils.checkNotNull(phoneNumber, "phoneNumber");
        Utils.checkNotNull(subscriptions, "subscriptions");
        Utils.checkNotNull(ageGatedDateOfBirth, "ageGatedDateOfBirth");
        this.email = email;
        this.phoneNumber = phoneNumber;
        this.subscriptions = subscriptions;
        this.ageGatedDateOfBirth = ageGatedDateOfBirth;
    }
    
    public ProfileSubscriptionCreateQueryResourceObjectAttributes() {
        this(JsonNullable.undefined(), JsonNullable.undefined(), Optional.empty(), JsonNullable.undefined());
    }

    /**
     * The email address to subscribe or to set on the profile if `channels` is specified and the email channel is omitted.
     */
    @JsonIgnore
    public JsonNullable<String> email() {
        return email;
    }

    /**
     * The phone number to subscribe or to set on the profile if `channels` is specified and the SMS channel is omitted. This must be in E.164 format.
     */
    @JsonIgnore
    public JsonNullable<String> phoneNumber() {
        return phoneNumber;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<SubscriptionChannels> subscriptions() {
        return (Optional<SubscriptionChannels>) subscriptions;
    }

    /**
     * The profile's date of birth. This field is required to update SMS consent for accounts using age-gating: https://help.klaviyo.com/hc/en-us/articles/17252552814875
     */
    @JsonIgnore
    public JsonNullable<LocalDate> ageGatedDateOfBirth() {
        return ageGatedDateOfBirth;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * The email address to subscribe or to set on the profile if `channels` is specified and the email channel is omitted.
     */
    public ProfileSubscriptionCreateQueryResourceObjectAttributes withEmail(String email) {
        Utils.checkNotNull(email, "email");
        this.email = JsonNullable.of(email);
        return this;
    }

    /**
     * The email address to subscribe or to set on the profile if `channels` is specified and the email channel is omitted.
     */
    public ProfileSubscriptionCreateQueryResourceObjectAttributes withEmail(JsonNullable<String> email) {
        Utils.checkNotNull(email, "email");
        this.email = email;
        return this;
    }

    /**
     * The phone number to subscribe or to set on the profile if `channels` is specified and the SMS channel is omitted. This must be in E.164 format.
     */
    public ProfileSubscriptionCreateQueryResourceObjectAttributes withPhoneNumber(String phoneNumber) {
        Utils.checkNotNull(phoneNumber, "phoneNumber");
        this.phoneNumber = JsonNullable.of(phoneNumber);
        return this;
    }

    /**
     * The phone number to subscribe or to set on the profile if `channels` is specified and the SMS channel is omitted. This must be in E.164 format.
     */
    public ProfileSubscriptionCreateQueryResourceObjectAttributes withPhoneNumber(JsonNullable<String> phoneNumber) {
        Utils.checkNotNull(phoneNumber, "phoneNumber");
        this.phoneNumber = phoneNumber;
        return this;
    }

    public ProfileSubscriptionCreateQueryResourceObjectAttributes withSubscriptions(SubscriptionChannels subscriptions) {
        Utils.checkNotNull(subscriptions, "subscriptions");
        this.subscriptions = Optional.ofNullable(subscriptions);
        return this;
    }

    public ProfileSubscriptionCreateQueryResourceObjectAttributes withSubscriptions(Optional<? extends SubscriptionChannels> subscriptions) {
        Utils.checkNotNull(subscriptions, "subscriptions");
        this.subscriptions = subscriptions;
        return this;
    }

    /**
     * The profile's date of birth. This field is required to update SMS consent for accounts using age-gating: https://help.klaviyo.com/hc/en-us/articles/17252552814875
     */
    public ProfileSubscriptionCreateQueryResourceObjectAttributes withAgeGatedDateOfBirth(LocalDate ageGatedDateOfBirth) {
        Utils.checkNotNull(ageGatedDateOfBirth, "ageGatedDateOfBirth");
        this.ageGatedDateOfBirth = JsonNullable.of(ageGatedDateOfBirth);
        return this;
    }

    /**
     * The profile's date of birth. This field is required to update SMS consent for accounts using age-gating: https://help.klaviyo.com/hc/en-us/articles/17252552814875
     */
    public ProfileSubscriptionCreateQueryResourceObjectAttributes withAgeGatedDateOfBirth(JsonNullable<LocalDate> ageGatedDateOfBirth) {
        Utils.checkNotNull(ageGatedDateOfBirth, "ageGatedDateOfBirth");
        this.ageGatedDateOfBirth = ageGatedDateOfBirth;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ProfileSubscriptionCreateQueryResourceObjectAttributes other = (ProfileSubscriptionCreateQueryResourceObjectAttributes) o;
        return 
            Objects.deepEquals(this.email, other.email) &&
            Objects.deepEquals(this.phoneNumber, other.phoneNumber) &&
            Objects.deepEquals(this.subscriptions, other.subscriptions) &&
            Objects.deepEquals(this.ageGatedDateOfBirth, other.ageGatedDateOfBirth);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            email,
            phoneNumber,
            subscriptions,
            ageGatedDateOfBirth);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ProfileSubscriptionCreateQueryResourceObjectAttributes.class,
                "email", email,
                "phoneNumber", phoneNumber,
                "subscriptions", subscriptions,
                "ageGatedDateOfBirth", ageGatedDateOfBirth);
    }
    
    public final static class Builder {
 
        private JsonNullable<String> email = JsonNullable.undefined();
 
        private JsonNullable<String> phoneNumber = JsonNullable.undefined();
 
        private Optional<? extends SubscriptionChannels> subscriptions = Optional.empty();
 
        private JsonNullable<LocalDate> ageGatedDateOfBirth = JsonNullable.undefined();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The email address to subscribe or to set on the profile if `channels` is specified and the email channel is omitted.
         */
        public Builder email(String email) {
            Utils.checkNotNull(email, "email");
            this.email = JsonNullable.of(email);
            return this;
        }

        /**
         * The email address to subscribe or to set on the profile if `channels` is specified and the email channel is omitted.
         */
        public Builder email(JsonNullable<String> email) {
            Utils.checkNotNull(email, "email");
            this.email = email;
            return this;
        }

        /**
         * The phone number to subscribe or to set on the profile if `channels` is specified and the SMS channel is omitted. This must be in E.164 format.
         */
        public Builder phoneNumber(String phoneNumber) {
            Utils.checkNotNull(phoneNumber, "phoneNumber");
            this.phoneNumber = JsonNullable.of(phoneNumber);
            return this;
        }

        /**
         * The phone number to subscribe or to set on the profile if `channels` is specified and the SMS channel is omitted. This must be in E.164 format.
         */
        public Builder phoneNumber(JsonNullable<String> phoneNumber) {
            Utils.checkNotNull(phoneNumber, "phoneNumber");
            this.phoneNumber = phoneNumber;
            return this;
        }

        public Builder subscriptions(SubscriptionChannels subscriptions) {
            Utils.checkNotNull(subscriptions, "subscriptions");
            this.subscriptions = Optional.ofNullable(subscriptions);
            return this;
        }

        public Builder subscriptions(Optional<? extends SubscriptionChannels> subscriptions) {
            Utils.checkNotNull(subscriptions, "subscriptions");
            this.subscriptions = subscriptions;
            return this;
        }

        /**
         * The profile's date of birth. This field is required to update SMS consent for accounts using age-gating: https://help.klaviyo.com/hc/en-us/articles/17252552814875
         */
        public Builder ageGatedDateOfBirth(LocalDate ageGatedDateOfBirth) {
            Utils.checkNotNull(ageGatedDateOfBirth, "ageGatedDateOfBirth");
            this.ageGatedDateOfBirth = JsonNullable.of(ageGatedDateOfBirth);
            return this;
        }

        /**
         * The profile's date of birth. This field is required to update SMS consent for accounts using age-gating: https://help.klaviyo.com/hc/en-us/articles/17252552814875
         */
        public Builder ageGatedDateOfBirth(JsonNullable<LocalDate> ageGatedDateOfBirth) {
            Utils.checkNotNull(ageGatedDateOfBirth, "ageGatedDateOfBirth");
            this.ageGatedDateOfBirth = ageGatedDateOfBirth;
            return this;
        }
        
        public ProfileSubscriptionCreateQueryResourceObjectAttributes build() {
            return new ProfileSubscriptionCreateQueryResourceObjectAttributes(
                email,
                phoneNumber,
                subscriptions,
                ageGatedDateOfBirth);
        }
    }
}

