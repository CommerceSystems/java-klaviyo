/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.commercesystems.klaviyo_java.models.components;


import com.commercesystems.klaviyo_java.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Boolean;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;


public class ProfileRegionCondition {

    @JsonProperty("type")
    private ProfileRegionEnum type;

    @JsonProperty("in_region")
    private boolean inRegion;

    /**
     * Regions for profile region conditions.
     */
    @JsonProperty("region")
    private Region region;

    @JsonCreator
    public ProfileRegionCondition(
            @JsonProperty("type") ProfileRegionEnum type,
            @JsonProperty("in_region") boolean inRegion,
            @JsonProperty("region") Region region) {
        Utils.checkNotNull(type, "type");
        Utils.checkNotNull(inRegion, "inRegion");
        Utils.checkNotNull(region, "region");
        this.type = type;
        this.inRegion = inRegion;
        this.region = region;
    }

    @JsonIgnore
    public ProfileRegionEnum type() {
        return type;
    }

    @JsonIgnore
    public boolean inRegion() {
        return inRegion;
    }

    /**
     * Regions for profile region conditions.
     */
    @JsonIgnore
    public Region region() {
        return region;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public ProfileRegionCondition withType(ProfileRegionEnum type) {
        Utils.checkNotNull(type, "type");
        this.type = type;
        return this;
    }

    public ProfileRegionCondition withInRegion(boolean inRegion) {
        Utils.checkNotNull(inRegion, "inRegion");
        this.inRegion = inRegion;
        return this;
    }

    /**
     * Regions for profile region conditions.
     */
    public ProfileRegionCondition withRegion(Region region) {
        Utils.checkNotNull(region, "region");
        this.region = region;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ProfileRegionCondition other = (ProfileRegionCondition) o;
        return 
            Objects.deepEquals(this.type, other.type) &&
            Objects.deepEquals(this.inRegion, other.inRegion) &&
            Objects.deepEquals(this.region, other.region);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            type,
            inRegion,
            region);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ProfileRegionCondition.class,
                "type", type,
                "inRegion", inRegion,
                "region", region);
    }
    
    public final static class Builder {
 
        private ProfileRegionEnum type;
 
        private Boolean inRegion;
 
        private Region region;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder type(ProfileRegionEnum type) {
            Utils.checkNotNull(type, "type");
            this.type = type;
            return this;
        }

        public Builder inRegion(boolean inRegion) {
            Utils.checkNotNull(inRegion, "inRegion");
            this.inRegion = inRegion;
            return this;
        }

        /**
         * Regions for profile region conditions.
         */
        public Builder region(Region region) {
            Utils.checkNotNull(region, "region");
            this.region = region;
            return this;
        }
        
        public ProfileRegionCondition build() {
            return new ProfileRegionCondition(
                type,
                inRegion,
                region);
        }
    }
}

