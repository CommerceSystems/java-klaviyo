/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.commercesystems.klaviyo_java.models.components;


import com.commercesystems.klaviyo_java.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import java.util.Optional;


public class PostCatalogVariantResponseRelationships {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("item")
    private Optional<? extends PostCatalogVariantResponseItem> item;

    @JsonCreator
    public PostCatalogVariantResponseRelationships(
            @JsonProperty("item") Optional<? extends PostCatalogVariantResponseItem> item) {
        Utils.checkNotNull(item, "item");
        this.item = item;
    }
    
    public PostCatalogVariantResponseRelationships() {
        this(Optional.empty());
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<PostCatalogVariantResponseItem> item() {
        return (Optional<PostCatalogVariantResponseItem>) item;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public PostCatalogVariantResponseRelationships withItem(PostCatalogVariantResponseItem item) {
        Utils.checkNotNull(item, "item");
        this.item = Optional.ofNullable(item);
        return this;
    }

    public PostCatalogVariantResponseRelationships withItem(Optional<? extends PostCatalogVariantResponseItem> item) {
        Utils.checkNotNull(item, "item");
        this.item = item;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PostCatalogVariantResponseRelationships other = (PostCatalogVariantResponseRelationships) o;
        return 
            Objects.deepEquals(this.item, other.item);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            item);
    }
    
    @Override
    public String toString() {
        return Utils.toString(PostCatalogVariantResponseRelationships.class,
                "item", item);
    }
    
    public final static class Builder {
 
        private Optional<? extends PostCatalogVariantResponseItem> item = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder item(PostCatalogVariantResponseItem item) {
            Utils.checkNotNull(item, "item");
            this.item = Optional.ofNullable(item);
            return this;
        }

        public Builder item(Optional<? extends PostCatalogVariantResponseItem> item) {
            Utils.checkNotNull(item, "item");
            this.item = item;
            return this;
        }
        
        public PostCatalogVariantResponseRelationships build() {
            return new PostCatalogVariantResponseRelationships(
                item);
        }
    }
}

