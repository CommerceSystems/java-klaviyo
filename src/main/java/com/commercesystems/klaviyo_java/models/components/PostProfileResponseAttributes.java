/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.commercesystems.klaviyo_java.models.components;


import com.commercesystems.klaviyo_java.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.time.OffsetDateTime;
import java.util.Objects;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class PostProfileResponseAttributes {

    /**
     * Individual's email address
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    private JsonNullable<String> email;

    /**
     * Individual's phone number in E.164 format
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("phone_number")
    private JsonNullable<String> phoneNumber;

    /**
     * A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("external_id")
    private JsonNullable<String> externalId;

    /**
     * Individual's first name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("first_name")
    private JsonNullable<String> firstName;

    /**
     * Individual's last name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("last_name")
    private JsonNullable<String> lastName;

    /**
     * Name of the company or organization within the company for whom the individual works
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("organization")
    private JsonNullable<String> organization;

    /**
     * The locale of the profile, in the IETF BCP 47 language tag format like (ISO 639-1/2)-(ISO 3166 alpha-2)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("locale")
    private JsonNullable<String> locale;

    /**
     * Individual's job title
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    private JsonNullable<String> title;

    /**
     * URL pointing to the location of a profile image
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("image")
    private JsonNullable<String> image;

    /**
     * Date and time when the profile was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created")
    private JsonNullable<OffsetDateTime> created;

    /**
     * Date and time when the profile was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updated")
    private JsonNullable<OffsetDateTime> updated;

    /**
     * Date and time of the most recent event the triggered an update to the profile, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("last_event_date")
    private JsonNullable<OffsetDateTime> lastEventDate;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location")
    private Optional<? extends ProfileLocation> location;

    /**
     * An object containing key/value pairs for any custom properties assigned to this profile
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("properties")
    private JsonNullable<? extends PostProfileResponseProperties> properties;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscriptions")
    private Optional<? extends Subscriptions> subscriptions;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("predictive_analytics")
    private Optional<? extends PredictiveAnalytics> predictiveAnalytics;

    @JsonCreator
    public PostProfileResponseAttributes(
            @JsonProperty("email") JsonNullable<String> email,
            @JsonProperty("phone_number") JsonNullable<String> phoneNumber,
            @JsonProperty("external_id") JsonNullable<String> externalId,
            @JsonProperty("first_name") JsonNullable<String> firstName,
            @JsonProperty("last_name") JsonNullable<String> lastName,
            @JsonProperty("organization") JsonNullable<String> organization,
            @JsonProperty("locale") JsonNullable<String> locale,
            @JsonProperty("title") JsonNullable<String> title,
            @JsonProperty("image") JsonNullable<String> image,
            @JsonProperty("created") JsonNullable<OffsetDateTime> created,
            @JsonProperty("updated") JsonNullable<OffsetDateTime> updated,
            @JsonProperty("last_event_date") JsonNullable<OffsetDateTime> lastEventDate,
            @JsonProperty("location") Optional<? extends ProfileLocation> location,
            @JsonProperty("properties") JsonNullable<? extends PostProfileResponseProperties> properties,
            @JsonProperty("subscriptions") Optional<? extends Subscriptions> subscriptions,
            @JsonProperty("predictive_analytics") Optional<? extends PredictiveAnalytics> predictiveAnalytics) {
        Utils.checkNotNull(email, "email");
        Utils.checkNotNull(phoneNumber, "phoneNumber");
        Utils.checkNotNull(externalId, "externalId");
        Utils.checkNotNull(firstName, "firstName");
        Utils.checkNotNull(lastName, "lastName");
        Utils.checkNotNull(organization, "organization");
        Utils.checkNotNull(locale, "locale");
        Utils.checkNotNull(title, "title");
        Utils.checkNotNull(image, "image");
        Utils.checkNotNull(created, "created");
        Utils.checkNotNull(updated, "updated");
        Utils.checkNotNull(lastEventDate, "lastEventDate");
        Utils.checkNotNull(location, "location");
        Utils.checkNotNull(properties, "properties");
        Utils.checkNotNull(subscriptions, "subscriptions");
        Utils.checkNotNull(predictiveAnalytics, "predictiveAnalytics");
        this.email = email;
        this.phoneNumber = phoneNumber;
        this.externalId = externalId;
        this.firstName = firstName;
        this.lastName = lastName;
        this.organization = organization;
        this.locale = locale;
        this.title = title;
        this.image = image;
        this.created = created;
        this.updated = updated;
        this.lastEventDate = lastEventDate;
        this.location = location;
        this.properties = properties;
        this.subscriptions = subscriptions;
        this.predictiveAnalytics = predictiveAnalytics;
    }
    
    public PostProfileResponseAttributes() {
        this(JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), Optional.empty(), JsonNullable.undefined(), Optional.empty(), Optional.empty());
    }

    /**
     * Individual's email address
     */
    @JsonIgnore
    public JsonNullable<String> email() {
        return email;
    }

    /**
     * Individual's phone number in E.164 format
     */
    @JsonIgnore
    public JsonNullable<String> phoneNumber() {
        return phoneNumber;
    }

    /**
     * A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system.
     */
    @JsonIgnore
    public JsonNullable<String> externalId() {
        return externalId;
    }

    /**
     * Individual's first name
     */
    @JsonIgnore
    public JsonNullable<String> firstName() {
        return firstName;
    }

    /**
     * Individual's last name
     */
    @JsonIgnore
    public JsonNullable<String> lastName() {
        return lastName;
    }

    /**
     * Name of the company or organization within the company for whom the individual works
     */
    @JsonIgnore
    public JsonNullable<String> organization() {
        return organization;
    }

    /**
     * The locale of the profile, in the IETF BCP 47 language tag format like (ISO 639-1/2)-(ISO 3166 alpha-2)
     */
    @JsonIgnore
    public JsonNullable<String> locale() {
        return locale;
    }

    /**
     * Individual's job title
     */
    @JsonIgnore
    public JsonNullable<String> title() {
        return title;
    }

    /**
     * URL pointing to the location of a profile image
     */
    @JsonIgnore
    public JsonNullable<String> image() {
        return image;
    }

    /**
     * Date and time when the profile was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)
     */
    @JsonIgnore
    public JsonNullable<OffsetDateTime> created() {
        return created;
    }

    /**
     * Date and time when the profile was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)
     */
    @JsonIgnore
    public JsonNullable<OffsetDateTime> updated() {
        return updated;
    }

    /**
     * Date and time of the most recent event the triggered an update to the profile, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)
     */
    @JsonIgnore
    public JsonNullable<OffsetDateTime> lastEventDate() {
        return lastEventDate;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<ProfileLocation> location() {
        return (Optional<ProfileLocation>) location;
    }

    /**
     * An object containing key/value pairs for any custom properties assigned to this profile
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<PostProfileResponseProperties> properties() {
        return (JsonNullable<PostProfileResponseProperties>) properties;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<Subscriptions> subscriptions() {
        return (Optional<Subscriptions>) subscriptions;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<PredictiveAnalytics> predictiveAnalytics() {
        return (Optional<PredictiveAnalytics>) predictiveAnalytics;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * Individual's email address
     */
    public PostProfileResponseAttributes withEmail(String email) {
        Utils.checkNotNull(email, "email");
        this.email = JsonNullable.of(email);
        return this;
    }

    /**
     * Individual's email address
     */
    public PostProfileResponseAttributes withEmail(JsonNullable<String> email) {
        Utils.checkNotNull(email, "email");
        this.email = email;
        return this;
    }

    /**
     * Individual's phone number in E.164 format
     */
    public PostProfileResponseAttributes withPhoneNumber(String phoneNumber) {
        Utils.checkNotNull(phoneNumber, "phoneNumber");
        this.phoneNumber = JsonNullable.of(phoneNumber);
        return this;
    }

    /**
     * Individual's phone number in E.164 format
     */
    public PostProfileResponseAttributes withPhoneNumber(JsonNullable<String> phoneNumber) {
        Utils.checkNotNull(phoneNumber, "phoneNumber");
        this.phoneNumber = phoneNumber;
        return this;
    }

    /**
     * A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system.
     */
    public PostProfileResponseAttributes withExternalId(String externalId) {
        Utils.checkNotNull(externalId, "externalId");
        this.externalId = JsonNullable.of(externalId);
        return this;
    }

    /**
     * A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system.
     */
    public PostProfileResponseAttributes withExternalId(JsonNullable<String> externalId) {
        Utils.checkNotNull(externalId, "externalId");
        this.externalId = externalId;
        return this;
    }

    /**
     * Individual's first name
     */
    public PostProfileResponseAttributes withFirstName(String firstName) {
        Utils.checkNotNull(firstName, "firstName");
        this.firstName = JsonNullable.of(firstName);
        return this;
    }

    /**
     * Individual's first name
     */
    public PostProfileResponseAttributes withFirstName(JsonNullable<String> firstName) {
        Utils.checkNotNull(firstName, "firstName");
        this.firstName = firstName;
        return this;
    }

    /**
     * Individual's last name
     */
    public PostProfileResponseAttributes withLastName(String lastName) {
        Utils.checkNotNull(lastName, "lastName");
        this.lastName = JsonNullable.of(lastName);
        return this;
    }

    /**
     * Individual's last name
     */
    public PostProfileResponseAttributes withLastName(JsonNullable<String> lastName) {
        Utils.checkNotNull(lastName, "lastName");
        this.lastName = lastName;
        return this;
    }

    /**
     * Name of the company or organization within the company for whom the individual works
     */
    public PostProfileResponseAttributes withOrganization(String organization) {
        Utils.checkNotNull(organization, "organization");
        this.organization = JsonNullable.of(organization);
        return this;
    }

    /**
     * Name of the company or organization within the company for whom the individual works
     */
    public PostProfileResponseAttributes withOrganization(JsonNullable<String> organization) {
        Utils.checkNotNull(organization, "organization");
        this.organization = organization;
        return this;
    }

    /**
     * The locale of the profile, in the IETF BCP 47 language tag format like (ISO 639-1/2)-(ISO 3166 alpha-2)
     */
    public PostProfileResponseAttributes withLocale(String locale) {
        Utils.checkNotNull(locale, "locale");
        this.locale = JsonNullable.of(locale);
        return this;
    }

    /**
     * The locale of the profile, in the IETF BCP 47 language tag format like (ISO 639-1/2)-(ISO 3166 alpha-2)
     */
    public PostProfileResponseAttributes withLocale(JsonNullable<String> locale) {
        Utils.checkNotNull(locale, "locale");
        this.locale = locale;
        return this;
    }

    /**
     * Individual's job title
     */
    public PostProfileResponseAttributes withTitle(String title) {
        Utils.checkNotNull(title, "title");
        this.title = JsonNullable.of(title);
        return this;
    }

    /**
     * Individual's job title
     */
    public PostProfileResponseAttributes withTitle(JsonNullable<String> title) {
        Utils.checkNotNull(title, "title");
        this.title = title;
        return this;
    }

    /**
     * URL pointing to the location of a profile image
     */
    public PostProfileResponseAttributes withImage(String image) {
        Utils.checkNotNull(image, "image");
        this.image = JsonNullable.of(image);
        return this;
    }

    /**
     * URL pointing to the location of a profile image
     */
    public PostProfileResponseAttributes withImage(JsonNullable<String> image) {
        Utils.checkNotNull(image, "image");
        this.image = image;
        return this;
    }

    /**
     * Date and time when the profile was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)
     */
    public PostProfileResponseAttributes withCreated(OffsetDateTime created) {
        Utils.checkNotNull(created, "created");
        this.created = JsonNullable.of(created);
        return this;
    }

    /**
     * Date and time when the profile was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)
     */
    public PostProfileResponseAttributes withCreated(JsonNullable<OffsetDateTime> created) {
        Utils.checkNotNull(created, "created");
        this.created = created;
        return this;
    }

    /**
     * Date and time when the profile was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)
     */
    public PostProfileResponseAttributes withUpdated(OffsetDateTime updated) {
        Utils.checkNotNull(updated, "updated");
        this.updated = JsonNullable.of(updated);
        return this;
    }

    /**
     * Date and time when the profile was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)
     */
    public PostProfileResponseAttributes withUpdated(JsonNullable<OffsetDateTime> updated) {
        Utils.checkNotNull(updated, "updated");
        this.updated = updated;
        return this;
    }

    /**
     * Date and time of the most recent event the triggered an update to the profile, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)
     */
    public PostProfileResponseAttributes withLastEventDate(OffsetDateTime lastEventDate) {
        Utils.checkNotNull(lastEventDate, "lastEventDate");
        this.lastEventDate = JsonNullable.of(lastEventDate);
        return this;
    }

    /**
     * Date and time of the most recent event the triggered an update to the profile, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)
     */
    public PostProfileResponseAttributes withLastEventDate(JsonNullable<OffsetDateTime> lastEventDate) {
        Utils.checkNotNull(lastEventDate, "lastEventDate");
        this.lastEventDate = lastEventDate;
        return this;
    }

    public PostProfileResponseAttributes withLocation(ProfileLocation location) {
        Utils.checkNotNull(location, "location");
        this.location = Optional.ofNullable(location);
        return this;
    }

    public PostProfileResponseAttributes withLocation(Optional<? extends ProfileLocation> location) {
        Utils.checkNotNull(location, "location");
        this.location = location;
        return this;
    }

    /**
     * An object containing key/value pairs for any custom properties assigned to this profile
     */
    public PostProfileResponseAttributes withProperties(PostProfileResponseProperties properties) {
        Utils.checkNotNull(properties, "properties");
        this.properties = JsonNullable.of(properties);
        return this;
    }

    /**
     * An object containing key/value pairs for any custom properties assigned to this profile
     */
    public PostProfileResponseAttributes withProperties(JsonNullable<? extends PostProfileResponseProperties> properties) {
        Utils.checkNotNull(properties, "properties");
        this.properties = properties;
        return this;
    }

    public PostProfileResponseAttributes withSubscriptions(Subscriptions subscriptions) {
        Utils.checkNotNull(subscriptions, "subscriptions");
        this.subscriptions = Optional.ofNullable(subscriptions);
        return this;
    }

    public PostProfileResponseAttributes withSubscriptions(Optional<? extends Subscriptions> subscriptions) {
        Utils.checkNotNull(subscriptions, "subscriptions");
        this.subscriptions = subscriptions;
        return this;
    }

    public PostProfileResponseAttributes withPredictiveAnalytics(PredictiveAnalytics predictiveAnalytics) {
        Utils.checkNotNull(predictiveAnalytics, "predictiveAnalytics");
        this.predictiveAnalytics = Optional.ofNullable(predictiveAnalytics);
        return this;
    }

    public PostProfileResponseAttributes withPredictiveAnalytics(Optional<? extends PredictiveAnalytics> predictiveAnalytics) {
        Utils.checkNotNull(predictiveAnalytics, "predictiveAnalytics");
        this.predictiveAnalytics = predictiveAnalytics;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PostProfileResponseAttributes other = (PostProfileResponseAttributes) o;
        return 
            Objects.deepEquals(this.email, other.email) &&
            Objects.deepEquals(this.phoneNumber, other.phoneNumber) &&
            Objects.deepEquals(this.externalId, other.externalId) &&
            Objects.deepEquals(this.firstName, other.firstName) &&
            Objects.deepEquals(this.lastName, other.lastName) &&
            Objects.deepEquals(this.organization, other.organization) &&
            Objects.deepEquals(this.locale, other.locale) &&
            Objects.deepEquals(this.title, other.title) &&
            Objects.deepEquals(this.image, other.image) &&
            Objects.deepEquals(this.created, other.created) &&
            Objects.deepEquals(this.updated, other.updated) &&
            Objects.deepEquals(this.lastEventDate, other.lastEventDate) &&
            Objects.deepEquals(this.location, other.location) &&
            Objects.deepEquals(this.properties, other.properties) &&
            Objects.deepEquals(this.subscriptions, other.subscriptions) &&
            Objects.deepEquals(this.predictiveAnalytics, other.predictiveAnalytics);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            email,
            phoneNumber,
            externalId,
            firstName,
            lastName,
            organization,
            locale,
            title,
            image,
            created,
            updated,
            lastEventDate,
            location,
            properties,
            subscriptions,
            predictiveAnalytics);
    }
    
    @Override
    public String toString() {
        return Utils.toString(PostProfileResponseAttributes.class,
                "email", email,
                "phoneNumber", phoneNumber,
                "externalId", externalId,
                "firstName", firstName,
                "lastName", lastName,
                "organization", organization,
                "locale", locale,
                "title", title,
                "image", image,
                "created", created,
                "updated", updated,
                "lastEventDate", lastEventDate,
                "location", location,
                "properties", properties,
                "subscriptions", subscriptions,
                "predictiveAnalytics", predictiveAnalytics);
    }
    
    public final static class Builder {
 
        private JsonNullable<String> email = JsonNullable.undefined();
 
        private JsonNullable<String> phoneNumber = JsonNullable.undefined();
 
        private JsonNullable<String> externalId = JsonNullable.undefined();
 
        private JsonNullable<String> firstName = JsonNullable.undefined();
 
        private JsonNullable<String> lastName = JsonNullable.undefined();
 
        private JsonNullable<String> organization = JsonNullable.undefined();
 
        private JsonNullable<String> locale = JsonNullable.undefined();
 
        private JsonNullable<String> title = JsonNullable.undefined();
 
        private JsonNullable<String> image = JsonNullable.undefined();
 
        private JsonNullable<OffsetDateTime> created = JsonNullable.undefined();
 
        private JsonNullable<OffsetDateTime> updated = JsonNullable.undefined();
 
        private JsonNullable<OffsetDateTime> lastEventDate = JsonNullable.undefined();
 
        private Optional<? extends ProfileLocation> location = Optional.empty();
 
        private JsonNullable<? extends PostProfileResponseProperties> properties = JsonNullable.undefined();
 
        private Optional<? extends Subscriptions> subscriptions = Optional.empty();
 
        private Optional<? extends PredictiveAnalytics> predictiveAnalytics = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Individual's email address
         */
        public Builder email(String email) {
            Utils.checkNotNull(email, "email");
            this.email = JsonNullable.of(email);
            return this;
        }

        /**
         * Individual's email address
         */
        public Builder email(JsonNullable<String> email) {
            Utils.checkNotNull(email, "email");
            this.email = email;
            return this;
        }

        /**
         * Individual's phone number in E.164 format
         */
        public Builder phoneNumber(String phoneNumber) {
            Utils.checkNotNull(phoneNumber, "phoneNumber");
            this.phoneNumber = JsonNullable.of(phoneNumber);
            return this;
        }

        /**
         * Individual's phone number in E.164 format
         */
        public Builder phoneNumber(JsonNullable<String> phoneNumber) {
            Utils.checkNotNull(phoneNumber, "phoneNumber");
            this.phoneNumber = phoneNumber;
            return this;
        }

        /**
         * A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system.
         */
        public Builder externalId(String externalId) {
            Utils.checkNotNull(externalId, "externalId");
            this.externalId = JsonNullable.of(externalId);
            return this;
        }

        /**
         * A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system.
         */
        public Builder externalId(JsonNullable<String> externalId) {
            Utils.checkNotNull(externalId, "externalId");
            this.externalId = externalId;
            return this;
        }

        /**
         * Individual's first name
         */
        public Builder firstName(String firstName) {
            Utils.checkNotNull(firstName, "firstName");
            this.firstName = JsonNullable.of(firstName);
            return this;
        }

        /**
         * Individual's first name
         */
        public Builder firstName(JsonNullable<String> firstName) {
            Utils.checkNotNull(firstName, "firstName");
            this.firstName = firstName;
            return this;
        }

        /**
         * Individual's last name
         */
        public Builder lastName(String lastName) {
            Utils.checkNotNull(lastName, "lastName");
            this.lastName = JsonNullable.of(lastName);
            return this;
        }

        /**
         * Individual's last name
         */
        public Builder lastName(JsonNullable<String> lastName) {
            Utils.checkNotNull(lastName, "lastName");
            this.lastName = lastName;
            return this;
        }

        /**
         * Name of the company or organization within the company for whom the individual works
         */
        public Builder organization(String organization) {
            Utils.checkNotNull(organization, "organization");
            this.organization = JsonNullable.of(organization);
            return this;
        }

        /**
         * Name of the company or organization within the company for whom the individual works
         */
        public Builder organization(JsonNullable<String> organization) {
            Utils.checkNotNull(organization, "organization");
            this.organization = organization;
            return this;
        }

        /**
         * The locale of the profile, in the IETF BCP 47 language tag format like (ISO 639-1/2)-(ISO 3166 alpha-2)
         */
        public Builder locale(String locale) {
            Utils.checkNotNull(locale, "locale");
            this.locale = JsonNullable.of(locale);
            return this;
        }

        /**
         * The locale of the profile, in the IETF BCP 47 language tag format like (ISO 639-1/2)-(ISO 3166 alpha-2)
         */
        public Builder locale(JsonNullable<String> locale) {
            Utils.checkNotNull(locale, "locale");
            this.locale = locale;
            return this;
        }

        /**
         * Individual's job title
         */
        public Builder title(String title) {
            Utils.checkNotNull(title, "title");
            this.title = JsonNullable.of(title);
            return this;
        }

        /**
         * Individual's job title
         */
        public Builder title(JsonNullable<String> title) {
            Utils.checkNotNull(title, "title");
            this.title = title;
            return this;
        }

        /**
         * URL pointing to the location of a profile image
         */
        public Builder image(String image) {
            Utils.checkNotNull(image, "image");
            this.image = JsonNullable.of(image);
            return this;
        }

        /**
         * URL pointing to the location of a profile image
         */
        public Builder image(JsonNullable<String> image) {
            Utils.checkNotNull(image, "image");
            this.image = image;
            return this;
        }

        /**
         * Date and time when the profile was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)
         */
        public Builder created(OffsetDateTime created) {
            Utils.checkNotNull(created, "created");
            this.created = JsonNullable.of(created);
            return this;
        }

        /**
         * Date and time when the profile was created, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)
         */
        public Builder created(JsonNullable<OffsetDateTime> created) {
            Utils.checkNotNull(created, "created");
            this.created = created;
            return this;
        }

        /**
         * Date and time when the profile was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)
         */
        public Builder updated(OffsetDateTime updated) {
            Utils.checkNotNull(updated, "updated");
            this.updated = JsonNullable.of(updated);
            return this;
        }

        /**
         * Date and time when the profile was last updated, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)
         */
        public Builder updated(JsonNullable<OffsetDateTime> updated) {
            Utils.checkNotNull(updated, "updated");
            this.updated = updated;
            return this;
        }

        /**
         * Date and time of the most recent event the triggered an update to the profile, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)
         */
        public Builder lastEventDate(OffsetDateTime lastEventDate) {
            Utils.checkNotNull(lastEventDate, "lastEventDate");
            this.lastEventDate = JsonNullable.of(lastEventDate);
            return this;
        }

        /**
         * Date and time of the most recent event the triggered an update to the profile, in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.mmmmmm)
         */
        public Builder lastEventDate(JsonNullable<OffsetDateTime> lastEventDate) {
            Utils.checkNotNull(lastEventDate, "lastEventDate");
            this.lastEventDate = lastEventDate;
            return this;
        }

        public Builder location(ProfileLocation location) {
            Utils.checkNotNull(location, "location");
            this.location = Optional.ofNullable(location);
            return this;
        }

        public Builder location(Optional<? extends ProfileLocation> location) {
            Utils.checkNotNull(location, "location");
            this.location = location;
            return this;
        }

        /**
         * An object containing key/value pairs for any custom properties assigned to this profile
         */
        public Builder properties(PostProfileResponseProperties properties) {
            Utils.checkNotNull(properties, "properties");
            this.properties = JsonNullable.of(properties);
            return this;
        }

        /**
         * An object containing key/value pairs for any custom properties assigned to this profile
         */
        public Builder properties(JsonNullable<? extends PostProfileResponseProperties> properties) {
            Utils.checkNotNull(properties, "properties");
            this.properties = properties;
            return this;
        }

        public Builder subscriptions(Subscriptions subscriptions) {
            Utils.checkNotNull(subscriptions, "subscriptions");
            this.subscriptions = Optional.ofNullable(subscriptions);
            return this;
        }

        public Builder subscriptions(Optional<? extends Subscriptions> subscriptions) {
            Utils.checkNotNull(subscriptions, "subscriptions");
            this.subscriptions = subscriptions;
            return this;
        }

        public Builder predictiveAnalytics(PredictiveAnalytics predictiveAnalytics) {
            Utils.checkNotNull(predictiveAnalytics, "predictiveAnalytics");
            this.predictiveAnalytics = Optional.ofNullable(predictiveAnalytics);
            return this;
        }

        public Builder predictiveAnalytics(Optional<? extends PredictiveAnalytics> predictiveAnalytics) {
            Utils.checkNotNull(predictiveAnalytics, "predictiveAnalytics");
            this.predictiveAnalytics = predictiveAnalytics;
            return this;
        }
        
        public PostProfileResponseAttributes build() {
            return new PostProfileResponseAttributes(
                email,
                phoneNumber,
                externalId,
                firstName,
                lastName,
                organization,
                locale,
                title,
                image,
                created,
                updated,
                lastEventDate,
                location,
                properties,
                subscriptions,
                predictiveAnalytics);
        }
    }
}

