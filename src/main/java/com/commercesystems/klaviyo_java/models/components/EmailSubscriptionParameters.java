/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.commercesystems.klaviyo_java.models.components;


import com.commercesystems.klaviyo_java.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;


public class EmailSubscriptionParameters {

    @JsonProperty("marketing")
    private SubscriptionParameters marketing;

    @JsonCreator
    public EmailSubscriptionParameters(
            @JsonProperty("marketing") SubscriptionParameters marketing) {
        Utils.checkNotNull(marketing, "marketing");
        this.marketing = marketing;
    }

    @JsonIgnore
    public SubscriptionParameters marketing() {
        return marketing;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public EmailSubscriptionParameters withMarketing(SubscriptionParameters marketing) {
        Utils.checkNotNull(marketing, "marketing");
        this.marketing = marketing;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        EmailSubscriptionParameters other = (EmailSubscriptionParameters) o;
        return 
            Objects.deepEquals(this.marketing, other.marketing);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            marketing);
    }
    
    @Override
    public String toString() {
        return Utils.toString(EmailSubscriptionParameters.class,
                "marketing", marketing);
    }
    
    public final static class Builder {
 
        private SubscriptionParameters marketing;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder marketing(SubscriptionParameters marketing) {
            Utils.checkNotNull(marketing, "marketing");
            this.marketing = marketing;
            return this;
        }
        
        public EmailSubscriptionParameters build() {
            return new EmailSubscriptionParameters(
                marketing);
        }
    }
}

