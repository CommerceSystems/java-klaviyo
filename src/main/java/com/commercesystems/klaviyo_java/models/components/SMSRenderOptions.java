/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.commercesystems.klaviyo_java.models.components;


import com.commercesystems.klaviyo_java.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Boolean;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;


public class SMSRenderOptions {

    @JsonProperty("shorten_links")
    private boolean shortenLinks;

    @JsonProperty("add_org_prefix")
    private boolean addOrgPrefix;

    @JsonProperty("add_info_link")
    private boolean addInfoLink;

    @JsonProperty("add_opt_out_language")
    private boolean addOptOutLanguage;

    @JsonCreator
    public SMSRenderOptions(
            @JsonProperty("shorten_links") boolean shortenLinks,
            @JsonProperty("add_org_prefix") boolean addOrgPrefix,
            @JsonProperty("add_info_link") boolean addInfoLink,
            @JsonProperty("add_opt_out_language") boolean addOptOutLanguage) {
        Utils.checkNotNull(shortenLinks, "shortenLinks");
        Utils.checkNotNull(addOrgPrefix, "addOrgPrefix");
        Utils.checkNotNull(addInfoLink, "addInfoLink");
        Utils.checkNotNull(addOptOutLanguage, "addOptOutLanguage");
        this.shortenLinks = shortenLinks;
        this.addOrgPrefix = addOrgPrefix;
        this.addInfoLink = addInfoLink;
        this.addOptOutLanguage = addOptOutLanguage;
    }

    @JsonIgnore
    public boolean shortenLinks() {
        return shortenLinks;
    }

    @JsonIgnore
    public boolean addOrgPrefix() {
        return addOrgPrefix;
    }

    @JsonIgnore
    public boolean addInfoLink() {
        return addInfoLink;
    }

    @JsonIgnore
    public boolean addOptOutLanguage() {
        return addOptOutLanguage;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public SMSRenderOptions withShortenLinks(boolean shortenLinks) {
        Utils.checkNotNull(shortenLinks, "shortenLinks");
        this.shortenLinks = shortenLinks;
        return this;
    }

    public SMSRenderOptions withAddOrgPrefix(boolean addOrgPrefix) {
        Utils.checkNotNull(addOrgPrefix, "addOrgPrefix");
        this.addOrgPrefix = addOrgPrefix;
        return this;
    }

    public SMSRenderOptions withAddInfoLink(boolean addInfoLink) {
        Utils.checkNotNull(addInfoLink, "addInfoLink");
        this.addInfoLink = addInfoLink;
        return this;
    }

    public SMSRenderOptions withAddOptOutLanguage(boolean addOptOutLanguage) {
        Utils.checkNotNull(addOptOutLanguage, "addOptOutLanguage");
        this.addOptOutLanguage = addOptOutLanguage;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        SMSRenderOptions other = (SMSRenderOptions) o;
        return 
            Objects.deepEquals(this.shortenLinks, other.shortenLinks) &&
            Objects.deepEquals(this.addOrgPrefix, other.addOrgPrefix) &&
            Objects.deepEquals(this.addInfoLink, other.addInfoLink) &&
            Objects.deepEquals(this.addOptOutLanguage, other.addOptOutLanguage);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            shortenLinks,
            addOrgPrefix,
            addInfoLink,
            addOptOutLanguage);
    }
    
    @Override
    public String toString() {
        return Utils.toString(SMSRenderOptions.class,
                "shortenLinks", shortenLinks,
                "addOrgPrefix", addOrgPrefix,
                "addInfoLink", addInfoLink,
                "addOptOutLanguage", addOptOutLanguage);
    }
    
    public final static class Builder {
 
        private Boolean shortenLinks;
 
        private Boolean addOrgPrefix;
 
        private Boolean addInfoLink;
 
        private Boolean addOptOutLanguage;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder shortenLinks(boolean shortenLinks) {
            Utils.checkNotNull(shortenLinks, "shortenLinks");
            this.shortenLinks = shortenLinks;
            return this;
        }

        public Builder addOrgPrefix(boolean addOrgPrefix) {
            Utils.checkNotNull(addOrgPrefix, "addOrgPrefix");
            this.addOrgPrefix = addOrgPrefix;
            return this;
        }

        public Builder addInfoLink(boolean addInfoLink) {
            Utils.checkNotNull(addInfoLink, "addInfoLink");
            this.addInfoLink = addInfoLink;
            return this;
        }

        public Builder addOptOutLanguage(boolean addOptOutLanguage) {
            Utils.checkNotNull(addOptOutLanguage, "addOptOutLanguage");
            this.addOptOutLanguage = addOptOutLanguage;
            return this;
        }
        
        public SMSRenderOptions build() {
            return new SMSRenderOptions(
                shortenLinks,
                addOrgPrefix,
                addInfoLink,
                addOptOutLanguage);
        }
    }
}

