/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.commercesystems.klaviyo_java.models.operations;


import com.commercesystems.klaviyo_java.utils.LazySingletonValue;
import com.commercesystems.klaviyo_java.utils.SpeakeasyMetadata;
import com.commercesystems.klaviyo_java.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.core.type.TypeReference;
import java.lang.Long;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.List;
import java.util.Objects;
import java.util.Optional;


public class GetTrackingSettingsRequest {

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=false,name=fields[tracking-setting]")
    private Optional<? extends List<FieldsTrackingSetting>> fieldsTrackingSetting;

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=page[cursor]")
    private Optional<String> pageCursor;

    /**
     * Default: 1. Min: 1. Max: 1.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=page[size]")
    private Optional<Long> pageSize;

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=revision")
    private String revision;

    @JsonCreator
    public GetTrackingSettingsRequest(
            Optional<? extends List<FieldsTrackingSetting>> fieldsTrackingSetting,
            Optional<String> pageCursor,
            Optional<Long> pageSize,
            String revision) {
        Utils.checkNotNull(fieldsTrackingSetting, "fieldsTrackingSetting");
        Utils.checkNotNull(pageCursor, "pageCursor");
        Utils.checkNotNull(pageSize, "pageSize");
        Utils.checkNotNull(revision, "revision");
        this.fieldsTrackingSetting = fieldsTrackingSetting;
        this.pageCursor = pageCursor;
        this.pageSize = pageSize;
        this.revision = revision;
    }
    
    public GetTrackingSettingsRequest(
            String revision) {
        this(Optional.empty(), Optional.empty(), Optional.empty(), revision);
    }

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<List<FieldsTrackingSetting>> fieldsTrackingSetting() {
        return (Optional<List<FieldsTrackingSetting>>) fieldsTrackingSetting;
    }

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination
     */
    @JsonIgnore
    public Optional<String> pageCursor() {
        return pageCursor;
    }

    /**
     * Default: 1. Min: 1. Max: 1.
     */
    @JsonIgnore
    public Optional<Long> pageSize() {
        return pageSize;
    }

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     */
    @JsonIgnore
    public String revision() {
        return revision;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets
     */
    public GetTrackingSettingsRequest withFieldsTrackingSetting(List<FieldsTrackingSetting> fieldsTrackingSetting) {
        Utils.checkNotNull(fieldsTrackingSetting, "fieldsTrackingSetting");
        this.fieldsTrackingSetting = Optional.ofNullable(fieldsTrackingSetting);
        return this;
    }

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets
     */
    public GetTrackingSettingsRequest withFieldsTrackingSetting(Optional<? extends List<FieldsTrackingSetting>> fieldsTrackingSetting) {
        Utils.checkNotNull(fieldsTrackingSetting, "fieldsTrackingSetting");
        this.fieldsTrackingSetting = fieldsTrackingSetting;
        return this;
    }

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination
     */
    public GetTrackingSettingsRequest withPageCursor(String pageCursor) {
        Utils.checkNotNull(pageCursor, "pageCursor");
        this.pageCursor = Optional.ofNullable(pageCursor);
        return this;
    }

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination
     */
    public GetTrackingSettingsRequest withPageCursor(Optional<String> pageCursor) {
        Utils.checkNotNull(pageCursor, "pageCursor");
        this.pageCursor = pageCursor;
        return this;
    }

    /**
     * Default: 1. Min: 1. Max: 1.
     */
    public GetTrackingSettingsRequest withPageSize(long pageSize) {
        Utils.checkNotNull(pageSize, "pageSize");
        this.pageSize = Optional.ofNullable(pageSize);
        return this;
    }

    /**
     * Default: 1. Min: 1. Max: 1.
     */
    public GetTrackingSettingsRequest withPageSize(Optional<Long> pageSize) {
        Utils.checkNotNull(pageSize, "pageSize");
        this.pageSize = pageSize;
        return this;
    }

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     */
    public GetTrackingSettingsRequest withRevision(String revision) {
        Utils.checkNotNull(revision, "revision");
        this.revision = revision;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetTrackingSettingsRequest other = (GetTrackingSettingsRequest) o;
        return 
            Objects.deepEquals(this.fieldsTrackingSetting, other.fieldsTrackingSetting) &&
            Objects.deepEquals(this.pageCursor, other.pageCursor) &&
            Objects.deepEquals(this.pageSize, other.pageSize) &&
            Objects.deepEquals(this.revision, other.revision);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            fieldsTrackingSetting,
            pageCursor,
            pageSize,
            revision);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetTrackingSettingsRequest.class,
                "fieldsTrackingSetting", fieldsTrackingSetting,
                "pageCursor", pageCursor,
                "pageSize", pageSize,
                "revision", revision);
    }
    
    public final static class Builder {
 
        private Optional<? extends List<FieldsTrackingSetting>> fieldsTrackingSetting = Optional.empty();
 
        private Optional<String> pageCursor = Optional.empty();
 
        private Optional<Long> pageSize;
 
        private String revision;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets
         */
        public Builder fieldsTrackingSetting(List<FieldsTrackingSetting> fieldsTrackingSetting) {
            Utils.checkNotNull(fieldsTrackingSetting, "fieldsTrackingSetting");
            this.fieldsTrackingSetting = Optional.ofNullable(fieldsTrackingSetting);
            return this;
        }

        /**
         * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets
         */
        public Builder fieldsTrackingSetting(Optional<? extends List<FieldsTrackingSetting>> fieldsTrackingSetting) {
            Utils.checkNotNull(fieldsTrackingSetting, "fieldsTrackingSetting");
            this.fieldsTrackingSetting = fieldsTrackingSetting;
            return this;
        }

        /**
         * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination
         */
        public Builder pageCursor(String pageCursor) {
            Utils.checkNotNull(pageCursor, "pageCursor");
            this.pageCursor = Optional.ofNullable(pageCursor);
            return this;
        }

        /**
         * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#pagination
         */
        public Builder pageCursor(Optional<String> pageCursor) {
            Utils.checkNotNull(pageCursor, "pageCursor");
            this.pageCursor = pageCursor;
            return this;
        }

        /**
         * Default: 1. Min: 1. Max: 1.
         */
        public Builder pageSize(long pageSize) {
            Utils.checkNotNull(pageSize, "pageSize");
            this.pageSize = Optional.ofNullable(pageSize);
            return this;
        }

        /**
         * Default: 1. Min: 1. Max: 1.
         */
        public Builder pageSize(Optional<Long> pageSize) {
            Utils.checkNotNull(pageSize, "pageSize");
            this.pageSize = pageSize;
            return this;
        }

        /**
         * API endpoint revision (format: YYYY-MM-DD[.suffix])
         */
        public Builder revision(String revision) {
            Utils.checkNotNull(revision, "revision");
            this.revision = revision;
            return this;
        }
        
        public GetTrackingSettingsRequest build() {
            if (pageSize == null) {
                pageSize = _SINGLETON_VALUE_PageSize.value();
            }
            if (revision == null) {
                revision = _SINGLETON_VALUE_Revision.value();
            }            return new GetTrackingSettingsRequest(
                fieldsTrackingSetting,
                pageCursor,
                pageSize,
                revision);
        }

        private static final LazySingletonValue<Optional<Long>> _SINGLETON_VALUE_PageSize =
                new LazySingletonValue<>(
                        "page[size]",
                        "1",
                        new TypeReference<Optional<Long>>() {});

        private static final LazySingletonValue<String> _SINGLETON_VALUE_Revision =
                new LazySingletonValue<>(
                        "revision",
                        "\"2024-10-15\"",
                        new TypeReference<String>() {});
    }
}

