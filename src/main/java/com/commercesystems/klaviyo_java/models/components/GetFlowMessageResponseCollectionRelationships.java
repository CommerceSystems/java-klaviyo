/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.commercesystems.klaviyo_java.models.components;


import com.commercesystems.klaviyo_java.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import java.util.Optional;


public class GetFlowMessageResponseCollectionRelationships {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("flow-action")
    private Optional<? extends GetFlowMessageResponseCollectionFlowAction> flowAction;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("template")
    private Optional<? extends GetFlowMessageResponseCollectionTemplate> template;

    @JsonCreator
    public GetFlowMessageResponseCollectionRelationships(
            @JsonProperty("flow-action") Optional<? extends GetFlowMessageResponseCollectionFlowAction> flowAction,
            @JsonProperty("template") Optional<? extends GetFlowMessageResponseCollectionTemplate> template) {
        Utils.checkNotNull(flowAction, "flowAction");
        Utils.checkNotNull(template, "template");
        this.flowAction = flowAction;
        this.template = template;
    }
    
    public GetFlowMessageResponseCollectionRelationships() {
        this(Optional.empty(), Optional.empty());
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<GetFlowMessageResponseCollectionFlowAction> flowAction() {
        return (Optional<GetFlowMessageResponseCollectionFlowAction>) flowAction;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<GetFlowMessageResponseCollectionTemplate> template() {
        return (Optional<GetFlowMessageResponseCollectionTemplate>) template;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public GetFlowMessageResponseCollectionRelationships withFlowAction(GetFlowMessageResponseCollectionFlowAction flowAction) {
        Utils.checkNotNull(flowAction, "flowAction");
        this.flowAction = Optional.ofNullable(flowAction);
        return this;
    }

    public GetFlowMessageResponseCollectionRelationships withFlowAction(Optional<? extends GetFlowMessageResponseCollectionFlowAction> flowAction) {
        Utils.checkNotNull(flowAction, "flowAction");
        this.flowAction = flowAction;
        return this;
    }

    public GetFlowMessageResponseCollectionRelationships withTemplate(GetFlowMessageResponseCollectionTemplate template) {
        Utils.checkNotNull(template, "template");
        this.template = Optional.ofNullable(template);
        return this;
    }

    public GetFlowMessageResponseCollectionRelationships withTemplate(Optional<? extends GetFlowMessageResponseCollectionTemplate> template) {
        Utils.checkNotNull(template, "template");
        this.template = template;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetFlowMessageResponseCollectionRelationships other = (GetFlowMessageResponseCollectionRelationships) o;
        return 
            Objects.deepEquals(this.flowAction, other.flowAction) &&
            Objects.deepEquals(this.template, other.template);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            flowAction,
            template);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetFlowMessageResponseCollectionRelationships.class,
                "flowAction", flowAction,
                "template", template);
    }
    
    public final static class Builder {
 
        private Optional<? extends GetFlowMessageResponseCollectionFlowAction> flowAction = Optional.empty();
 
        private Optional<? extends GetFlowMessageResponseCollectionTemplate> template = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder flowAction(GetFlowMessageResponseCollectionFlowAction flowAction) {
            Utils.checkNotNull(flowAction, "flowAction");
            this.flowAction = Optional.ofNullable(flowAction);
            return this;
        }

        public Builder flowAction(Optional<? extends GetFlowMessageResponseCollectionFlowAction> flowAction) {
            Utils.checkNotNull(flowAction, "flowAction");
            this.flowAction = flowAction;
            return this;
        }

        public Builder template(GetFlowMessageResponseCollectionTemplate template) {
            Utils.checkNotNull(template, "template");
            this.template = Optional.ofNullable(template);
            return this;
        }

        public Builder template(Optional<? extends GetFlowMessageResponseCollectionTemplate> template) {
            Utils.checkNotNull(template, "template");
            this.template = template;
            return this;
        }
        
        public GetFlowMessageResponseCollectionRelationships build() {
            return new GetFlowMessageResponseCollectionRelationships(
                flowAction,
                template);
        }
    }
}

