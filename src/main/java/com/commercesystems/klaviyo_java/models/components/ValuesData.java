/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.commercesystems.klaviyo_java.models.components;


import com.commercesystems.klaviyo_java.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;


public class ValuesData {

    /**
     * Applied groupings and the values for this object
     */
    @JsonProperty("groupings")
    private Groupings groupings;

    /**
     * Requested statistics and their values results
     */
    @JsonProperty("statistics")
    private Statistics statistics;

    @JsonCreator
    public ValuesData(
            @JsonProperty("groupings") Groupings groupings,
            @JsonProperty("statistics") Statistics statistics) {
        Utils.checkNotNull(groupings, "groupings");
        Utils.checkNotNull(statistics, "statistics");
        this.groupings = groupings;
        this.statistics = statistics;
    }

    /**
     * Applied groupings and the values for this object
     */
    @JsonIgnore
    public Groupings groupings() {
        return groupings;
    }

    /**
     * Requested statistics and their values results
     */
    @JsonIgnore
    public Statistics statistics() {
        return statistics;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * Applied groupings and the values for this object
     */
    public ValuesData withGroupings(Groupings groupings) {
        Utils.checkNotNull(groupings, "groupings");
        this.groupings = groupings;
        return this;
    }

    /**
     * Requested statistics and their values results
     */
    public ValuesData withStatistics(Statistics statistics) {
        Utils.checkNotNull(statistics, "statistics");
        this.statistics = statistics;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ValuesData other = (ValuesData) o;
        return 
            Objects.deepEquals(this.groupings, other.groupings) &&
            Objects.deepEquals(this.statistics, other.statistics);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            groupings,
            statistics);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ValuesData.class,
                "groupings", groupings,
                "statistics", statistics);
    }
    
    public final static class Builder {
 
        private Groupings groupings;
 
        private Statistics statistics;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Applied groupings and the values for this object
         */
        public Builder groupings(Groupings groupings) {
            Utils.checkNotNull(groupings, "groupings");
            this.groupings = groupings;
            return this;
        }

        /**
         * Requested statistics and their values results
         */
        public Builder statistics(Statistics statistics) {
            Utils.checkNotNull(statistics, "statistics");
            this.statistics = statistics;
            return this;
        }
        
        public ValuesData build() {
            return new ValuesData(
                groupings,
                statistics);
        }
    }
}

