/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.commercesystems.klaviyo_java.models.components;


import com.commercesystems.klaviyo_java.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import java.util.Optional;


public class GetProfileResponseCompoundDocumentRelationships {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lists")
    private Optional<? extends GetProfileResponseCompoundDocumentLists> lists;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("segments")
    private Optional<? extends GetProfileResponseCompoundDocumentSegments> segments;

    @JsonCreator
    public GetProfileResponseCompoundDocumentRelationships(
            @JsonProperty("lists") Optional<? extends GetProfileResponseCompoundDocumentLists> lists,
            @JsonProperty("segments") Optional<? extends GetProfileResponseCompoundDocumentSegments> segments) {
        Utils.checkNotNull(lists, "lists");
        Utils.checkNotNull(segments, "segments");
        this.lists = lists;
        this.segments = segments;
    }
    
    public GetProfileResponseCompoundDocumentRelationships() {
        this(Optional.empty(), Optional.empty());
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<GetProfileResponseCompoundDocumentLists> lists() {
        return (Optional<GetProfileResponseCompoundDocumentLists>) lists;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<GetProfileResponseCompoundDocumentSegments> segments() {
        return (Optional<GetProfileResponseCompoundDocumentSegments>) segments;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public GetProfileResponseCompoundDocumentRelationships withLists(GetProfileResponseCompoundDocumentLists lists) {
        Utils.checkNotNull(lists, "lists");
        this.lists = Optional.ofNullable(lists);
        return this;
    }

    public GetProfileResponseCompoundDocumentRelationships withLists(Optional<? extends GetProfileResponseCompoundDocumentLists> lists) {
        Utils.checkNotNull(lists, "lists");
        this.lists = lists;
        return this;
    }

    public GetProfileResponseCompoundDocumentRelationships withSegments(GetProfileResponseCompoundDocumentSegments segments) {
        Utils.checkNotNull(segments, "segments");
        this.segments = Optional.ofNullable(segments);
        return this;
    }

    public GetProfileResponseCompoundDocumentRelationships withSegments(Optional<? extends GetProfileResponseCompoundDocumentSegments> segments) {
        Utils.checkNotNull(segments, "segments");
        this.segments = segments;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetProfileResponseCompoundDocumentRelationships other = (GetProfileResponseCompoundDocumentRelationships) o;
        return 
            Objects.deepEquals(this.lists, other.lists) &&
            Objects.deepEquals(this.segments, other.segments);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            lists,
            segments);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetProfileResponseCompoundDocumentRelationships.class,
                "lists", lists,
                "segments", segments);
    }
    
    public final static class Builder {
 
        private Optional<? extends GetProfileResponseCompoundDocumentLists> lists = Optional.empty();
 
        private Optional<? extends GetProfileResponseCompoundDocumentSegments> segments = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder lists(GetProfileResponseCompoundDocumentLists lists) {
            Utils.checkNotNull(lists, "lists");
            this.lists = Optional.ofNullable(lists);
            return this;
        }

        public Builder lists(Optional<? extends GetProfileResponseCompoundDocumentLists> lists) {
            Utils.checkNotNull(lists, "lists");
            this.lists = lists;
            return this;
        }

        public Builder segments(GetProfileResponseCompoundDocumentSegments segments) {
            Utils.checkNotNull(segments, "segments");
            this.segments = Optional.ofNullable(segments);
            return this;
        }

        public Builder segments(Optional<? extends GetProfileResponseCompoundDocumentSegments> segments) {
            Utils.checkNotNull(segments, "segments");
            this.segments = segments;
            return this;
        }
        
        public GetProfileResponseCompoundDocumentRelationships build() {
            return new GetProfileResponseCompoundDocumentRelationships(
                lists,
                segments);
        }
    }
}

