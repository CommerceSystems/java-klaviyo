/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.commercesystems.klaviyo_java.models.components;


import com.commercesystems.klaviyo_java.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.time.OffsetDateTime;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class PatchCampaignMessageResponseAttributes {

    /**
     * The label or name on the message
     */
    @JsonProperty("label")
    private String label;

    /**
     * The channel the message is to be sent on
     */
    @JsonProperty("channel")
    private String channel;

    /**
     * Additional attributes relating to the content of the message
     */
    @JsonProperty("content")
    private PatchCampaignMessageResponseContent content;

    /**
     * The list of appropriate Send Time Sub-objects associated with the message
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("send_times")
    private JsonNullable<? extends List<SendTimeSubObject>> sendTimes;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("render_options")
    private Optional<? extends RenderOptionsSubObject> renderOptions;

    /**
     * The datetime when the message was created
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("created_at")
    private JsonNullable<OffsetDateTime> createdAt;

    /**
     * The datetime when the message was last updated
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updated_at")
    private JsonNullable<OffsetDateTime> updatedAt;

    @JsonCreator
    public PatchCampaignMessageResponseAttributes(
            @JsonProperty("label") String label,
            @JsonProperty("channel") String channel,
            @JsonProperty("content") PatchCampaignMessageResponseContent content,
            @JsonProperty("send_times") JsonNullable<? extends List<SendTimeSubObject>> sendTimes,
            @JsonProperty("render_options") Optional<? extends RenderOptionsSubObject> renderOptions,
            @JsonProperty("created_at") JsonNullable<OffsetDateTime> createdAt,
            @JsonProperty("updated_at") JsonNullable<OffsetDateTime> updatedAt) {
        Utils.checkNotNull(label, "label");
        Utils.checkNotNull(channel, "channel");
        Utils.checkNotNull(content, "content");
        Utils.checkNotNull(sendTimes, "sendTimes");
        Utils.checkNotNull(renderOptions, "renderOptions");
        Utils.checkNotNull(createdAt, "createdAt");
        Utils.checkNotNull(updatedAt, "updatedAt");
        this.label = label;
        this.channel = channel;
        this.content = content;
        this.sendTimes = sendTimes;
        this.renderOptions = renderOptions;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
    }
    
    public PatchCampaignMessageResponseAttributes(
            String label,
            String channel,
            PatchCampaignMessageResponseContent content) {
        this(label, channel, content, JsonNullable.undefined(), Optional.empty(), JsonNullable.undefined(), JsonNullable.undefined());
    }

    /**
     * The label or name on the message
     */
    @JsonIgnore
    public String label() {
        return label;
    }

    /**
     * The channel the message is to be sent on
     */
    @JsonIgnore
    public String channel() {
        return channel;
    }

    /**
     * Additional attributes relating to the content of the message
     */
    @JsonIgnore
    public PatchCampaignMessageResponseContent content() {
        return content;
    }

    /**
     * The list of appropriate Send Time Sub-objects associated with the message
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<List<SendTimeSubObject>> sendTimes() {
        return (JsonNullable<List<SendTimeSubObject>>) sendTimes;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<RenderOptionsSubObject> renderOptions() {
        return (Optional<RenderOptionsSubObject>) renderOptions;
    }

    /**
     * The datetime when the message was created
     */
    @JsonIgnore
    public JsonNullable<OffsetDateTime> createdAt() {
        return createdAt;
    }

    /**
     * The datetime when the message was last updated
     */
    @JsonIgnore
    public JsonNullable<OffsetDateTime> updatedAt() {
        return updatedAt;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * The label or name on the message
     */
    public PatchCampaignMessageResponseAttributes withLabel(String label) {
        Utils.checkNotNull(label, "label");
        this.label = label;
        return this;
    }

    /**
     * The channel the message is to be sent on
     */
    public PatchCampaignMessageResponseAttributes withChannel(String channel) {
        Utils.checkNotNull(channel, "channel");
        this.channel = channel;
        return this;
    }

    /**
     * Additional attributes relating to the content of the message
     */
    public PatchCampaignMessageResponseAttributes withContent(PatchCampaignMessageResponseContent content) {
        Utils.checkNotNull(content, "content");
        this.content = content;
        return this;
    }

    /**
     * The list of appropriate Send Time Sub-objects associated with the message
     */
    public PatchCampaignMessageResponseAttributes withSendTimes(List<SendTimeSubObject> sendTimes) {
        Utils.checkNotNull(sendTimes, "sendTimes");
        this.sendTimes = JsonNullable.of(sendTimes);
        return this;
    }

    /**
     * The list of appropriate Send Time Sub-objects associated with the message
     */
    public PatchCampaignMessageResponseAttributes withSendTimes(JsonNullable<? extends List<SendTimeSubObject>> sendTimes) {
        Utils.checkNotNull(sendTimes, "sendTimes");
        this.sendTimes = sendTimes;
        return this;
    }

    public PatchCampaignMessageResponseAttributes withRenderOptions(RenderOptionsSubObject renderOptions) {
        Utils.checkNotNull(renderOptions, "renderOptions");
        this.renderOptions = Optional.ofNullable(renderOptions);
        return this;
    }

    public PatchCampaignMessageResponseAttributes withRenderOptions(Optional<? extends RenderOptionsSubObject> renderOptions) {
        Utils.checkNotNull(renderOptions, "renderOptions");
        this.renderOptions = renderOptions;
        return this;
    }

    /**
     * The datetime when the message was created
     */
    public PatchCampaignMessageResponseAttributes withCreatedAt(OffsetDateTime createdAt) {
        Utils.checkNotNull(createdAt, "createdAt");
        this.createdAt = JsonNullable.of(createdAt);
        return this;
    }

    /**
     * The datetime when the message was created
     */
    public PatchCampaignMessageResponseAttributes withCreatedAt(JsonNullable<OffsetDateTime> createdAt) {
        Utils.checkNotNull(createdAt, "createdAt");
        this.createdAt = createdAt;
        return this;
    }

    /**
     * The datetime when the message was last updated
     */
    public PatchCampaignMessageResponseAttributes withUpdatedAt(OffsetDateTime updatedAt) {
        Utils.checkNotNull(updatedAt, "updatedAt");
        this.updatedAt = JsonNullable.of(updatedAt);
        return this;
    }

    /**
     * The datetime when the message was last updated
     */
    public PatchCampaignMessageResponseAttributes withUpdatedAt(JsonNullable<OffsetDateTime> updatedAt) {
        Utils.checkNotNull(updatedAt, "updatedAt");
        this.updatedAt = updatedAt;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PatchCampaignMessageResponseAttributes other = (PatchCampaignMessageResponseAttributes) o;
        return 
            Objects.deepEquals(this.label, other.label) &&
            Objects.deepEquals(this.channel, other.channel) &&
            Objects.deepEquals(this.content, other.content) &&
            Objects.deepEquals(this.sendTimes, other.sendTimes) &&
            Objects.deepEquals(this.renderOptions, other.renderOptions) &&
            Objects.deepEquals(this.createdAt, other.createdAt) &&
            Objects.deepEquals(this.updatedAt, other.updatedAt);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            label,
            channel,
            content,
            sendTimes,
            renderOptions,
            createdAt,
            updatedAt);
    }
    
    @Override
    public String toString() {
        return Utils.toString(PatchCampaignMessageResponseAttributes.class,
                "label", label,
                "channel", channel,
                "content", content,
                "sendTimes", sendTimes,
                "renderOptions", renderOptions,
                "createdAt", createdAt,
                "updatedAt", updatedAt);
    }
    
    public final static class Builder {
 
        private String label;
 
        private String channel;
 
        private PatchCampaignMessageResponseContent content;
 
        private JsonNullable<? extends List<SendTimeSubObject>> sendTimes = JsonNullable.undefined();
 
        private Optional<? extends RenderOptionsSubObject> renderOptions = Optional.empty();
 
        private JsonNullable<OffsetDateTime> createdAt = JsonNullable.undefined();
 
        private JsonNullable<OffsetDateTime> updatedAt = JsonNullable.undefined();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * The label or name on the message
         */
        public Builder label(String label) {
            Utils.checkNotNull(label, "label");
            this.label = label;
            return this;
        }

        /**
         * The channel the message is to be sent on
         */
        public Builder channel(String channel) {
            Utils.checkNotNull(channel, "channel");
            this.channel = channel;
            return this;
        }

        /**
         * Additional attributes relating to the content of the message
         */
        public Builder content(PatchCampaignMessageResponseContent content) {
            Utils.checkNotNull(content, "content");
            this.content = content;
            return this;
        }

        /**
         * The list of appropriate Send Time Sub-objects associated with the message
         */
        public Builder sendTimes(List<SendTimeSubObject> sendTimes) {
            Utils.checkNotNull(sendTimes, "sendTimes");
            this.sendTimes = JsonNullable.of(sendTimes);
            return this;
        }

        /**
         * The list of appropriate Send Time Sub-objects associated with the message
         */
        public Builder sendTimes(JsonNullable<? extends List<SendTimeSubObject>> sendTimes) {
            Utils.checkNotNull(sendTimes, "sendTimes");
            this.sendTimes = sendTimes;
            return this;
        }

        public Builder renderOptions(RenderOptionsSubObject renderOptions) {
            Utils.checkNotNull(renderOptions, "renderOptions");
            this.renderOptions = Optional.ofNullable(renderOptions);
            return this;
        }

        public Builder renderOptions(Optional<? extends RenderOptionsSubObject> renderOptions) {
            Utils.checkNotNull(renderOptions, "renderOptions");
            this.renderOptions = renderOptions;
            return this;
        }

        /**
         * The datetime when the message was created
         */
        public Builder createdAt(OffsetDateTime createdAt) {
            Utils.checkNotNull(createdAt, "createdAt");
            this.createdAt = JsonNullable.of(createdAt);
            return this;
        }

        /**
         * The datetime when the message was created
         */
        public Builder createdAt(JsonNullable<OffsetDateTime> createdAt) {
            Utils.checkNotNull(createdAt, "createdAt");
            this.createdAt = createdAt;
            return this;
        }

        /**
         * The datetime when the message was last updated
         */
        public Builder updatedAt(OffsetDateTime updatedAt) {
            Utils.checkNotNull(updatedAt, "updatedAt");
            this.updatedAt = JsonNullable.of(updatedAt);
            return this;
        }

        /**
         * The datetime when the message was last updated
         */
        public Builder updatedAt(JsonNullable<OffsetDateTime> updatedAt) {
            Utils.checkNotNull(updatedAt, "updatedAt");
            this.updatedAt = updatedAt;
            return this;
        }
        
        public PatchCampaignMessageResponseAttributes build() {
            return new PatchCampaignMessageResponseAttributes(
                label,
                channel,
                content,
                sendTimes,
                renderOptions,
                createdAt,
                updatedAt);
        }
    }
}

