/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.commercesystems.klaviyo_java.models.operations;


import com.commercesystems.klaviyo_java.utils.LazySingletonValue;
import com.commercesystems.klaviyo_java.utils.SpeakeasyMetadata;
import com.commercesystems.klaviyo_java.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.core.type.TypeReference;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.List;
import java.util.Objects;
import java.util.Optional;


public class GetEventRequest {

    /**
     * ID of the event
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=id")
    private String id;

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=false,name=fields[event]")
    private Optional<? extends List<QueryParamFieldsEvent>> fieldsEvent;

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=false,name=fields[metric]")
    private Optional<? extends List<QueryParamFieldsMetric>> fieldsMetric;

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=false,name=fields[profile]")
    private Optional<? extends List<QueryParamFieldsProfile>> fieldsProfile;

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=false,name=include")
    private Optional<? extends List<GetEventQueryParamInclude>> include;

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=revision")
    private String revision;

    @JsonCreator
    public GetEventRequest(
            String id,
            Optional<? extends List<QueryParamFieldsEvent>> fieldsEvent,
            Optional<? extends List<QueryParamFieldsMetric>> fieldsMetric,
            Optional<? extends List<QueryParamFieldsProfile>> fieldsProfile,
            Optional<? extends List<GetEventQueryParamInclude>> include,
            String revision) {
        Utils.checkNotNull(id, "id");
        Utils.checkNotNull(fieldsEvent, "fieldsEvent");
        Utils.checkNotNull(fieldsMetric, "fieldsMetric");
        Utils.checkNotNull(fieldsProfile, "fieldsProfile");
        Utils.checkNotNull(include, "include");
        Utils.checkNotNull(revision, "revision");
        this.id = id;
        this.fieldsEvent = fieldsEvent;
        this.fieldsMetric = fieldsMetric;
        this.fieldsProfile = fieldsProfile;
        this.include = include;
        this.revision = revision;
    }
    
    public GetEventRequest(
            String id,
            String revision) {
        this(id, Optional.empty(), Optional.empty(), Optional.empty(), Optional.empty(), revision);
    }

    /**
     * ID of the event
     */
    @JsonIgnore
    public String id() {
        return id;
    }

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<List<QueryParamFieldsEvent>> fieldsEvent() {
        return (Optional<List<QueryParamFieldsEvent>>) fieldsEvent;
    }

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<List<QueryParamFieldsMetric>> fieldsMetric() {
        return (Optional<List<QueryParamFieldsMetric>>) fieldsMetric;
    }

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<List<QueryParamFieldsProfile>> fieldsProfile() {
        return (Optional<List<QueryParamFieldsProfile>>) fieldsProfile;
    }

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<List<GetEventQueryParamInclude>> include() {
        return (Optional<List<GetEventQueryParamInclude>>) include;
    }

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     */
    @JsonIgnore
    public String revision() {
        return revision;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * ID of the event
     */
    public GetEventRequest withId(String id) {
        Utils.checkNotNull(id, "id");
        this.id = id;
        return this;
    }

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets
     */
    public GetEventRequest withFieldsEvent(List<QueryParamFieldsEvent> fieldsEvent) {
        Utils.checkNotNull(fieldsEvent, "fieldsEvent");
        this.fieldsEvent = Optional.ofNullable(fieldsEvent);
        return this;
    }

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets
     */
    public GetEventRequest withFieldsEvent(Optional<? extends List<QueryParamFieldsEvent>> fieldsEvent) {
        Utils.checkNotNull(fieldsEvent, "fieldsEvent");
        this.fieldsEvent = fieldsEvent;
        return this;
    }

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets
     */
    public GetEventRequest withFieldsMetric(List<QueryParamFieldsMetric> fieldsMetric) {
        Utils.checkNotNull(fieldsMetric, "fieldsMetric");
        this.fieldsMetric = Optional.ofNullable(fieldsMetric);
        return this;
    }

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets
     */
    public GetEventRequest withFieldsMetric(Optional<? extends List<QueryParamFieldsMetric>> fieldsMetric) {
        Utils.checkNotNull(fieldsMetric, "fieldsMetric");
        this.fieldsMetric = fieldsMetric;
        return this;
    }

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets
     */
    public GetEventRequest withFieldsProfile(List<QueryParamFieldsProfile> fieldsProfile) {
        Utils.checkNotNull(fieldsProfile, "fieldsProfile");
        this.fieldsProfile = Optional.ofNullable(fieldsProfile);
        return this;
    }

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets
     */
    public GetEventRequest withFieldsProfile(Optional<? extends List<QueryParamFieldsProfile>> fieldsProfile) {
        Utils.checkNotNull(fieldsProfile, "fieldsProfile");
        this.fieldsProfile = fieldsProfile;
        return this;
    }

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships
     */
    public GetEventRequest withInclude(List<GetEventQueryParamInclude> include) {
        Utils.checkNotNull(include, "include");
        this.include = Optional.ofNullable(include);
        return this;
    }

    /**
     * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships
     */
    public GetEventRequest withInclude(Optional<? extends List<GetEventQueryParamInclude>> include) {
        Utils.checkNotNull(include, "include");
        this.include = include;
        return this;
    }

    /**
     * API endpoint revision (format: YYYY-MM-DD[.suffix])
     */
    public GetEventRequest withRevision(String revision) {
        Utils.checkNotNull(revision, "revision");
        this.revision = revision;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        GetEventRequest other = (GetEventRequest) o;
        return 
            Objects.deepEquals(this.id, other.id) &&
            Objects.deepEquals(this.fieldsEvent, other.fieldsEvent) &&
            Objects.deepEquals(this.fieldsMetric, other.fieldsMetric) &&
            Objects.deepEquals(this.fieldsProfile, other.fieldsProfile) &&
            Objects.deepEquals(this.include, other.include) &&
            Objects.deepEquals(this.revision, other.revision);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            id,
            fieldsEvent,
            fieldsMetric,
            fieldsProfile,
            include,
            revision);
    }
    
    @Override
    public String toString() {
        return Utils.toString(GetEventRequest.class,
                "id", id,
                "fieldsEvent", fieldsEvent,
                "fieldsMetric", fieldsMetric,
                "fieldsProfile", fieldsProfile,
                "include", include,
                "revision", revision);
    }
    
    public final static class Builder {
 
        private String id;
 
        private Optional<? extends List<QueryParamFieldsEvent>> fieldsEvent = Optional.empty();
 
        private Optional<? extends List<QueryParamFieldsMetric>> fieldsMetric = Optional.empty();
 
        private Optional<? extends List<QueryParamFieldsProfile>> fieldsProfile = Optional.empty();
 
        private Optional<? extends List<GetEventQueryParamInclude>> include = Optional.empty();
 
        private String revision;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * ID of the event
         */
        public Builder id(String id) {
            Utils.checkNotNull(id, "id");
            this.id = id;
            return this;
        }

        /**
         * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets
         */
        public Builder fieldsEvent(List<QueryParamFieldsEvent> fieldsEvent) {
            Utils.checkNotNull(fieldsEvent, "fieldsEvent");
            this.fieldsEvent = Optional.ofNullable(fieldsEvent);
            return this;
        }

        /**
         * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets
         */
        public Builder fieldsEvent(Optional<? extends List<QueryParamFieldsEvent>> fieldsEvent) {
            Utils.checkNotNull(fieldsEvent, "fieldsEvent");
            this.fieldsEvent = fieldsEvent;
            return this;
        }

        /**
         * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets
         */
        public Builder fieldsMetric(List<QueryParamFieldsMetric> fieldsMetric) {
            Utils.checkNotNull(fieldsMetric, "fieldsMetric");
            this.fieldsMetric = Optional.ofNullable(fieldsMetric);
            return this;
        }

        /**
         * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets
         */
        public Builder fieldsMetric(Optional<? extends List<QueryParamFieldsMetric>> fieldsMetric) {
            Utils.checkNotNull(fieldsMetric, "fieldsMetric");
            this.fieldsMetric = fieldsMetric;
            return this;
        }

        /**
         * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets
         */
        public Builder fieldsProfile(List<QueryParamFieldsProfile> fieldsProfile) {
            Utils.checkNotNull(fieldsProfile, "fieldsProfile");
            this.fieldsProfile = Optional.ofNullable(fieldsProfile);
            return this;
        }

        /**
         * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#sparse-fieldsets
         */
        public Builder fieldsProfile(Optional<? extends List<QueryParamFieldsProfile>> fieldsProfile) {
            Utils.checkNotNull(fieldsProfile, "fieldsProfile");
            this.fieldsProfile = fieldsProfile;
            return this;
        }

        /**
         * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships
         */
        public Builder include(List<GetEventQueryParamInclude> include) {
            Utils.checkNotNull(include, "include");
            this.include = Optional.ofNullable(include);
            return this;
        }

        /**
         * For more information please visit https://developers.klaviyo.com/en/v2024-10-15/reference/api-overview#relationships
         */
        public Builder include(Optional<? extends List<GetEventQueryParamInclude>> include) {
            Utils.checkNotNull(include, "include");
            this.include = include;
            return this;
        }

        /**
         * API endpoint revision (format: YYYY-MM-DD[.suffix])
         */
        public Builder revision(String revision) {
            Utils.checkNotNull(revision, "revision");
            this.revision = revision;
            return this;
        }
        
        public GetEventRequest build() {
            if (revision == null) {
                revision = _SINGLETON_VALUE_Revision.value();
            }            return new GetEventRequest(
                id,
                fieldsEvent,
                fieldsMetric,
                fieldsProfile,
                include,
                revision);
        }

        private static final LazySingletonValue<String> _SINGLETON_VALUE_Revision =
                new LazySingletonValue<>(
                        "revision",
                        "\"2024-10-15\"",
                        new TypeReference<String>() {});
    }
}

