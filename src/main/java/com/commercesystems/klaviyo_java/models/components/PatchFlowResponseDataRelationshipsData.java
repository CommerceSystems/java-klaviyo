/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.commercesystems.klaviyo_java.models.components;


import com.commercesystems.klaviyo_java.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;


public class PatchFlowResponseDataRelationshipsData {

    @JsonProperty("type")
    private FlowActionEnum type;

    @JsonProperty("id")
    private String id;

    @JsonCreator
    public PatchFlowResponseDataRelationshipsData(
            @JsonProperty("type") FlowActionEnum type,
            @JsonProperty("id") String id) {
        Utils.checkNotNull(type, "type");
        Utils.checkNotNull(id, "id");
        this.type = type;
        this.id = id;
    }

    @JsonIgnore
    public FlowActionEnum type() {
        return type;
    }

    @JsonIgnore
    public String id() {
        return id;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public PatchFlowResponseDataRelationshipsData withType(FlowActionEnum type) {
        Utils.checkNotNull(type, "type");
        this.type = type;
        return this;
    }

    public PatchFlowResponseDataRelationshipsData withId(String id) {
        Utils.checkNotNull(id, "id");
        this.id = id;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PatchFlowResponseDataRelationshipsData other = (PatchFlowResponseDataRelationshipsData) o;
        return 
            Objects.deepEquals(this.type, other.type) &&
            Objects.deepEquals(this.id, other.id);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            type,
            id);
    }
    
    @Override
    public String toString() {
        return Utils.toString(PatchFlowResponseDataRelationshipsData.class,
                "type", type,
                "id", id);
    }
    
    public final static class Builder {
 
        private FlowActionEnum type;
 
        private String id;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder type(FlowActionEnum type) {
            Utils.checkNotNull(type, "type");
            this.type = type;
            return this;
        }

        public Builder id(String id) {
            Utils.checkNotNull(id, "id");
            this.id = id;
            return this;
        }
        
        public PatchFlowResponseDataRelationshipsData build() {
            return new PatchFlowResponseDataRelationshipsData(
                type,
                id);
        }
    }
}

