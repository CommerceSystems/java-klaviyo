/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.commercesystems.klaviyo_java.models.components;


import com.commercesystems.klaviyo_java.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import java.util.Optional;
import org.openapitools.jackson.nullable.JsonNullable;


public class ProfileUpsertQueryResourceObjectAttributes {

    /**
     * Individual's email address
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    private JsonNullable<String> email;

    /**
     * Individual's phone number in E.164 format
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("phone_number")
    private JsonNullable<String> phoneNumber;

    /**
     * A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("external_id")
    private JsonNullable<String> externalId;

    /**
     * Id that can be used to identify a profile when other identifiers are not available
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("anonymous_id")
    private JsonNullable<String> anonymousId;

    /**
     * Also known as the `exchange_id`, this is an encrypted identifier used for identifying a
     * profile by Klaviyo's web tracking.
     * 
     * You can use this field as a filter when retrieving profiles via the Get Profiles endpoint.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("_kx")
    private JsonNullable<String> kx;

    /**
     * Individual's first name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("first_name")
    private JsonNullable<String> firstName;

    /**
     * Individual's last name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("last_name")
    private JsonNullable<String> lastName;

    /**
     * Name of the company or organization within the company for whom the individual works
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("organization")
    private JsonNullable<String> organization;

    /**
     * The locale of the profile, in the IETF BCP 47 language tag format like (ISO 639-1/2)-(ISO 3166 alpha-2)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("locale")
    private JsonNullable<String> locale;

    /**
     * Individual's job title
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    private JsonNullable<String> title;

    /**
     * URL pointing to the location of a profile image
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("image")
    private JsonNullable<String> image;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location")
    private Optional<? extends ProfileLocation> location;

    /**
     * An object containing key/value pairs for any custom properties assigned to this profile
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("properties")
    private JsonNullable<? extends ProfileUpsertQueryResourceObjectProperties> properties;

    @JsonCreator
    public ProfileUpsertQueryResourceObjectAttributes(
            @JsonProperty("email") JsonNullable<String> email,
            @JsonProperty("phone_number") JsonNullable<String> phoneNumber,
            @JsonProperty("external_id") JsonNullable<String> externalId,
            @JsonProperty("anonymous_id") JsonNullable<String> anonymousId,
            @JsonProperty("_kx") JsonNullable<String> kx,
            @JsonProperty("first_name") JsonNullable<String> firstName,
            @JsonProperty("last_name") JsonNullable<String> lastName,
            @JsonProperty("organization") JsonNullable<String> organization,
            @JsonProperty("locale") JsonNullable<String> locale,
            @JsonProperty("title") JsonNullable<String> title,
            @JsonProperty("image") JsonNullable<String> image,
            @JsonProperty("location") Optional<? extends ProfileLocation> location,
            @JsonProperty("properties") JsonNullable<? extends ProfileUpsertQueryResourceObjectProperties> properties) {
        Utils.checkNotNull(email, "email");
        Utils.checkNotNull(phoneNumber, "phoneNumber");
        Utils.checkNotNull(externalId, "externalId");
        Utils.checkNotNull(anonymousId, "anonymousId");
        Utils.checkNotNull(kx, "kx");
        Utils.checkNotNull(firstName, "firstName");
        Utils.checkNotNull(lastName, "lastName");
        Utils.checkNotNull(organization, "organization");
        Utils.checkNotNull(locale, "locale");
        Utils.checkNotNull(title, "title");
        Utils.checkNotNull(image, "image");
        Utils.checkNotNull(location, "location");
        Utils.checkNotNull(properties, "properties");
        this.email = email;
        this.phoneNumber = phoneNumber;
        this.externalId = externalId;
        this.anonymousId = anonymousId;
        this.kx = kx;
        this.firstName = firstName;
        this.lastName = lastName;
        this.organization = organization;
        this.locale = locale;
        this.title = title;
        this.image = image;
        this.location = location;
        this.properties = properties;
    }
    
    public ProfileUpsertQueryResourceObjectAttributes() {
        this(JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), JsonNullable.undefined(), Optional.empty(), JsonNullable.undefined());
    }

    /**
     * Individual's email address
     */
    @JsonIgnore
    public JsonNullable<String> email() {
        return email;
    }

    /**
     * Individual's phone number in E.164 format
     */
    @JsonIgnore
    public JsonNullable<String> phoneNumber() {
        return phoneNumber;
    }

    /**
     * A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system.
     */
    @JsonIgnore
    public JsonNullable<String> externalId() {
        return externalId;
    }

    /**
     * Id that can be used to identify a profile when other identifiers are not available
     */
    @JsonIgnore
    public JsonNullable<String> anonymousId() {
        return anonymousId;
    }

    /**
     * Also known as the `exchange_id`, this is an encrypted identifier used for identifying a
     * profile by Klaviyo's web tracking.
     * 
     * You can use this field as a filter when retrieving profiles via the Get Profiles endpoint.
     */
    @JsonIgnore
    public JsonNullable<String> kx() {
        return kx;
    }

    /**
     * Individual's first name
     */
    @JsonIgnore
    public JsonNullable<String> firstName() {
        return firstName;
    }

    /**
     * Individual's last name
     */
    @JsonIgnore
    public JsonNullable<String> lastName() {
        return lastName;
    }

    /**
     * Name of the company or organization within the company for whom the individual works
     */
    @JsonIgnore
    public JsonNullable<String> organization() {
        return organization;
    }

    /**
     * The locale of the profile, in the IETF BCP 47 language tag format like (ISO 639-1/2)-(ISO 3166 alpha-2)
     */
    @JsonIgnore
    public JsonNullable<String> locale() {
        return locale;
    }

    /**
     * Individual's job title
     */
    @JsonIgnore
    public JsonNullable<String> title() {
        return title;
    }

    /**
     * URL pointing to the location of a profile image
     */
    @JsonIgnore
    public JsonNullable<String> image() {
        return image;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<ProfileLocation> location() {
        return (Optional<ProfileLocation>) location;
    }

    /**
     * An object containing key/value pairs for any custom properties assigned to this profile
     */
    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<ProfileUpsertQueryResourceObjectProperties> properties() {
        return (JsonNullable<ProfileUpsertQueryResourceObjectProperties>) properties;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * Individual's email address
     */
    public ProfileUpsertQueryResourceObjectAttributes withEmail(String email) {
        Utils.checkNotNull(email, "email");
        this.email = JsonNullable.of(email);
        return this;
    }

    /**
     * Individual's email address
     */
    public ProfileUpsertQueryResourceObjectAttributes withEmail(JsonNullable<String> email) {
        Utils.checkNotNull(email, "email");
        this.email = email;
        return this;
    }

    /**
     * Individual's phone number in E.164 format
     */
    public ProfileUpsertQueryResourceObjectAttributes withPhoneNumber(String phoneNumber) {
        Utils.checkNotNull(phoneNumber, "phoneNumber");
        this.phoneNumber = JsonNullable.of(phoneNumber);
        return this;
    }

    /**
     * Individual's phone number in E.164 format
     */
    public ProfileUpsertQueryResourceObjectAttributes withPhoneNumber(JsonNullable<String> phoneNumber) {
        Utils.checkNotNull(phoneNumber, "phoneNumber");
        this.phoneNumber = phoneNumber;
        return this;
    }

    /**
     * A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system.
     */
    public ProfileUpsertQueryResourceObjectAttributes withExternalId(String externalId) {
        Utils.checkNotNull(externalId, "externalId");
        this.externalId = JsonNullable.of(externalId);
        return this;
    }

    /**
     * A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system.
     */
    public ProfileUpsertQueryResourceObjectAttributes withExternalId(JsonNullable<String> externalId) {
        Utils.checkNotNull(externalId, "externalId");
        this.externalId = externalId;
        return this;
    }

    /**
     * Id that can be used to identify a profile when other identifiers are not available
     */
    public ProfileUpsertQueryResourceObjectAttributes withAnonymousId(String anonymousId) {
        Utils.checkNotNull(anonymousId, "anonymousId");
        this.anonymousId = JsonNullable.of(anonymousId);
        return this;
    }

    /**
     * Id that can be used to identify a profile when other identifiers are not available
     */
    public ProfileUpsertQueryResourceObjectAttributes withAnonymousId(JsonNullable<String> anonymousId) {
        Utils.checkNotNull(anonymousId, "anonymousId");
        this.anonymousId = anonymousId;
        return this;
    }

    /**
     * Also known as the `exchange_id`, this is an encrypted identifier used for identifying a
     * profile by Klaviyo's web tracking.
     * 
     * You can use this field as a filter when retrieving profiles via the Get Profiles endpoint.
     */
    public ProfileUpsertQueryResourceObjectAttributes withKx(String kx) {
        Utils.checkNotNull(kx, "kx");
        this.kx = JsonNullable.of(kx);
        return this;
    }

    /**
     * Also known as the `exchange_id`, this is an encrypted identifier used for identifying a
     * profile by Klaviyo's web tracking.
     * 
     * You can use this field as a filter when retrieving profiles via the Get Profiles endpoint.
     */
    public ProfileUpsertQueryResourceObjectAttributes withKx(JsonNullable<String> kx) {
        Utils.checkNotNull(kx, "kx");
        this.kx = kx;
        return this;
    }

    /**
     * Individual's first name
     */
    public ProfileUpsertQueryResourceObjectAttributes withFirstName(String firstName) {
        Utils.checkNotNull(firstName, "firstName");
        this.firstName = JsonNullable.of(firstName);
        return this;
    }

    /**
     * Individual's first name
     */
    public ProfileUpsertQueryResourceObjectAttributes withFirstName(JsonNullable<String> firstName) {
        Utils.checkNotNull(firstName, "firstName");
        this.firstName = firstName;
        return this;
    }

    /**
     * Individual's last name
     */
    public ProfileUpsertQueryResourceObjectAttributes withLastName(String lastName) {
        Utils.checkNotNull(lastName, "lastName");
        this.lastName = JsonNullable.of(lastName);
        return this;
    }

    /**
     * Individual's last name
     */
    public ProfileUpsertQueryResourceObjectAttributes withLastName(JsonNullable<String> lastName) {
        Utils.checkNotNull(lastName, "lastName");
        this.lastName = lastName;
        return this;
    }

    /**
     * Name of the company or organization within the company for whom the individual works
     */
    public ProfileUpsertQueryResourceObjectAttributes withOrganization(String organization) {
        Utils.checkNotNull(organization, "organization");
        this.organization = JsonNullable.of(organization);
        return this;
    }

    /**
     * Name of the company or organization within the company for whom the individual works
     */
    public ProfileUpsertQueryResourceObjectAttributes withOrganization(JsonNullable<String> organization) {
        Utils.checkNotNull(organization, "organization");
        this.organization = organization;
        return this;
    }

    /**
     * The locale of the profile, in the IETF BCP 47 language tag format like (ISO 639-1/2)-(ISO 3166 alpha-2)
     */
    public ProfileUpsertQueryResourceObjectAttributes withLocale(String locale) {
        Utils.checkNotNull(locale, "locale");
        this.locale = JsonNullable.of(locale);
        return this;
    }

    /**
     * The locale of the profile, in the IETF BCP 47 language tag format like (ISO 639-1/2)-(ISO 3166 alpha-2)
     */
    public ProfileUpsertQueryResourceObjectAttributes withLocale(JsonNullable<String> locale) {
        Utils.checkNotNull(locale, "locale");
        this.locale = locale;
        return this;
    }

    /**
     * Individual's job title
     */
    public ProfileUpsertQueryResourceObjectAttributes withTitle(String title) {
        Utils.checkNotNull(title, "title");
        this.title = JsonNullable.of(title);
        return this;
    }

    /**
     * Individual's job title
     */
    public ProfileUpsertQueryResourceObjectAttributes withTitle(JsonNullable<String> title) {
        Utils.checkNotNull(title, "title");
        this.title = title;
        return this;
    }

    /**
     * URL pointing to the location of a profile image
     */
    public ProfileUpsertQueryResourceObjectAttributes withImage(String image) {
        Utils.checkNotNull(image, "image");
        this.image = JsonNullable.of(image);
        return this;
    }

    /**
     * URL pointing to the location of a profile image
     */
    public ProfileUpsertQueryResourceObjectAttributes withImage(JsonNullable<String> image) {
        Utils.checkNotNull(image, "image");
        this.image = image;
        return this;
    }

    public ProfileUpsertQueryResourceObjectAttributes withLocation(ProfileLocation location) {
        Utils.checkNotNull(location, "location");
        this.location = Optional.ofNullable(location);
        return this;
    }

    public ProfileUpsertQueryResourceObjectAttributes withLocation(Optional<? extends ProfileLocation> location) {
        Utils.checkNotNull(location, "location");
        this.location = location;
        return this;
    }

    /**
     * An object containing key/value pairs for any custom properties assigned to this profile
     */
    public ProfileUpsertQueryResourceObjectAttributes withProperties(ProfileUpsertQueryResourceObjectProperties properties) {
        Utils.checkNotNull(properties, "properties");
        this.properties = JsonNullable.of(properties);
        return this;
    }

    /**
     * An object containing key/value pairs for any custom properties assigned to this profile
     */
    public ProfileUpsertQueryResourceObjectAttributes withProperties(JsonNullable<? extends ProfileUpsertQueryResourceObjectProperties> properties) {
        Utils.checkNotNull(properties, "properties");
        this.properties = properties;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ProfileUpsertQueryResourceObjectAttributes other = (ProfileUpsertQueryResourceObjectAttributes) o;
        return 
            Objects.deepEquals(this.email, other.email) &&
            Objects.deepEquals(this.phoneNumber, other.phoneNumber) &&
            Objects.deepEquals(this.externalId, other.externalId) &&
            Objects.deepEquals(this.anonymousId, other.anonymousId) &&
            Objects.deepEquals(this.kx, other.kx) &&
            Objects.deepEquals(this.firstName, other.firstName) &&
            Objects.deepEquals(this.lastName, other.lastName) &&
            Objects.deepEquals(this.organization, other.organization) &&
            Objects.deepEquals(this.locale, other.locale) &&
            Objects.deepEquals(this.title, other.title) &&
            Objects.deepEquals(this.image, other.image) &&
            Objects.deepEquals(this.location, other.location) &&
            Objects.deepEquals(this.properties, other.properties);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            email,
            phoneNumber,
            externalId,
            anonymousId,
            kx,
            firstName,
            lastName,
            organization,
            locale,
            title,
            image,
            location,
            properties);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ProfileUpsertQueryResourceObjectAttributes.class,
                "email", email,
                "phoneNumber", phoneNumber,
                "externalId", externalId,
                "anonymousId", anonymousId,
                "kx", kx,
                "firstName", firstName,
                "lastName", lastName,
                "organization", organization,
                "locale", locale,
                "title", title,
                "image", image,
                "location", location,
                "properties", properties);
    }
    
    public final static class Builder {
 
        private JsonNullable<String> email = JsonNullable.undefined();
 
        private JsonNullable<String> phoneNumber = JsonNullable.undefined();
 
        private JsonNullable<String> externalId = JsonNullable.undefined();
 
        private JsonNullable<String> anonymousId = JsonNullable.undefined();
 
        private JsonNullable<String> kx = JsonNullable.undefined();
 
        private JsonNullable<String> firstName = JsonNullable.undefined();
 
        private JsonNullable<String> lastName = JsonNullable.undefined();
 
        private JsonNullable<String> organization = JsonNullable.undefined();
 
        private JsonNullable<String> locale = JsonNullable.undefined();
 
        private JsonNullable<String> title = JsonNullable.undefined();
 
        private JsonNullable<String> image = JsonNullable.undefined();
 
        private Optional<? extends ProfileLocation> location = Optional.empty();
 
        private JsonNullable<? extends ProfileUpsertQueryResourceObjectProperties> properties = JsonNullable.undefined();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Individual's email address
         */
        public Builder email(String email) {
            Utils.checkNotNull(email, "email");
            this.email = JsonNullable.of(email);
            return this;
        }

        /**
         * Individual's email address
         */
        public Builder email(JsonNullable<String> email) {
            Utils.checkNotNull(email, "email");
            this.email = email;
            return this;
        }

        /**
         * Individual's phone number in E.164 format
         */
        public Builder phoneNumber(String phoneNumber) {
            Utils.checkNotNull(phoneNumber, "phoneNumber");
            this.phoneNumber = JsonNullable.of(phoneNumber);
            return this;
        }

        /**
         * Individual's phone number in E.164 format
         */
        public Builder phoneNumber(JsonNullable<String> phoneNumber) {
            Utils.checkNotNull(phoneNumber, "phoneNumber");
            this.phoneNumber = phoneNumber;
            return this;
        }

        /**
         * A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system.
         */
        public Builder externalId(String externalId) {
            Utils.checkNotNull(externalId, "externalId");
            this.externalId = JsonNullable.of(externalId);
            return this;
        }

        /**
         * A unique identifier used by customers to associate Klaviyo profiles with profiles in an external system, such as a point-of-sale system. Format varies based on the external system.
         */
        public Builder externalId(JsonNullable<String> externalId) {
            Utils.checkNotNull(externalId, "externalId");
            this.externalId = externalId;
            return this;
        }

        /**
         * Id that can be used to identify a profile when other identifiers are not available
         */
        public Builder anonymousId(String anonymousId) {
            Utils.checkNotNull(anonymousId, "anonymousId");
            this.anonymousId = JsonNullable.of(anonymousId);
            return this;
        }

        /**
         * Id that can be used to identify a profile when other identifiers are not available
         */
        public Builder anonymousId(JsonNullable<String> anonymousId) {
            Utils.checkNotNull(anonymousId, "anonymousId");
            this.anonymousId = anonymousId;
            return this;
        }

        /**
         * Also known as the `exchange_id`, this is an encrypted identifier used for identifying a
         * profile by Klaviyo's web tracking.
         * 
         * You can use this field as a filter when retrieving profiles via the Get Profiles endpoint.
         */
        public Builder kx(String kx) {
            Utils.checkNotNull(kx, "kx");
            this.kx = JsonNullable.of(kx);
            return this;
        }

        /**
         * Also known as the `exchange_id`, this is an encrypted identifier used for identifying a
         * profile by Klaviyo's web tracking.
         * 
         * You can use this field as a filter when retrieving profiles via the Get Profiles endpoint.
         */
        public Builder kx(JsonNullable<String> kx) {
            Utils.checkNotNull(kx, "kx");
            this.kx = kx;
            return this;
        }

        /**
         * Individual's first name
         */
        public Builder firstName(String firstName) {
            Utils.checkNotNull(firstName, "firstName");
            this.firstName = JsonNullable.of(firstName);
            return this;
        }

        /**
         * Individual's first name
         */
        public Builder firstName(JsonNullable<String> firstName) {
            Utils.checkNotNull(firstName, "firstName");
            this.firstName = firstName;
            return this;
        }

        /**
         * Individual's last name
         */
        public Builder lastName(String lastName) {
            Utils.checkNotNull(lastName, "lastName");
            this.lastName = JsonNullable.of(lastName);
            return this;
        }

        /**
         * Individual's last name
         */
        public Builder lastName(JsonNullable<String> lastName) {
            Utils.checkNotNull(lastName, "lastName");
            this.lastName = lastName;
            return this;
        }

        /**
         * Name of the company or organization within the company for whom the individual works
         */
        public Builder organization(String organization) {
            Utils.checkNotNull(organization, "organization");
            this.organization = JsonNullable.of(organization);
            return this;
        }

        /**
         * Name of the company or organization within the company for whom the individual works
         */
        public Builder organization(JsonNullable<String> organization) {
            Utils.checkNotNull(organization, "organization");
            this.organization = organization;
            return this;
        }

        /**
         * The locale of the profile, in the IETF BCP 47 language tag format like (ISO 639-1/2)-(ISO 3166 alpha-2)
         */
        public Builder locale(String locale) {
            Utils.checkNotNull(locale, "locale");
            this.locale = JsonNullable.of(locale);
            return this;
        }

        /**
         * The locale of the profile, in the IETF BCP 47 language tag format like (ISO 639-1/2)-(ISO 3166 alpha-2)
         */
        public Builder locale(JsonNullable<String> locale) {
            Utils.checkNotNull(locale, "locale");
            this.locale = locale;
            return this;
        }

        /**
         * Individual's job title
         */
        public Builder title(String title) {
            Utils.checkNotNull(title, "title");
            this.title = JsonNullable.of(title);
            return this;
        }

        /**
         * Individual's job title
         */
        public Builder title(JsonNullable<String> title) {
            Utils.checkNotNull(title, "title");
            this.title = title;
            return this;
        }

        /**
         * URL pointing to the location of a profile image
         */
        public Builder image(String image) {
            Utils.checkNotNull(image, "image");
            this.image = JsonNullable.of(image);
            return this;
        }

        /**
         * URL pointing to the location of a profile image
         */
        public Builder image(JsonNullable<String> image) {
            Utils.checkNotNull(image, "image");
            this.image = image;
            return this;
        }

        public Builder location(ProfileLocation location) {
            Utils.checkNotNull(location, "location");
            this.location = Optional.ofNullable(location);
            return this;
        }

        public Builder location(Optional<? extends ProfileLocation> location) {
            Utils.checkNotNull(location, "location");
            this.location = location;
            return this;
        }

        /**
         * An object containing key/value pairs for any custom properties assigned to this profile
         */
        public Builder properties(ProfileUpsertQueryResourceObjectProperties properties) {
            Utils.checkNotNull(properties, "properties");
            this.properties = JsonNullable.of(properties);
            return this;
        }

        /**
         * An object containing key/value pairs for any custom properties assigned to this profile
         */
        public Builder properties(JsonNullable<? extends ProfileUpsertQueryResourceObjectProperties> properties) {
            Utils.checkNotNull(properties, "properties");
            this.properties = properties;
            return this;
        }
        
        public ProfileUpsertQueryResourceObjectAttributes build() {
            return new ProfileUpsertQueryResourceObjectAttributes(
                email,
                phoneNumber,
                externalId,
                anonymousId,
                kx,
                firstName,
                lastName,
                organization,
                locale,
                title,
                image,
                location,
                properties);
        }
    }
}

