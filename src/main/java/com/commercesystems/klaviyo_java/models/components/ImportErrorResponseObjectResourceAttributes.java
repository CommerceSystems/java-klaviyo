/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.commercesystems.klaviyo_java.models.components;


import com.commercesystems.klaviyo_java.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import org.openapitools.jackson.nullable.JsonNullable;


public class ImportErrorResponseObjectResourceAttributes {

    /**
     * A code for classifying the error type.
     */
    @JsonProperty("code")
    private String code;

    /**
     * A high-level message about the error.
     */
    @JsonProperty("title")
    private String title;

    /**
     * Specific details about the error.
     */
    @JsonProperty("detail")
    private String detail;

    @JsonProperty("source")
    private ErrorSource source;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("original_payload")
    private JsonNullable<? extends OriginalPayload> originalPayload;

    @JsonCreator
    public ImportErrorResponseObjectResourceAttributes(
            @JsonProperty("code") String code,
            @JsonProperty("title") String title,
            @JsonProperty("detail") String detail,
            @JsonProperty("source") ErrorSource source,
            @JsonProperty("original_payload") JsonNullable<? extends OriginalPayload> originalPayload) {
        Utils.checkNotNull(code, "code");
        Utils.checkNotNull(title, "title");
        Utils.checkNotNull(detail, "detail");
        Utils.checkNotNull(source, "source");
        Utils.checkNotNull(originalPayload, "originalPayload");
        this.code = code;
        this.title = title;
        this.detail = detail;
        this.source = source;
        this.originalPayload = originalPayload;
    }
    
    public ImportErrorResponseObjectResourceAttributes(
            String code,
            String title,
            String detail,
            ErrorSource source) {
        this(code, title, detail, source, JsonNullable.undefined());
    }

    /**
     * A code for classifying the error type.
     */
    @JsonIgnore
    public String code() {
        return code;
    }

    /**
     * A high-level message about the error.
     */
    @JsonIgnore
    public String title() {
        return title;
    }

    /**
     * Specific details about the error.
     */
    @JsonIgnore
    public String detail() {
        return detail;
    }

    @JsonIgnore
    public ErrorSource source() {
        return source;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public JsonNullable<OriginalPayload> originalPayload() {
        return (JsonNullable<OriginalPayload>) originalPayload;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * A code for classifying the error type.
     */
    public ImportErrorResponseObjectResourceAttributes withCode(String code) {
        Utils.checkNotNull(code, "code");
        this.code = code;
        return this;
    }

    /**
     * A high-level message about the error.
     */
    public ImportErrorResponseObjectResourceAttributes withTitle(String title) {
        Utils.checkNotNull(title, "title");
        this.title = title;
        return this;
    }

    /**
     * Specific details about the error.
     */
    public ImportErrorResponseObjectResourceAttributes withDetail(String detail) {
        Utils.checkNotNull(detail, "detail");
        this.detail = detail;
        return this;
    }

    public ImportErrorResponseObjectResourceAttributes withSource(ErrorSource source) {
        Utils.checkNotNull(source, "source");
        this.source = source;
        return this;
    }

    public ImportErrorResponseObjectResourceAttributes withOriginalPayload(OriginalPayload originalPayload) {
        Utils.checkNotNull(originalPayload, "originalPayload");
        this.originalPayload = JsonNullable.of(originalPayload);
        return this;
    }

    public ImportErrorResponseObjectResourceAttributes withOriginalPayload(JsonNullable<? extends OriginalPayload> originalPayload) {
        Utils.checkNotNull(originalPayload, "originalPayload");
        this.originalPayload = originalPayload;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ImportErrorResponseObjectResourceAttributes other = (ImportErrorResponseObjectResourceAttributes) o;
        return 
            Objects.deepEquals(this.code, other.code) &&
            Objects.deepEquals(this.title, other.title) &&
            Objects.deepEquals(this.detail, other.detail) &&
            Objects.deepEquals(this.source, other.source) &&
            Objects.deepEquals(this.originalPayload, other.originalPayload);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            code,
            title,
            detail,
            source,
            originalPayload);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ImportErrorResponseObjectResourceAttributes.class,
                "code", code,
                "title", title,
                "detail", detail,
                "source", source,
                "originalPayload", originalPayload);
    }
    
    public final static class Builder {
 
        private String code;
 
        private String title;
 
        private String detail;
 
        private ErrorSource source;
 
        private JsonNullable<? extends OriginalPayload> originalPayload = JsonNullable.undefined();  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * A code for classifying the error type.
         */
        public Builder code(String code) {
            Utils.checkNotNull(code, "code");
            this.code = code;
            return this;
        }

        /**
         * A high-level message about the error.
         */
        public Builder title(String title) {
            Utils.checkNotNull(title, "title");
            this.title = title;
            return this;
        }

        /**
         * Specific details about the error.
         */
        public Builder detail(String detail) {
            Utils.checkNotNull(detail, "detail");
            this.detail = detail;
            return this;
        }

        public Builder source(ErrorSource source) {
            Utils.checkNotNull(source, "source");
            this.source = source;
            return this;
        }

        public Builder originalPayload(OriginalPayload originalPayload) {
            Utils.checkNotNull(originalPayload, "originalPayload");
            this.originalPayload = JsonNullable.of(originalPayload);
            return this;
        }

        public Builder originalPayload(JsonNullable<? extends OriginalPayload> originalPayload) {
            Utils.checkNotNull(originalPayload, "originalPayload");
            this.originalPayload = originalPayload;
            return this;
        }
        
        public ImportErrorResponseObjectResourceAttributes build() {
            return new ImportErrorResponseObjectResourceAttributes(
                code,
                title,
                detail,
                source,
                originalPayload);
        }
    }
}

