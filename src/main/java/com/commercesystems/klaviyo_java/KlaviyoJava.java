/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.commercesystems.klaviyo_java;

import com.commercesystems.klaviyo_java.models.operations.SDKMethodInterfaces.*;
import com.commercesystems.klaviyo_java.utils.HTTPClient;
import com.commercesystems.klaviyo_java.utils.RetryConfig;
import com.commercesystems.klaviyo_java.utils.SpeakeasyHTTPClient;
import com.commercesystems.klaviyo_java.utils.Utils;
import java.lang.String;
import java.util.Map;
import java.util.Optional;

/**
 * Klaviyo API: The Klaviyo REST API. Please visit https://developers.klaviyo.com for more details.
 */
public class KlaviyoJava {


    /**
     * SERVERS contains the list of server urls available to the SDK.
     */
    public static final String[] SERVERS = {
        /**
         * Production
         */
        "https://a.klaviyo.com",
    };

    /**
     * accounts
     */
    private final Accounts accounts;

    /**
     * campaigns
     */
    private final Campaigns campaigns;

    /**
     * catalogs
     */
    private final Catalogs catalogs;

    /**
     * coupons
     */
    private final Coupons coupons;

    /**
     * data privacy
     */
    private final DataPrivacy dataPrivacy;

    /**
     * events
     */
    private final Events events;

    /**
     * flows
     */
    private final Flows flows;

    /**
     * forms
     */
    private final Forms forms;

    /**
     * images
     */
    private final Images images;

    /**
     * lists
     */
    private final Lists lists;

    /**
     * metrics
     */
    private final Metrics metrics;

    /**
     * profiles
     */
    private final Profiles profiles;

    /**
     * reporting
     */
    private final Reporting reporting;

    /**
     * reviews
     */
    private final Reviews reviews;

    /**
     * segments
     */
    private final Segments segments;

    /**
     * tags
     */
    private final Tags tags;

    /**
     * templates
     */
    private final Templates templates;

    /**
     * tracking settings
     */
    private final TrackingSettings trackingSettings;

    /**
     * webhooks
     */
    private final Webhooks webhooks;

    /**
     * client
     */
    private final Client client;

    /**
     * accounts
     */
    public Accounts accounts() {
        return accounts;
    }

    /**
     * campaigns
     */
    public Campaigns campaigns() {
        return campaigns;
    }

    /**
     * catalogs
     */
    public Catalogs catalogs() {
        return catalogs;
    }

    /**
     * coupons
     */
    public Coupons coupons() {
        return coupons;
    }

    /**
     * data privacy
     */
    public DataPrivacy dataPrivacy() {
        return dataPrivacy;
    }

    /**
     * events
     */
    public Events events() {
        return events;
    }

    /**
     * flows
     */
    public Flows flows() {
        return flows;
    }

    /**
     * forms
     */
    public Forms forms() {
        return forms;
    }

    /**
     * images
     */
    public Images images() {
        return images;
    }

    /**
     * lists
     */
    public Lists lists() {
        return lists;
    }

    /**
     * metrics
     */
    public Metrics metrics() {
        return metrics;
    }

    /**
     * profiles
     */
    public Profiles profiles() {
        return profiles;
    }

    /**
     * reporting
     */
    public Reporting reporting() {
        return reporting;
    }

    /**
     * reviews
     */
    public Reviews reviews() {
        return reviews;
    }

    /**
     * segments
     */
    public Segments segments() {
        return segments;
    }

    /**
     * tags
     */
    public Tags tags() {
        return tags;
    }

    /**
     * templates
     */
    public Templates templates() {
        return templates;
    }

    /**
     * tracking settings
     */
    public TrackingSettings trackingSettings() {
        return trackingSettings;
    }

    /**
     * webhooks
     */
    public Webhooks webhooks() {
        return webhooks;
    }

    /**
     * client
     */
    public Client client() {
        return client;
    }

    private final SDKConfiguration sdkConfiguration;

    /**
     * The Builder class allows the configuration of a new instance of the SDK.
     */
    public static class Builder {

        private final SDKConfiguration sdkConfiguration = new SDKConfiguration();

        private Builder() {
        }

        /**
         * Allows the default HTTP client to be overridden with a custom implementation.
         *
         * @param client The HTTP client to use for all requests.
         * @return The builder instance.
         */
        public Builder client(HTTPClient client) {
            this.sdkConfiguration.defaultClient = client;
            return this;
        }
        /**
         * Configures the SDK security to use the provided secret.
         *
         * @param klaviyoAPIKey The secret to use for all requests.
         * @return The builder instance.
         */
        public Builder klaviyoAPIKey(String klaviyoAPIKey) {
            this.sdkConfiguration.securitySource = SecuritySource.of(com.commercesystems.klaviyo_java.models.components.Security.builder()
              .klaviyoAPIKey(klaviyoAPIKey)
              .build());
            return this;
        }

        /**
         * Configures the SDK to use a custom security source.
         * @param securitySource The security source to use for all requests.
         * @return The builder instance.
         */
        public Builder securitySource(SecuritySource securitySource) {
            this.sdkConfiguration.securitySource = securitySource;
            return this;
        }
        
        /**
         * Overrides the default server URL.
         *
         * @param serverUrl The server URL to use for all requests.
         * @return The builder instance.
         */
        public Builder serverURL(String serverUrl) {
            this.sdkConfiguration.serverUrl = serverUrl;
            return this;
        }

        /**
         * Overrides the default server URL  with a templated URL populated with the provided parameters.
         *
         * @param serverUrl The server URL to use for all requests.
         * @param params The parameters to use when templating the URL.
         * @return The builder instance.
         */
        public Builder serverURL(String serverUrl, Map<String, String> params) {
            this.sdkConfiguration.serverUrl = Utils.templateUrl(serverUrl, params);
            return this;
        }
        
        /**
         * Overrides the default server by index.
         *
         * @param serverIdx The server to use for all requests.
         * @return The builder instance.
         */
        public Builder serverIndex(int serverIdx) {
            this.sdkConfiguration.serverIdx = serverIdx;
            this.sdkConfiguration.serverUrl = SERVERS[serverIdx];
            return this;
        }
        
        /**
         * Overrides the default configuration for retries
         *
         * @param retryConfig The retry configuration to use for all requests.
         * @return The builder instance.
         */
        public Builder retryConfig(RetryConfig retryConfig) {
            this.sdkConfiguration.retryConfig = Optional.of(retryConfig);
            return this;
        }
        // Visible for testing, will be accessed via reflection
        void _hooks(com.commercesystems.klaviyo_java.utils.Hooks hooks) {
            sdkConfiguration.setHooks(hooks);    
        }
        
        /**
         * Builds a new instance of the SDK.
         * @return The SDK instance.
         */
        public KlaviyoJava build() {
            if (sdkConfiguration.defaultClient == null) {
                sdkConfiguration.defaultClient = new SpeakeasyHTTPClient();
            }
	        if (sdkConfiguration.securitySource == null) {
	    	    sdkConfiguration.securitySource = SecuritySource.of(null);
	        }
            if (sdkConfiguration.serverUrl == null || sdkConfiguration.serverUrl.isBlank()) {
                sdkConfiguration.serverUrl = SERVERS[0];
                sdkConfiguration.serverIdx = 0;
            }
            if (sdkConfiguration.serverUrl.endsWith("/")) {
                sdkConfiguration.serverUrl = sdkConfiguration.serverUrl.substring(0, sdkConfiguration.serverUrl.length() - 1);
            }
            return new KlaviyoJava(sdkConfiguration);
        }
    }
    
    /**
     * Get a new instance of the SDK builder to configure a new instance of the SDK.
     * @return The SDK builder instance.
     */
    public static Builder builder() {
        return new Builder();
    }

    private KlaviyoJava(SDKConfiguration sdkConfiguration) {
        this.sdkConfiguration = sdkConfiguration;
        this.accounts = new Accounts(sdkConfiguration);
        this.campaigns = new Campaigns(sdkConfiguration);
        this.catalogs = new Catalogs(sdkConfiguration);
        this.coupons = new Coupons(sdkConfiguration);
        this.dataPrivacy = new DataPrivacy(sdkConfiguration);
        this.events = new Events(sdkConfiguration);
        this.flows = new Flows(sdkConfiguration);
        this.forms = new Forms(sdkConfiguration);
        this.images = new Images(sdkConfiguration);
        this.lists = new Lists(sdkConfiguration);
        this.metrics = new Metrics(sdkConfiguration);
        this.profiles = new Profiles(sdkConfiguration);
        this.reporting = new Reporting(sdkConfiguration);
        this.reviews = new Reviews(sdkConfiguration);
        this.segments = new Segments(sdkConfiguration);
        this.tags = new Tags(sdkConfiguration);
        this.templates = new Templates(sdkConfiguration);
        this.trackingSettings = new TrackingSettings(sdkConfiguration);
        this.webhooks = new Webhooks(sdkConfiguration);
        this.client = new Client(sdkConfiguration);
        this.sdkConfiguration.initialize();
    }}
