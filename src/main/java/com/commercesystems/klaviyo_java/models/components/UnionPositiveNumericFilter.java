/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.commercesystems.klaviyo_java.models.components;


import com.commercesystems.klaviyo_java.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;


public class UnionPositiveNumericFilter {

    @JsonProperty("type")
    private NumericEnum type;

    @JsonProperty("operator")
    private UnionPositiveNumericFilterOperator operator;

    @JsonProperty("value")
    private UnionPositiveNumericFilterValue value;

    @JsonCreator
    public UnionPositiveNumericFilter(
            @JsonProperty("type") NumericEnum type,
            @JsonProperty("operator") UnionPositiveNumericFilterOperator operator,
            @JsonProperty("value") UnionPositiveNumericFilterValue value) {
        Utils.checkNotNull(type, "type");
        Utils.checkNotNull(operator, "operator");
        Utils.checkNotNull(value, "value");
        this.type = type;
        this.operator = operator;
        this.value = value;
    }

    @JsonIgnore
    public NumericEnum type() {
        return type;
    }

    @JsonIgnore
    public UnionPositiveNumericFilterOperator operator() {
        return operator;
    }

    @JsonIgnore
    public UnionPositiveNumericFilterValue value() {
        return value;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public UnionPositiveNumericFilter withType(NumericEnum type) {
        Utils.checkNotNull(type, "type");
        this.type = type;
        return this;
    }

    public UnionPositiveNumericFilter withOperator(UnionPositiveNumericFilterOperator operator) {
        Utils.checkNotNull(operator, "operator");
        this.operator = operator;
        return this;
    }

    public UnionPositiveNumericFilter withValue(UnionPositiveNumericFilterValue value) {
        Utils.checkNotNull(value, "value");
        this.value = value;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UnionPositiveNumericFilter other = (UnionPositiveNumericFilter) o;
        return 
            Objects.deepEquals(this.type, other.type) &&
            Objects.deepEquals(this.operator, other.operator) &&
            Objects.deepEquals(this.value, other.value);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            type,
            operator,
            value);
    }
    
    @Override
    public String toString() {
        return Utils.toString(UnionPositiveNumericFilter.class,
                "type", type,
                "operator", operator,
                "value", value);
    }
    
    public final static class Builder {
 
        private NumericEnum type;
 
        private UnionPositiveNumericFilterOperator operator;
 
        private UnionPositiveNumericFilterValue value;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder type(NumericEnum type) {
            Utils.checkNotNull(type, "type");
            this.type = type;
            return this;
        }

        public Builder operator(UnionPositiveNumericFilterOperator operator) {
            Utils.checkNotNull(operator, "operator");
            this.operator = operator;
            return this;
        }

        public Builder value(UnionPositiveNumericFilterValue value) {
            Utils.checkNotNull(value, "value");
            this.value = value;
            return this;
        }
        
        public UnionPositiveNumericFilter build() {
            return new UnionPositiveNumericFilter(
                type,
                operator,
                value);
        }
    }
}

