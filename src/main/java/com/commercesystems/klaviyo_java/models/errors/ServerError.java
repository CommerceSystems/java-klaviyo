/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.commercesystems.klaviyo_java.models.errors;

import com.commercesystems.klaviyo_java.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.List;
import java.util.Objects;

/**
 * ServerError - Server Error
 */
@SuppressWarnings("serial")
public class ServerError extends RuntimeException {

    @JsonProperty("errors")
    private List<ServerErrorErrors> errors;

    @JsonCreator
    public ServerError(
            @JsonProperty("errors") List<ServerErrorErrors> errors) {
        Utils.checkNotNull(errors, "errors");
        this.errors = errors;
    }

    public List<ServerErrorErrors> errors(){
        return errors;
    }
    
    public final static Builder builder() {
        return new Builder();
    }

    public ServerError withErrors(List<ServerErrorErrors> errors) {
        Utils.checkNotNull(errors, "errors");
        this.errors = errors;
        return this;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ServerError other = (ServerError) o;
        return
            Objects.deepEquals(this.errors, other.errors);
    }

    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            errors);
    }

    @Override
    public String toString() {
        return Utils.toString(ServerError.class,
                "errors", errors);
    }

    public final static class Builder {

        private List<ServerErrorErrors> errors;

        private Builder() {
          // force use of static builder() method
        }

        public Builder errors(List<ServerErrorErrors> errors) {
            Utils.checkNotNull(errors, "errors");
            this.errors = errors;
            return this;
        }

        public ServerError build() {
            return new ServerError(
                errors);
        }
    }
}
