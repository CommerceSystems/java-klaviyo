/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.commercesystems.klaviyo_java.models.components;


import com.commercesystems.klaviyo_java.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.lang.SuppressWarnings;
import java.util.Objects;
import java.util.Optional;


public class PatchCampaignMessageResponseRelationships {

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("campaign")
    private Optional<? extends PatchCampaignMessageResponseCampaign> campaign;

    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("template")
    private Optional<? extends PatchCampaignMessageResponseTemplate> template;

    @JsonCreator
    public PatchCampaignMessageResponseRelationships(
            @JsonProperty("campaign") Optional<? extends PatchCampaignMessageResponseCampaign> campaign,
            @JsonProperty("template") Optional<? extends PatchCampaignMessageResponseTemplate> template) {
        Utils.checkNotNull(campaign, "campaign");
        Utils.checkNotNull(template, "template");
        this.campaign = campaign;
        this.template = template;
    }
    
    public PatchCampaignMessageResponseRelationships() {
        this(Optional.empty(), Optional.empty());
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<PatchCampaignMessageResponseCampaign> campaign() {
        return (Optional<PatchCampaignMessageResponseCampaign>) campaign;
    }

    @SuppressWarnings("unchecked")
    @JsonIgnore
    public Optional<PatchCampaignMessageResponseTemplate> template() {
        return (Optional<PatchCampaignMessageResponseTemplate>) template;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public PatchCampaignMessageResponseRelationships withCampaign(PatchCampaignMessageResponseCampaign campaign) {
        Utils.checkNotNull(campaign, "campaign");
        this.campaign = Optional.ofNullable(campaign);
        return this;
    }

    public PatchCampaignMessageResponseRelationships withCampaign(Optional<? extends PatchCampaignMessageResponseCampaign> campaign) {
        Utils.checkNotNull(campaign, "campaign");
        this.campaign = campaign;
        return this;
    }

    public PatchCampaignMessageResponseRelationships withTemplate(PatchCampaignMessageResponseTemplate template) {
        Utils.checkNotNull(template, "template");
        this.template = Optional.ofNullable(template);
        return this;
    }

    public PatchCampaignMessageResponseRelationships withTemplate(Optional<? extends PatchCampaignMessageResponseTemplate> template) {
        Utils.checkNotNull(template, "template");
        this.template = template;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        PatchCampaignMessageResponseRelationships other = (PatchCampaignMessageResponseRelationships) o;
        return 
            Objects.deepEquals(this.campaign, other.campaign) &&
            Objects.deepEquals(this.template, other.template);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            campaign,
            template);
    }
    
    @Override
    public String toString() {
        return Utils.toString(PatchCampaignMessageResponseRelationships.class,
                "campaign", campaign,
                "template", template);
    }
    
    public final static class Builder {
 
        private Optional<? extends PatchCampaignMessageResponseCampaign> campaign = Optional.empty();
 
        private Optional<? extends PatchCampaignMessageResponseTemplate> template = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder campaign(PatchCampaignMessageResponseCampaign campaign) {
            Utils.checkNotNull(campaign, "campaign");
            this.campaign = Optional.ofNullable(campaign);
            return this;
        }

        public Builder campaign(Optional<? extends PatchCampaignMessageResponseCampaign> campaign) {
            Utils.checkNotNull(campaign, "campaign");
            this.campaign = campaign;
            return this;
        }

        public Builder template(PatchCampaignMessageResponseTemplate template) {
            Utils.checkNotNull(template, "template");
            this.template = Optional.ofNullable(template);
            return this;
        }

        public Builder template(Optional<? extends PatchCampaignMessageResponseTemplate> template) {
            Utils.checkNotNull(template, "template");
            this.template = template;
            return this;
        }
        
        public PatchCampaignMessageResponseRelationships build() {
            return new PatchCampaignMessageResponseRelationships(
                campaign,
                template);
        }
    }
}

