/* 
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

package com.commercesystems.klaviyo_java.models.components;


import com.commercesystems.klaviyo_java.utils.Utils;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.lang.Override;
import java.lang.String;
import java.util.Objects;


public class ProfileImportJobCreateQueryResourceObjectAttributes {

    /**
     * Array of profiles to create or update
     */
    @JsonProperty("profiles")
    private Profiles profiles;

    @JsonCreator
    public ProfileImportJobCreateQueryResourceObjectAttributes(
            @JsonProperty("profiles") Profiles profiles) {
        Utils.checkNotNull(profiles, "profiles");
        this.profiles = profiles;
    }

    /**
     * Array of profiles to create or update
     */
    @JsonIgnore
    public Profiles profiles() {
        return profiles;
    }

    public final static Builder builder() {
        return new Builder();
    }

    /**
     * Array of profiles to create or update
     */
    public ProfileImportJobCreateQueryResourceObjectAttributes withProfiles(Profiles profiles) {
        Utils.checkNotNull(profiles, "profiles");
        this.profiles = profiles;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ProfileImportJobCreateQueryResourceObjectAttributes other = (ProfileImportJobCreateQueryResourceObjectAttributes) o;
        return 
            Objects.deepEquals(this.profiles, other.profiles);
    }
    
    @Override
    public int hashCode() {
        return Objects.hash(
            profiles);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ProfileImportJobCreateQueryResourceObjectAttributes.class,
                "profiles", profiles);
    }
    
    public final static class Builder {
 
        private Profiles profiles;  
        
        private Builder() {
          // force use of static builder() method
        }

        /**
         * Array of profiles to create or update
         */
        public Builder profiles(Profiles profiles) {
            Utils.checkNotNull(profiles, "profiles");
            this.profiles = profiles;
            return this;
        }
        
        public ProfileImportJobCreateQueryResourceObjectAttributes build() {
            return new ProfileImportJobCreateQueryResourceObjectAttributes(
                profiles);
        }
    }
}

